<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - PDOStatement - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#queryString">$queryString</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#bindColumn">bindColumn</a>
          </li>
          <li>
            <a href="#bindParam">bindParam</a>
          </li>
          <li>
            <a href="#bindValue">bindValue</a>
          </li>
          <li>
            <a href="#closeCursor">closeCursor</a>
          </li>
          <li>
            <a href="#columnCount">columnCount</a>
          </li>
          <li>
            <a href="#debugDumpParams">debugDumpParams</a>
          </li>
          <li>
            <a href="#errorCode">errorCode</a>
          </li>
          <li>
            <a href="#errorInfo">errorInfo</a>
          </li>
          <li>
            <a href="#execute">execute</a>
          </li>
          <li>
            <a href="#fetch">fetch</a>
          </li>
          <li>
            <a href="#fetchAll">fetchAll</a>
          </li>
          <li>
            <a href="#fetchColumn">fetchColumn</a>
          </li>
          <li>
            <a href="#fetchObject">fetchObject</a>
          </li>
          <li>
            <a href="#getAttribute">getAttribute</a>
          </li>
          <li>
            <a href="#getColumnMeta">getColumnMeta</a>
          </li>
          <li>
            <a href="#nextRowset">nextRowset</a>
          </li>
          <li>
            <a href="#rowCount">rowCount</a>
          </li>
          <li>
            <a href="#setAttribute">setAttribute</a>
          </li>
          <li>
            <a href="#setFetchMode">setFetchMode</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>PDOStatement</h2>
        <ul class="fileinfos"/>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Traversable.xhtml">Traversable</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="queryString"/>
            <h4>string 
                
                $queryString</h4>
            <ul class="varlist">
              <li>
       Used query string.
      </li>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="bindColumn"/>
            <h4>bindColumn<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $column</strong>, <span class="param-type">invalid method call</span><strong> $param</strong>, [<span class="param-type"/><strong> $type</strong>, [<span class="param-type"/><strong> $maxlen</strong>, [<span class="param-type">invalid method call</span><strong> $driverdata</strong> ] ] ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Bind a column to a PHP variable
  <pre>PDOStatement::bindColumn arranges to have a particular variable bound to a given column in the result-set from a query. Each call to PDOStatement::fetch or PDOStatement::fetchAll will update all the variables that are bound to columns.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="bindParam"/>
            <h4>bindParam<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $parameter</strong>, <span class="param-type">invalid method call</span><strong> $variable</strong>, [<span class="param-type"/><strong> $data_type</strong>, [<span class="param-type"/><strong> $length</strong>, [<span class="param-type">invalid method call</span><strong> $driver_options</strong> ] ] ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Binds a parameter to the specified variable name
  <pre>Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was use to prepare the statement. Unlike PDOStatement::bindValue, the variable is bound as a reference and will only be evaluated at the time that PDOStatement::execute is called.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="bindValue"/>
            <h4>bindValue<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $parameter</strong>, <span class="param-type">invalid method call</span><strong> $value</strong>, [<span class="param-type"/><strong> $data_type</strong> ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Binds a value to a parameter
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="closeCursor"/>
            <h4>closeCursor<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Closes the cursor, enabling the statement to be executed again.
  <pre>PDOStatement::closeCursor frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="columnCount"/>
            <h4>columnCount<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Returns the number of columns in the result set
  <pre>Use PDOStatement::columnCount to return the number of columns in the result set represented by the PDOStatement object.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="debugDumpParams"/>
            <h4>debugDumpParams<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Dump an SQL prepared command
  <pre>Dumps the informations contained by a prepared statement directly on the output. It will provide the SQL query in use, the number of parameters used (Params), the list of parameters, with their name, type (paramtype) as an integer, their key name or position, the value, and the position in the query (if this is supported by the PDO driver, otherwise, it will be -1).</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="errorCode"/>
            <h4>errorCode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Fetch the SQLSTATE associated with the last operation on the statement handle
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="errorInfo"/>
            <h4>errorInfo<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Fetch extended error information associated with the last operation on the statement handle
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="execute"/>
            <h4>execute<span style="font-size:90%;">( [<span class="param-type">invalid method call</span><strong> $input_parameters</strong> ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Executes a prepared statement
  <pre>Execute the prepared statement. If the prepared statement included parameter markers, you must either: call PDOStatement::bindParam to bind PHP variables to the parameter markers: bound variables pass their value as input and receive the output value, if any, of their associated parameter markers or pass an array of input-only parameter values</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fetch"/>
            <h4>fetch<span style="font-size:90%;">( [<span class="param-type"/><strong> $fetch_style</strong>, [<span class="param-type"/><strong> $cursor_orientation</strong>, [<span class="param-type"/><strong> $cursor_offset</strong> ] ] ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Fetches the next row from a result set
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fetchAll"/>
            <h4>fetchAll<span style="font-size:90%;">( [<span class="param-type"/><strong> $fetch_style</strong>, [<span class="param-type">invalid method call</span><strong> $fetch_argument</strong>, [<span class="param-type">invalid method call</span><strong> $ctor_args</strong> ] ] ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Returns an array containing all of the result set rows
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fetchColumn"/>
            <h4>fetchColumn<span style="font-size:90%;">( [<span class="param-type"/><strong> $column_number</strong> ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Returns a single column from the next row of a result set
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fetchObject"/>
            <h4>fetchObject<span style="font-size:90%;">( [<span class="param-type">string</span><strong> $class_name</strong>, [<span class="param-type">invalid method call</span><strong> $ctor_args</strong> ] ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Fetches the next row and returns it as an object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttribute"/>
            <h4>getAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $attribute</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Retrieve a statement attribute
  <pre>Gets an attribute of the statement. Currently, no generic attributes exist but only driver specific: PDO::ATTR_CURSOR_NAME (Firebird and ODBC specific): Get the name of cursor for UPDATE ... WHERE CURRENT OF.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getColumnMeta"/>
            <h4>getColumnMeta<span style="font-size:90%;">( <span class="param-type"/><strong> $column</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Returns metadata for a column in a result set
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="nextRowset"/>
            <h4>nextRowset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Advances to the next rowset in a multi-rowset statement handle
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="rowCount"/>
            <h4>rowCount<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Returns the number of rows affected by the last SQL statement
  <pre>PDOStatement::rowCount returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding PDOStatement object.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttribute"/>
            <h4>setAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $attribute</strong>, <span class="param-type">invalid method call</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Set a statement attribute
  <pre>Sets an attribute on the statement. Currently, no generic attributes are set but only driver specific: PDO::ATTR_CURSOR_NAME (Firebird and ODBC specific): Set the name of cursor for UPDATE ... WHERE CURRENT OF.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFetchMode"/>
            <h4>setFetchMode<span style="font-size:90%;">( <span class="param-type"/><strong> $mode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Set the default fetch mode for this statement
  </li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
