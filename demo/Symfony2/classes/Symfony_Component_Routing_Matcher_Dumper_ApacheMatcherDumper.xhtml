<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Routing\Matcher\Dumper\ApacheMatcherDumper - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#dump">dump</a>
          </li>
          <li>
            <a href="#dumpRoute">dumpRoute</a>
          </li>
          <li>
            <a href="#escape">escape</a>
          </li>
          <li>
            <a href="#getRouteMethods">getRouteMethods</a>
          </li>
          <li>
            <a href="#getRoutes">getRoutes</a>
          </li>
          <li>
            <a href="#regexToApacheRegex">regexToApacheRegex</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Routing\Matcher\Dumper\</span>ApacheMatcherDumper</h2>
        <div class="file-notice">
          <p>Dumps a set of Apache mod_rewrite rules.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Kris Wallsmith &lt;kris@symfony.com&gt;</li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_RouteCollection.xhtml">Symfony\Component\Routing\RouteCollection</a></span><strong> $routes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$routes</code> - The RouteCollection to dump</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="dump"/>
            <h4><span class="label public">public</span>dump<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Dumps a set of Apache mod_rewrite rules.<pre>Available options:

 * script_name: The script name (app.php by default)
 * base_uri:    The base URI ("" by default)</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - An array of options</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A string to be used as Apache rewrite rules</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\LogicException When the route regex is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRoutes"/>
            <h4><span class="label public">public</span>getRoutes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="dumpRoute"/>
            <h4><span class="label private">private</span>dumpRoute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><a href="../classes/Symfony_Component_Routing_Route.xhtml">Symfony\Component\Routing\Route</a></span><strong> $route</strong>, <span class="param-type">Array</span><strong> $options</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $hostRegexUnique</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Dumps a single route</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - Route name</li>
                <li><code>$route</code> - The route</li>
                <li><code>$options</code> - Options</li>
                <li><code>$hostRegexUnique</code> - Unique identifier for the host regex</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The compiled route</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="escape"/>
            <h4><span class="label true">true</span><span class="label private">private</span>escape<span style="font-size:90%;">( <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $char</strong>, <span class="param-type">string</span><strong> $with</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Escapes a string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$string</code> - The string to be escaped</li>
                <li><code>$char</code> - The character to be escaped</li>
                <li><code>$with</code> - The character to be used for escaping</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The escaped string</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRouteMethods"/>
            <h4><span class="label private">private</span>getRouteMethods<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_Route.xhtml">Symfony\Component\Routing\Route</a></span><strong> $route</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns methods allowed for a route</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$route</code> - The route</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The methods</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="regexToApacheRegex"/>
            <h4><span class="label private">private</span>regexToApacheRegex<span style="font-size:90%;">( <span class="param-type">string</span><strong> $regex</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts a regex to make it suitable for mod_rewrite</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$regex</code> - The regex</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The converted regex</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
