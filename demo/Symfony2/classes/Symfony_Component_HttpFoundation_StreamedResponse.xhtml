<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpFoundation\StreamedResponse - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#callback">$callback</a>
          </li>
          <li>
            <a href="#streamed">$streamed</a>
          </li>
          <li>
            <a href="#headers">$headers</a>
          </li>
          <li>
            <a href="#content">$content</a>
          </li>
          <li>
            <a href="#version">$version</a>
          </li>
          <li>
            <a href="#statusCode">$statusCode</a>
          </li>
          <li>
            <a href="#statusText">$statusText</a>
          </li>
          <li>
            <a href="#charset">$charset</a>
          </li>
          <li>
            <a href="#statusTexts">$statusTexts</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__clone">__clone</a>
          </li>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__toString">__toString</a>
          </li>
          <li>
            <a href="#create">create</a>
          </li>
          <li>
            <a href="#create">create</a>
          </li>
          <li>
            <a href="#ensureIEOverSSLCompatibility">ensureIEOverSSLCompatibility</a>
          </li>
          <li>
            <a href="#expire">expire</a>
          </li>
          <li>
            <a href="#getAge">getAge</a>
          </li>
          <li>
            <a href="#getCharset">getCharset</a>
          </li>
          <li>
            <a href="#getContent">getContent</a>
          </li>
          <li>
            <a href="#getContent">getContent</a>
          </li>
          <li>
            <a href="#getDate">getDate</a>
          </li>
          <li>
            <a href="#getEtag">getEtag</a>
          </li>
          <li>
            <a href="#getExpires">getExpires</a>
          </li>
          <li>
            <a href="#getLastModified">getLastModified</a>
          </li>
          <li>
            <a href="#getMaxAge">getMaxAge</a>
          </li>
          <li>
            <a href="#getProtocolVersion">getProtocolVersion</a>
          </li>
          <li>
            <a href="#getStatusCode">getStatusCode</a>
          </li>
          <li>
            <a href="#getTtl">getTtl</a>
          </li>
          <li>
            <a href="#getVary">getVary</a>
          </li>
          <li>
            <a href="#hasVary">hasVary</a>
          </li>
          <li>
            <a href="#isCacheable">isCacheable</a>
          </li>
          <li>
            <a href="#isClientError">isClientError</a>
          </li>
          <li>
            <a href="#isEmpty">isEmpty</a>
          </li>
          <li>
            <a href="#isForbidden">isForbidden</a>
          </li>
          <li>
            <a href="#isFresh">isFresh</a>
          </li>
          <li>
            <a href="#isInformational">isInformational</a>
          </li>
          <li>
            <a href="#isInvalid">isInvalid</a>
          </li>
          <li>
            <a href="#isNotFound">isNotFound</a>
          </li>
          <li>
            <a href="#isNotModified">isNotModified</a>
          </li>
          <li>
            <a href="#isOk">isOk</a>
          </li>
          <li>
            <a href="#isRedirect">isRedirect</a>
          </li>
          <li>
            <a href="#isRedirection">isRedirection</a>
          </li>
          <li>
            <a href="#isServerError">isServerError</a>
          </li>
          <li>
            <a href="#isSuccessful">isSuccessful</a>
          </li>
          <li>
            <a href="#isValidateable">isValidateable</a>
          </li>
          <li>
            <a href="#mustRevalidate">mustRevalidate</a>
          </li>
          <li>
            <a href="#prepare">prepare</a>
          </li>
          <li>
            <a href="#prepare">prepare</a>
          </li>
          <li>
            <a href="#send">send</a>
          </li>
          <li>
            <a href="#sendContent">sendContent</a>
          </li>
          <li>
            <a href="#sendContent">sendContent</a>
          </li>
          <li>
            <a href="#sendHeaders">sendHeaders</a>
          </li>
          <li>
            <a href="#setCache">setCache</a>
          </li>
          <li>
            <a href="#setCallback">setCallback</a>
          </li>
          <li>
            <a href="#setCharset">setCharset</a>
          </li>
          <li>
            <a href="#setClientTtl">setClientTtl</a>
          </li>
          <li>
            <a href="#setContent">setContent</a>
          </li>
          <li>
            <a href="#setContent">setContent</a>
          </li>
          <li>
            <a href="#setDate">setDate</a>
          </li>
          <li>
            <a href="#setEtag">setEtag</a>
          </li>
          <li>
            <a href="#setExpires">setExpires</a>
          </li>
          <li>
            <a href="#setLastModified">setLastModified</a>
          </li>
          <li>
            <a href="#setMaxAge">setMaxAge</a>
          </li>
          <li>
            <a href="#setNotModified">setNotModified</a>
          </li>
          <li>
            <a href="#setPrivate">setPrivate</a>
          </li>
          <li>
            <a href="#setProtocolVersion">setProtocolVersion</a>
          </li>
          <li>
            <a href="#setPublic">setPublic</a>
          </li>
          <li>
            <a href="#setSharedMaxAge">setSharedMaxAge</a>
          </li>
          <li>
            <a href="#setStatusCode">setStatusCode</a>
          </li>
          <li>
            <a href="#setTtl">setTtl</a>
          </li>
          <li>
            <a href="#setVary">setVary</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpFoundation\</span>StreamedResponse</h2>
        <div class="file-notice">
          <p>StreamedResponse represents a streamed HTTP response.</p>
          <p>
            <pre>A StreamedResponse uses a callback for its content.

The callback should use the standard PHP functions like echo
to stream the response back to the client. The flush() method
can also be used if needed.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="callback"/>
            <h4><span class="label protected">protected</span>
                $callback</h4>
          </li>
          <li>
            <a name="streamed"/>
            <h4><span class="label protected">protected</span>
                $streamed</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $callback</strong>, <span class="param-type">integer</span><strong> $status</strong>, <span class="param-type">Array</span><strong> $headers</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$callback</code> - A valid PHP callback</li>
                <li><code>$status</code> - The response status code</li>
                <li><code>$headers</code> - An array of response headers</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__clone"/>
            <h4><span class="label public">public</span>__clone<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clones the current Response instance.</li>
            </p>
          </li>
          <li>
            <a name="__toString"/>
            <h4><span class="label public">public</span>__toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the Response as an HTTP string.<pre>The string representation of the Response is the same as the
one that will be sent to the client only if the prepare() method
has been called before.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Response as an HTTP string</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="create"/>
            <h4><span class="label true">true</span><span class="label public">public</span>create<span style="font-size:90%;">( <span class="param-type"/><strong> $callback</strong>, <span class="param-type">integer</span><strong> $status</strong>, <span class="param-type">Array</span><strong> $headers</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="create"/>
            <h4><span class="label true">true</span><span class="label public">public</span>create<span style="font-size:90%;">( <span class="param-type">string</span><strong> $content</strong>, <span class="param-type">integer</span><strong> $status</strong>, <span class="param-type">Array</span><strong> $headers</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Factory method for chainability<pre>Example:

    return Response::create($body, 200)
        -&gt;setSharedMaxAge(300);</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$content</code> - The response content</li>
                <li><code>$status</code> - The response status code</li>
                <li><code>$headers</code> - An array of response headers</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="expire"/>
            <h4><span class="label public">public</span>expire<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Marks the response stale by setting the Age header to be equal to the maximum age of the response.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAge"/>
            <h4><span class="label public">public</span>getAge<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the age of the response.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The age of the response in seconds</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCharset"/>
            <h4><span class="label public">public</span>getCharset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the response charset.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Character set</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContent"/>
            <h4><span class="label public">public</span>getContent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContent"/>
            <h4><span class="label public">public</span>getContent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the current response content.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Content</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDate"/>
            <h4><span class="label public">public</span>getDate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the Date header as a DateTime instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A \DateTime instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException When the header is not parseable</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getEtag"/>
            <h4><span class="label public">public</span>getEtag<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the literal value of the ETag HTTP header.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The ETag HTTP header or null if it does not exist</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExpires"/>
            <h4><span class="label public">public</span>getExpires<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of the Expires header as a DateTime instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A DateTime instance or null if the header does not exist</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLastModified"/>
            <h4><span class="label public">public</span>getLastModified<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the Last-Modified HTTP header as a DateTime instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A DateTime instance or null if the header does not exist</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException When the HTTP header is not parseable</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMaxAge"/>
            <h4><span class="label public">public</span>getMaxAge<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the number of seconds after the time specified in the response's Date header when the response should no longer be considered fresh.<pre>First, it checks for a s-maxage directive, then a max-age directive, and then it falls
back on an expires header. It returns null when no maximum age can be established.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Number of seconds</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getProtocolVersion"/>
            <h4><span class="label public">public</span>getProtocolVersion<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the HTTP protocol version.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The HTTP protocol version</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getStatusCode"/>
            <h4><span class="label public">public</span>getStatusCode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the status code for the current web response.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Status code</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTtl"/>
            <h4><span class="label public">public</span>getTtl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the response's time-to-live in seconds.<pre>It returns null when no freshness information is present in the response.

When the responses TTL is &lt;= 0, the response may not be served from cache without first
revalidating with the origin.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The TTL in seconds</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getVary"/>
            <h4><span class="label public">public</span>getVary<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array of header names given in the Vary header.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Vary names</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasVary"/>
            <h4><span class="label public">public</span>hasVary<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the response includes a Vary header.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the response includes a Vary header, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isCacheable"/>
            <h4><span class="label public">public</span>isCacheable<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the response is worth caching under any circumstance.<pre>Responses marked "private" with an explicit Cache-Control directive are
considered uncacheable.

Responses with neither a freshness lifetime (Expires, max-age) nor cache
validator (Last-Modified, ETag) are considered uncacheable.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the response is worth caching, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isClientError"/>
            <h4><span class="label public">public</span>isClientError<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is there a client error?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isEmpty"/>
            <h4><span class="label public">public</span>isEmpty<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the response empty?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isForbidden"/>
            <h4><span class="label public">public</span>isForbidden<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the response forbidden?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isFresh"/>
            <h4><span class="label public">public</span>isFresh<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the response is "fresh".<pre>Fresh responses may be served from cache without any interaction with the
origin. A response is considered fresh when it includes a Cache-Control/max-age
indicator or Expires header and the calculated age is less than the freshness lifetime.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the response is fresh, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isInformational"/>
            <h4><span class="label public">public</span>isInformational<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is response informative?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isInvalid"/>
            <h4><span class="label public">public</span>isInvalid<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is response invalid?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNotFound"/>
            <h4><span class="label public">public</span>isNotFound<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the response a not found error?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNotModified"/>
            <h4><span class="label public">public</span>isNotModified<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines if the Response validators (ETag, Last-Modified) match a conditional value specified in the Request.<pre>If the Response is not modified, it sets the status code to 304 and
removes the actual content by calling the setNotModified() method.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the Response validators match the Request, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isOk"/>
            <h4><span class="label public">public</span>isOk<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the response OK?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRedirect"/>
            <h4><span class="label public">public</span>isRedirect<span style="font-size:90%;">( <span class="param-type">string</span><strong> $location</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the response a redirect of some form?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$location</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRedirection"/>
            <h4><span class="label public">public</span>isRedirection<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the response a redirect?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isServerError"/>
            <h4><span class="label public">public</span>isServerError<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Was there a server side error?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSuccessful"/>
            <h4><span class="label public">public</span>isSuccessful<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is response successful?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isValidateable"/>
            <h4><span class="label public">public</span>isValidateable<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the response includes headers that can be used to validate the response with the origin server using a conditional GET request.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the response is validateable, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="mustRevalidate"/>
            <h4><span class="label public">public</span>mustRevalidate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the response must be revalidated by caches.<pre>This method indicates that the response must not be served stale by a
cache in any circumstance without first revalidating with the origin.
When present, the TTL of the response should not be overridden to be
greater than the value provided by the origin.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the response must be revalidated by a cache, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepare"/>
            <h4><span class="label public">public</span>prepare<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="prepare"/>
            <h4><span class="label public">public</span>prepare<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepares the Response before it is sent to the client.<pre>This method tweaks the Response to ensure that it is
compliant with RFC 2616. Most of the changes are based on
the Request that is "associated" with this Response.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current response.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="send"/>
            <h4><span class="label public">public</span>send<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sends HTTP headers and content.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="sendContent"/>
            <h4><span class="label public">public</span>sendContent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}<pre>This method only sends the content once.</pre></li>
            </p>
          </li>
          <li>
            <a name="sendContent"/>
            <h4><span class="label public">public</span>sendContent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sends content for the current web response.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="sendHeaders"/>
            <h4><span class="label public">public</span>sendHeaders<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sends HTTP headers.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCache"/>
            <h4><span class="label public">public</span>setCache<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the response's cache headers (validation and/or expiration).<pre>Available options are: etag, last_modified, max_age, s_maxage, private, and public.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - An array of cache options</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCallback"/>
            <h4><span class="label public">public</span>setCallback<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $callback</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the PHP callback associated with this Response.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$callback</code> - A valid PHP callback</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\LogicException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCharset"/>
            <h4><span class="label public">public</span>setCharset<span style="font-size:90%;">( <span class="param-type">string</span><strong> $charset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the response charset.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$charset</code> - Character set</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setClientTtl"/>
            <h4><span class="label public">public</span>setClientTtl<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $seconds</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the response's time-to-live for private/client caches.<pre>This method adjusts the Cache-Control/max-age directive.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$seconds</code> - Number of seconds</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setContent"/>
            <h4><span class="label public">public</span>setContent<span style="font-size:90%;">( <span class="param-type"/><strong> $content</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\LogicException when the content is not null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setContent"/>
            <h4><span class="label public">public</span>setContent<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $content</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the response content.<pre>Valid types are strings, numbers, and objects that implement a __toString() method.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$content</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\UnexpectedValueException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDate"/>
            <h4><span class="label public">public</span>setDate<span style="font-size:90%;">( <span class="param-type"><span title="DateTime">DateTime</span></span><strong> $date</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Date header.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$date</code> - A \DateTime instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setEtag"/>
            <h4><span class="label public">public</span>setEtag<span style="font-size:90%;">( <span class="param-type"><span title="string|null">string|null</span></span><strong> $etag</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $weak</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the ETag value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$etag</code> - The ETag unique identifier or null to remove the header</li>
                <li><code>$weak</code> - Whether you want a weak ETag or not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setExpires"/>
            <h4><span class="label public">public</span>setExpires<span style="font-size:90%;">( <span class="param-type"><span title="DateTime">DateTime</span></span><strong> $date</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Expires HTTP header with a DateTime instance.<pre>Passing null as value will remove the header.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$date</code> - A \DateTime instance or null to remove the header</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLastModified"/>
            <h4><span class="label public">public</span>setLastModified<span style="font-size:90%;">( <span class="param-type"><span title="DateTime">DateTime</span></span><strong> $date</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Last-Modified HTTP header with a DateTime instance.<pre>Passing null as value will remove the header.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$date</code> - A \DateTime instance or null to remove the header</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMaxAge"/>
            <h4><span class="label public">public</span>setMaxAge<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the number of seconds after which the response should no longer be considered fresh.<pre>This methods sets the Cache-Control max-age directive.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - Number of seconds</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNotModified"/>
            <h4><span class="label public">public</span>setNotModified<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Modifies the response so that it conforms to the rules defined for a 304 status code.<pre>This sets the status, removes the body, and discards any headers
that MUST NOT be included in 304 responses.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPrivate"/>
            <h4><span class="label public">public</span>setPrivate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Marks the response as "private".<pre>It makes the response ineligible for serving other clients.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setProtocolVersion"/>
            <h4><span class="label public">public</span>setProtocolVersion<span style="font-size:90%;">( <span class="param-type">string</span><strong> $version</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the HTTP protocol version (1.0 or 1.1).</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$version</code> - The HTTP protocol version</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPublic"/>
            <h4><span class="label public">public</span>setPublic<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Marks the response as "public".<pre>It makes the response eligible for serving other clients.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSharedMaxAge"/>
            <h4><span class="label public">public</span>setSharedMaxAge<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the number of seconds after which the response should no longer be considered fresh by shared caches.<pre>This methods sets the Cache-Control s-maxage directive.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - Number of seconds</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setStatusCode"/>
            <h4><span class="label public">public</span>setStatusCode<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $code</strong>, <span class="param-type">mixed</span><strong> $text</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the response status code.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$code</code> - HTTP status code</li>
                <li><code>$text</code> - HTTP status text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When the HTTP status code is not valid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTtl"/>
            <h4><span class="label public">public</span>setTtl<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $seconds</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the response's time-to-live for shared caches.<pre>This method adjusts the Cache-Control/s-maxage directive.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$seconds</code> - Number of seconds</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setVary"/>
            <h4><span class="label public">public</span>setVary<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $headers</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $replace</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Vary header.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$headers</code> - </li>
                <li><code>$replace</code> - Whether to replace the actual value of not (true by default)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ensureIEOverSSLCompatibility"/>
            <h4><span class="label protected">protected</span>ensureIEOverSSLCompatibility<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if we need to remove Cache-Control for ssl encrypted downloads when using IE &lt; 9</li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
