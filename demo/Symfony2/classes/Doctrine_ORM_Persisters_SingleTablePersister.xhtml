<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\ORM\Persisters\SingleTablePersister - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#_getDiscriminatorColumnTableName">_getDiscriminatorColumnTableName</a>
          </li>
          <li>
            <a href="#_getDiscriminatorColumnTableName">_getDiscriminatorColumnTableName</a>
          </li>
          <li>
            <a href="#_getInsertColumnList">_getInsertColumnList</a>
          </li>
          <li>
            <a href="#_getInsertColumnList">_getInsertColumnList</a>
          </li>
          <li>
            <a href="#_getInsertSQL">_getInsertSQL</a>
          </li>
          <li>
            <a href="#_getOrderBySQL">_getOrderBySQL</a>
          </li>
          <li>
            <a href="#_getSQLTableAlias">_getSQLTableAlias</a>
          </li>
          <li>
            <a href="#_getSQLTableAlias">_getSQLTableAlias</a>
          </li>
          <li>
            <a href="#_getSelectColumnAssociationSQL">_getSelectColumnAssociationSQL</a>
          </li>
          <li>
            <a href="#_getSelectColumnListSQL">_getSelectColumnListSQL</a>
          </li>
          <li>
            <a href="#_getSelectColumnListSQL">_getSelectColumnListSQL</a>
          </li>
          <li>
            <a href="#_getSelectColumnSQL">_getSelectColumnSQL</a>
          </li>
          <li>
            <a href="#_getSelectColumnSQL">_getSelectColumnSQL</a>
          </li>
          <li>
            <a href="#_getSelectConditionCriteriaSQL">_getSelectConditionCriteriaSQL</a>
          </li>
          <li>
            <a href="#_getSelectConditionCriteriaSQL">_getSelectConditionCriteriaSQL</a>
          </li>
          <li>
            <a href="#_getSelectConditionDiscriminatorValueSQL">_getSelectConditionDiscriminatorValueSQL</a>
          </li>
          <li>
            <a href="#_getSelectConditionSQL">_getSelectConditionSQL</a>
          </li>
          <li>
            <a href="#_getSelectConditionSQL">_getSelectConditionSQL</a>
          </li>
          <li>
            <a href="#_getSelectEntitiesSQL">_getSelectEntitiesSQL</a>
          </li>
          <li>
            <a href="#_getSelectManyToManyJoinSQL">_getSelectManyToManyJoinSQL</a>
          </li>
          <li>
            <a href="#_prepareInsertData">_prepareInsertData</a>
          </li>
          <li>
            <a href="#_prepareInsertData">_prepareInsertData</a>
          </li>
          <li>
            <a href="#_prepareUpdateData">_prepareUpdateData</a>
          </li>
          <li>
            <a href="#_updateTable">_updateTable</a>
          </li>
          <li>
            <a href="#addInsert">addInsert</a>
          </li>
          <li>
            <a href="#assignDefaultVersionValue">assignDefaultVersionValue</a>
          </li>
          <li>
            <a href="#delete">delete</a>
          </li>
          <li>
            <a href="#deleteJoinTableRecords">deleteJoinTableRecords</a>
          </li>
          <li>
            <a href="#executeInserts">executeInserts</a>
          </li>
          <li>
            <a href="#exists">exists</a>
          </li>
          <li>
            <a href="#fetchVersionValue">fetchVersionValue</a>
          </li>
          <li>
            <a href="#generateFilterConditionSQL">generateFilterConditionSQL</a>
          </li>
          <li>
            <a href="#generateFilterConditionSQL">generateFilterConditionSQL</a>
          </li>
          <li>
            <a href="#getClassMetadata">getClassMetadata</a>
          </li>
          <li>
            <a href="#getJoinSQLForJoinColumns">getJoinSQLForJoinColumns</a>
          </li>
          <li>
            <a href="#getLockTablesSql">getLockTablesSql</a>
          </li>
          <li>
            <a href="#getManyToManyCollection">getManyToManyCollection</a>
          </li>
          <li>
            <a href="#getOneToManyCollection">getOneToManyCollection</a>
          </li>
          <li>
            <a href="#getOwningTable">getOwningTable</a>
          </li>
          <li>
            <a href="#getSQLColumnAlias">getSQLColumnAlias</a>
          </li>
          <li>
            <a href="#getSelectConditionStatementColumnSQL">getSelectConditionStatementColumnSQL</a>
          </li>
          <li>
            <a href="#getSelectConditionStatementSQL">getSelectConditionStatementSQL</a>
          </li>
          <li>
            <a href="#getSelectJoinColumnSQL">getSelectJoinColumnSQL</a>
          </li>
          <li>
            <a href="#load">load</a>
          </li>
          <li>
            <a href="#loadAll">loadAll</a>
          </li>
          <li>
            <a href="#loadCriteria">loadCriteria</a>
          </li>
          <li>
            <a href="#loadManyToManyCollection">loadManyToManyCollection</a>
          </li>
          <li>
            <a href="#loadOneToManyCollection">loadOneToManyCollection</a>
          </li>
          <li>
            <a href="#loadOneToOneEntity">loadOneToOneEntity</a>
          </li>
          <li>
            <a href="#lock">lock</a>
          </li>
          <li>
            <a href="#refresh">refresh</a>
          </li>
          <li>
            <a href="#update">update</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\ORM\Persisters\</span>SingleTablePersister</h2>
        <div class="file-notice">
          <p>Persister for entities that participate in a hierarchy mapped with the SINGLE_TABLE strategy.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Roman Borschel &lt;roman@code-factory.org&gt;</li>
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
          <li><b>Author: </b>Alexander &lt;iam.asm89@gmail.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_EntityManager.xhtml">Doctrine\ORM\EntityManager</a></span><strong> $em</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes a new &lt;tt&gt;BasicEntityPersister&lt;/tt&gt; that uses the given EntityManager and persists instances of the class described by the given ClassMetadata descriptor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$em</code> - </li>
                <li><code>$class</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addInsert"/>
            <h4><span class="label public">public</span>addInsert<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an entity to the queued insertions.<pre>The entity remains queued until  is invoked.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity to queue for insertion.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="delete"/>
            <h4><span class="label public">public</span>delete<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Deletes a managed entity.<pre>The entity to delete must be managed and have a persistent identifier.
The deletion happens instantaneously.

Subclasses may override this method to customize the semantics of entity deletion.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity to delete.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="executeInserts"/>
            <h4><span class="label public">public</span>executeInserts<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Executes all queued entity insertions and returns any generated post-insert identifiers that were created as a result of the insertions.<pre>If no inserts are queued, invoking this method is a NOOP.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of any generated post-insert IDs. This will be an empty array</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="exists"/>
            <h4><span class="label public">public</span>exists<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type">Array</span><strong> $extraConditions</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks whether the given managed entity exists in the database.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>TRUE if the entity exists in the database, FALSE otherwise.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClassMetadata"/>
            <h4><span class="label public">public</span>getClassMetadata<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getManyToManyCollection"/>
            <h4><span class="label public">public</span>getManyToManyCollection<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $assoc</strong>, <span class="param-type">invalid method call</span><strong> $sourceEntity</strong>, <span class="param-type"><span title="int|null">int|null</span></span><strong> $offset</strong>, <span class="param-type"><span title="int|null">int|null</span></span><strong> $limit</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get (sliced or full) elements of the given collection.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$assoc</code> - </li>
                <li><code>$sourceEntity</code> - </li>
                <li><code>$offset</code> - </li>
                <li><code>$limit</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOneToManyCollection"/>
            <h4><span class="label public">public</span>getOneToManyCollection<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $assoc</strong>, <span class="param-type">invalid method call</span><strong> $sourceEntity</strong>, <span class="param-type">int</span><strong> $offset</strong>, <span class="param-type">int</span><strong> $limit</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return an array with (sliced or full list) of elements in the specified collection.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$assoc</code> - </li>
                <li><code>$sourceEntity</code> - </li>
                <li><code>$offset</code> - </li>
                <li><code>$limit</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOwningTable"/>
            <h4><span class="label public">public</span>getOwningTable<span style="font-size:90%;">( <span class="param-type">string</span><strong> $fieldName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the name of the table that owns the column the given field is mapped to.<pre>The default implementation in BasicEntityPersister always returns the name
of the table the entity type of this persister is mapped to, since an entity
is always persisted to a single table with a BasicEntityPersister.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fieldName</code> - The field name.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The table name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSQLColumnAlias"/>
            <h4><span class="label public">public</span>getSQLColumnAlias<span style="font-size:90%;">( <span class="param-type">string</span><strong> $columnName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets an SQL column alias for a column name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$columnName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSelectConditionStatementSQL"/>
            <h4><span class="label public">public</span>getSelectConditionStatementSQL<span style="font-size:90%;">( <span class="param-type">string</span><strong> $field</strong>, <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type"><span title="array|null">array|null</span></span><strong> $assoc</strong>, <span class="param-type">string</span><strong> $comparison</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the SQL WHERE condition for matching a field with a given value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$field</code> - </li>
                <li><code>$value</code> - </li>
                <li><code>$assoc</code> - </li>
                <li><code>$comparison</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="load"/>
            <h4><span class="label public">public</span>load<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $criteria</strong>, <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type"><span title="The">The</span></span><strong> $assoc</strong>, <span class="param-type">Array</span><strong> $hints</strong>, <span class="param-type">integer</span><strong> $lockMode</strong>, <span class="param-type">int</span><strong> $limit</strong>, <span class="param-type">Array</span><strong> $orderBy</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads an entity by a list of field criteria.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - The criteria by which to load the entity.</li>
                <li><code>$entity</code> - The entity to load the data into. If not specified,</li>
                <li><code>$assoc</code> - association that connects the entity to load to another entity, if any.</li>
                <li><code>$hints</code> - Hints for entity creation.</li>
                <li><code>$lockMode</code> - </li>
                <li><code>$limit</code> - Limit number of results</li>
                <li><code>$orderBy</code> - Criteria to order by</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The loaded and managed entity instance or NULL if the entity can not be found.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadAll"/>
            <h4><span class="label public">public</span>loadAll<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $criteria</strong>, <span class="param-type">Array</span><strong> $orderBy</strong>, <span class="param-type">int</span><strong> $limit</strong>, <span class="param-type">int</span><strong> $offset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads a list of entities by a list of field criteria.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - </li>
                <li><code>$orderBy</code> - </li>
                <li><code>$limit</code> - </li>
                <li><code>$offset</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadCriteria"/>
            <h4><span class="label public">public</span>loadCriteria<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_Common_Collections_Criteria.xhtml">Doctrine\Common\Collections\Criteria</a></span><strong> $criteria</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load Entities matching the given Criteria object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadManyToManyCollection"/>
            <h4><span class="label public">public</span>loadManyToManyCollection<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $assoc</strong>, <span class="param-type">invalid method call</span><strong> $sourceEntity</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_PersistentCollection.xhtml">Doctrine\ORM\PersistentCollection</a></span><strong> $coll</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads a collection of entities of a many-to-many association.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$assoc</code> - The association mapping of the association being loaded.</li>
                <li><code>$sourceEntity</code> - The entity that owns the collection.</li>
                <li><code>$coll</code> - The collection to fill.</li>
                <li><code>$offset</code> - </li>
                <li><code>$limit</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadOneToManyCollection"/>
            <h4><span class="label public">public</span>loadOneToManyCollection<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $assoc</strong>, <span class="param-type">invalid method call</span><strong> $sourceEntity</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_PersistentCollection.xhtml">Doctrine\ORM\PersistentCollection</a></span><strong> $coll</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads a collection of entities in a one-to-many association.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$assoc</code> - </li>
                <li><code>$sourceEntity</code> - </li>
                <li><code>$coll</code> - The collection to load/fill.</li>
                <li><code>$offset</code> - </li>
                <li><code>$limit</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadOneToOneEntity"/>
            <h4><span class="label public">public</span>loadOneToOneEntity<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $assoc</strong>, <span class="param-type">invalid method call</span><strong> $sourceEntity</strong>, <span class="param-type">Array</span><strong> $identifier</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads an entity of this persister's mapped class as part of a single-valued association from another entity.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$assoc</code> - The association to load.</li>
                <li><code>$sourceEntity</code> - The entity that owns the association (not necessarily the "owning side").</li>
                <li><code>$identifier</code> - The identifier of the entity to load. Must be provided if</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The loaded and managed entity instance or NULL if the entity can not be found.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lock"/>
            <h4><span class="label public">public</span>lock<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $criteria</strong>, <span class="param-type">int</span><strong> $lockMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Lock all rows of this entity matching the given criteria with the specified pessimistic lock mode</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - </li>
                <li><code>$lockMode</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="refresh"/>
            <h4><span class="label public">public</span>refresh<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $id</strong>, <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type">integer</span><strong> $lockMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Refreshes a managed entity.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$id</code> - The identifier of the entity as an associative array from</li>
                <li><code>$entity</code> - The entity to refresh.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="update"/>
            <h4><span class="label public">public</span>update<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Updates a managed entity. The entity is updated according to its current changeset in the running UnitOfWork. If there is no changeset, nothing is updated.<pre>The data to update is retrieved through .
Subclasses that override this method are supposed to obtain the update data
in the same way, through .
Subclasses are also supposed to take care of versioning when overriding this method,
if necessary. The  method can be used to apply the data retrieved
from  on the target tables, thereby optionally applying versioning.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity to update.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getDiscriminatorColumnTableName"/>
            <h4><span class="label protected">protected</span>_getDiscriminatorColumnTableName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getDiscriminatorColumnTableName"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>_getDiscriminatorColumnTableName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the name of the table that contains the discriminator column.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The table name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getInsertColumnList"/>
            <h4><span class="label protected">protected</span>_getInsertColumnList<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getInsertColumnList"/>
            <h4><span class="label protected">protected</span>_getInsertColumnList<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the list of columns to put in the INSERT SQL statement.<pre>Subclasses should override this method to alter or change the list of
columns placed in the INSERT statements used by the persister.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The list of columns.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getInsertSQL"/>
            <h4><span class="label protected">protected</span>_getInsertSQL<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the INSERT SQL used by the persister to persist a new entity.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getOrderBySQL"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>_getOrderBySQL<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $orderBy</strong>, <span class="param-type">string</span><strong> $baseTableAlias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the ORDER BY SQL snippet for ordered collections.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$orderBy</code> - </li>
                <li><code>$baseTableAlias</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSQLTableAlias"/>
            <h4><span class="label protected">protected</span>_getSQLTableAlias<span style="font-size:90%;">( <span class="param-type"/><strong> $className</strong>, <span class="param-type">string</span><strong> $assocName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getSQLTableAlias"/>
            <h4><span class="label protected">protected</span>_getSQLTableAlias<span style="font-size:90%;">( <span class="param-type">string</span><strong> $className</strong>, <span class="param-type">string</span><strong> $assocName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SQL table alias for the given class name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$className</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The SQL table alias.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectColumnAssociationSQL"/>
            <h4><span class="label protected">protected</span>_getSelectColumnAssociationSQL<span style="font-size:90%;">( <span class="param-type">string</span><strong> $field</strong>, <span class="param-type">array</span><strong> $assoc</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">string</span><strong> $alias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SQL join fragment used when selecting entities from an association.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$field</code> - </li>
                <li><code>$assoc</code> - </li>
                <li><code>$class</code> - </li>
                <li><code>$alias</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectColumnListSQL"/>
            <h4><span class="label protected">protected</span>_getSelectColumnListSQL<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getSelectColumnListSQL"/>
            <h4><span class="label protected">protected</span>_getSelectColumnListSQL<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SQL fragment with the list of columns to select when querying for an entity in this persister.<pre>Subclasses should override this method to alter or change the select column
list SQL fragment. Note that in the implementation of BasicEntityPersister
the resulting SQL fragment is generated only once and cached in .
Subclasses may or may not do the same.
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The SQL fragment.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectColumnSQL"/>
            <h4><span class="label protected">protected</span>_getSelectColumnSQL<span style="font-size:90%;">( <span class="param-type"/><strong> $field</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">string</span><strong> $alias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getSelectColumnSQL"/>
            <h4><span class="label protected">protected</span>_getSelectColumnSQL<span style="font-size:90%;">( <span class="param-type">string</span><strong> $field</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">string</span><strong> $alias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SQL snippet of a qualified column name for the given field name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$field</code> - The field name.</li>
                <li><code>$class</code> - The class that declares this field. The table this class is</li>
                <li><code>$alias</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectConditionCriteriaSQL"/>
            <h4><span class="label protected">protected</span>_getSelectConditionCriteriaSQL<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_Common_Collections_Criteria.xhtml">Doctrine\Common\Collections\Criteria</a></span><strong> $criteria</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getSelectConditionCriteriaSQL"/>
            <h4><span class="label protected">protected</span>_getSelectConditionCriteriaSQL<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_Common_Collections_Criteria.xhtml">Doctrine\Common\Collections\Criteria</a></span><strong> $criteria</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the Select Where Condition from a Criteria object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectConditionDiscriminatorValueSQL"/>
            <h4><span class="label protected">protected</span>_getSelectConditionDiscriminatorValueSQL<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="_getSelectConditionSQL"/>
            <h4><span class="label protected">protected</span>_getSelectConditionSQL<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $criteria</strong>, <span class="param-type"/><strong> $assoc</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_getSelectConditionSQL"/>
            <h4><span class="label protected">protected</span>_getSelectConditionSQL<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $criteria</strong>, <span class="param-type"><span title="AssociationMapping">AssociationMapping</span></span><strong> $assoc</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the conditional SQL fragment used in the WHERE clause when selecting entities in this persister.<pre>Subclasses are supposed to override this method if they intend to change
or alter the criteria by which entities are selected.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - </li>
                <li><code>$assoc</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectEntitiesSQL"/>
            <h4><span class="label protected">protected</span>_getSelectEntitiesSQL<span style="font-size:90%;">( <span class="param-type"><span title="array|\Doctrine\Common\Collections\Criteria">Criteria</span></span><strong> $criteria</strong>, <span class="param-type"><span title="AssociationMapping">AssociationMapping</span></span><strong> $assoc</strong>, <span class="param-type">integer</span><strong> $lockMode</strong>, <span class="param-type">int</span><strong> $limit</strong>, <span class="param-type">int</span><strong> $offset</strong>, <span class="param-type">Array</span><strong> $orderBy</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SELECT SQL to select one or more entities by a set of field criteria.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$criteria</code> - </li>
                <li><code>$assoc</code> - </li>
                <li><code>$orderBy</code> - </li>
                <li><code>$lockMode</code> - </li>
                <li><code>$limit</code> - </li>
                <li><code>$offset</code> - </li>
                <li><code>$orderBy</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSelectManyToManyJoinSQL"/>
            <h4><span class="label protected">protected</span>_getSelectManyToManyJoinSQL<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $manyToMany</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SQL join fragment used when selecting entities from a many-to-many association.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$manyToMany</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_prepareInsertData"/>
            <h4><span class="label protected">protected</span>_prepareInsertData<span style="font-size:90%;">( <span class="param-type"/><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="_prepareInsertData"/>
            <h4><span class="label protected">protected</span>_prepareInsertData<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepares the data changeset of a managed entity for database insertion (initial INSERT).<pre>The changeset of the entity is obtained from the currently running UnitOfWork.

The default insert data preparation is the same as for updates.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity for which to prepare the data.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The prepared data for the tables to update.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_prepareUpdateData"/>
            <h4><span class="label protected">protected</span>_prepareUpdateData<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepares the changeset of an entity for database insertion (UPDATE).<pre>The changeset is obtained from the currently running UnitOfWork.

During this preparation the array that is passed as the second parameter is filled with
&lt;columnName&gt; =&gt; &lt;value&gt; pairs, grouped by table name.

Example:
&lt;code&gt;
array(
   'foo_table' =&gt; array('column1' =&gt; 'value1', 'column2' =&gt; 'value2', ...),
   'bar_table' =&gt; array('columnX' =&gt; 'valueX', 'columnY' =&gt; 'valueY', ...),
   ...
)
&lt;/code&gt;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity for which to prepare the data.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The prepared data.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_updateTable"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>_updateTable<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type">string</span><strong> $quotedTableName</strong>, <span class="param-type">Array</span><strong> $updateData</strong>, <span class="param-type">boolean</span><strong> $versioned</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Performs an UPDATE statement for an entity on a specific table.<pre>The UPDATE can optionally be versioned, which requires the entity to have a version field.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity object being updated.</li>
                <li><code>$quotedTableName</code> - The quoted name of the table to apply the UPDATE on.</li>
                <li><code>$updateData</code> - The map of columns to update (column =&gt; value).</li>
                <li><code>$versioned</code> - Whether the UPDATE should be versioned.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assignDefaultVersionValue"/>
            <h4><span class="label protected">protected</span>assignDefaultVersionValue<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type">mixed</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the default version value which was created by the preceding INSERT statement and assigns it back in to the entities version field.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - </li>
                <li><code>$id</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="deleteJoinTableRecords"/>
            <h4><span class="label protected">protected</span>deleteJoinTableRecords<span style="font-size:90%;">( <span class="param-type">array</span><strong> $identifier</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identifier</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fetchVersionValue"/>
            <h4><span class="label protected">protected</span>fetchVersionValue<span style="font-size:90%;">( <span class="param-type"><span title="\Doctrine\ORM\Mapping\ClassMetadata">ClassMetadata</span></span><strong> $versionedClass</strong>, <span class="param-type">mixed</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Fetch the current version value of a versioned entity.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$versionedClass</code> - </li>
                <li><code>$id</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="generateFilterConditionSQL"/>
            <h4><span class="label protected">protected</span>generateFilterConditionSQL<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $targetEntity</strong>, <span class="param-type"/><strong> $targetTableAlias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="generateFilterConditionSQL"/>
            <h4><span class="label protected">protected</span>generateFilterConditionSQL<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $targetEntity</strong>, <span class="param-type">string</span><strong> $targetTableAlias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Generates the filter SQL for a given entity and table alias.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$targetEntity</code> - Metadata of the target entity.</li>
                <li><code>$targetTableAlias</code> - The table alias of the joined/selected table.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The SQL query part to add to a query.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getJoinSQLForJoinColumns"/>
            <h4><span class="label protected">protected</span>getJoinSQLForJoinColumns<span style="font-size:90%;">( <span class="param-type">array</span><strong> $joinColumns</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Generates the appropriate join SQL for the given join column.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$joinColumns</code> - The join columns definition of an association.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>LEFT JOIN if one of the columns is nullable, INNER JOIN otherwise.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLockTablesSql"/>
            <h4><span class="label protected">protected</span>getLockTablesSql<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the FROM and optionally JOIN conditions to lock the entity managed by this persister.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSelectConditionStatementColumnSQL"/>
            <h4><span class="label protected">protected</span>getSelectConditionStatementColumnSQL<span style="font-size:90%;">( <span class="param-type">string</span><strong> $field</strong>, <span class="param-type">array</span><strong> $assoc</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Build the left-hand-side of a where condition statement.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$field</code> - </li>
                <li><code>$assoc</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSelectJoinColumnSQL"/>
            <h4><span class="label protected">protected</span>getSelectJoinColumnSQL<span style="font-size:90%;">( <span class="param-type"/><strong> $tableAlias</strong>, <span class="param-type"/><strong> $joinColumnName</strong>, <span class="param-type"/><strong> $className</strong> )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
