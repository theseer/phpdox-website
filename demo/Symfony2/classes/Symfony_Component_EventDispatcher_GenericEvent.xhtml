<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\EventDispatcher\GenericEvent - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#subject">$subject</a>
          </li>
          <li>
            <a href="#arguments">$arguments</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#getArgument">getArgument</a>
          </li>
          <li>
            <a href="#getArguments">getArguments</a>
          </li>
          <li>
            <a href="#getDispatcher">getDispatcher</a>
          </li>
          <li>
            <a href="#getIterator">getIterator</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getSubject">getSubject</a>
          </li>
          <li>
            <a href="#hasArgument">hasArgument</a>
          </li>
          <li>
            <a href="#isPropagationStopped">isPropagationStopped</a>
          </li>
          <li>
            <a href="#offsetExists">offsetExists</a>
          </li>
          <li>
            <a href="#offsetGet">offsetGet</a>
          </li>
          <li>
            <a href="#offsetSet">offsetSet</a>
          </li>
          <li>
            <a href="#offsetUnset">offsetUnset</a>
          </li>
          <li>
            <a href="#setArgument">setArgument</a>
          </li>
          <li>
            <a href="#setArguments">setArguments</a>
          </li>
          <li>
            <a href="#setDispatcher">setDispatcher</a>
          </li>
          <li>
            <a href="#setName">setName</a>
          </li>
          <li>
            <a href="#stopPropagation">stopPropagation</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\EventDispatcher\</span>GenericEvent</h2>
        <div class="file-notice">
          <p>Event encapsulation class.</p>
          <p>
            <pre>Encapsulates events thus decoupling the observer from the subject they encapsulate.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Drak &lt;drak@zikula.org&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <span title="ArrayAccess">ArrayAccess</span>
          </li>
          <li>
            <span title="IteratorAggregate">IteratorAggregate</span>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="subject"/>
            <h4><span class="label protected">protected</span>mixed 
                
                $subject</h4>
            <ul class="varlist">
              <li>Observer pattern subject.</li>
            </ul>
          </li>
          <li>
            <a name="arguments"/>
            <h4><span class="label protected">protected</span>array 
                
                $arguments</h4>
            <ul class="varlist">
              <li>Array of arguments.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $subject</strong>, <span class="param-type">Array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Encapsulate an event with $subject and $args.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subject</code> - The subject of the event, usually an object.</li>
                <li><code>$arguments</code> - Arguments to store in the event.</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getArgument"/>
            <h4><span class="label public">public</span>getArgument<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get argument by key.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Key.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Contents of array key.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException If key is not found.</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getArguments"/>
            <h4><span class="label public">public</span>getArguments<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Getter for all arguments.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDispatcher"/>
            <h4><span class="label public">public</span>getDispatcher<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the EventDispatcher that dispatches this Event</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getIterator"/>
            <h4><span class="label public">public</span>getIterator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>IteratorAggregate for iterating over the object like an array</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the event's name.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSubject"/>
            <h4><span class="label public">public</span>getSubject<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Getter for subject property.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>$subject The observer subject.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasArgument"/>
            <h4><span class="label public">public</span>hasArgument<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Has argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Key of arguments array.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isPropagationStopped"/>
            <h4><span class="label public">public</span>isPropagationStopped<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether further event listeners should be triggered.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether propagation was already stopped for this event.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetExists"/>
            <h4><span class="label public">public</span>offsetExists<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>ArrayAccess has argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Array key.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetGet"/>
            <h4><span class="label public">public</span>offsetGet<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>ArrayAccess for argument getter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Array key.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException If key does not exist in $this-&gt;args.</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetSet"/>
            <h4><span class="label public">public</span>offsetSet<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>ArrayAccess for argument setter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Array key to set.</li>
                <li><code>$value</code> - Value.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetUnset"/>
            <h4><span class="label public">public</span>offsetUnset<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>ArrayAccess for unset argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Array key.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setArgument"/>
            <h4><span class="label public">public</span>setArgument<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add argument to event.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - Argument name.</li>
                <li><code>$value</code> - Value.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setArguments"/>
            <h4><span class="label public">public</span>setArguments<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $args</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set args property.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$args</code> - Arguments.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDispatcher"/>
            <h4><span class="label public">public</span>setDispatcher<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_EventDispatcher_EventDispatcherInterface.xhtml">Symfony\Component\EventDispatcher\EventDispatcherInterface</a></span><strong> $dispatcher</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Stores the EventDispatcher that dispatches this Event</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dispatcher</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setName"/>
            <h4><span class="label public">public</span>setName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the event's name property.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The event name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="stopPropagation"/>
            <h4><span class="label public">public</span>stopPropagation<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Stops the propagation of the event to further event listeners.<pre>If multiple event listeners are connected to the same event, no
further event listener will be triggered once any trigger calls
stopPropagation().</pre></li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
