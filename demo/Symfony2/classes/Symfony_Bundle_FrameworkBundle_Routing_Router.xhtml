<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Bundle\FrameworkBundle\Routing\Router - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#container">$container</a>
          </li>
          <li>
            <a href="#matcher">$matcher</a>
          </li>
          <li>
            <a href="#generator">$generator</a>
          </li>
          <li>
            <a href="#context">$context</a>
          </li>
          <li>
            <a href="#loader">$loader</a>
          </li>
          <li>
            <a href="#collection">$collection</a>
          </li>
          <li>
            <a href="#resource">$resource</a>
          </li>
          <li>
            <a href="#options">$options</a>
          </li>
          <li>
            <a href="#logger">$logger</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#generate">generate</a>
          </li>
          <li>
            <a href="#getContext">getContext</a>
          </li>
          <li>
            <a href="#getGenerator">getGenerator</a>
          </li>
          <li>
            <a href="#getMatcher">getMatcher</a>
          </li>
          <li>
            <a href="#getOption">getOption</a>
          </li>
          <li>
            <a href="#getRouteCollection">getRouteCollection</a>
          </li>
          <li>
            <a href="#getRouteCollection">getRouteCollection</a>
          </li>
          <li>
            <a href="#match">match</a>
          </li>
          <li>
            <a href="#resolve">resolve</a>
          </li>
          <li>
            <a href="#resolveParameters">resolveParameters</a>
          </li>
          <li>
            <a href="#setContext">setContext</a>
          </li>
          <li>
            <a href="#setOption">setOption</a>
          </li>
          <li>
            <a href="#setOptions">setOptions</a>
          </li>
          <li>
            <a href="#warmUp">warmUp</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Bundle\FrameworkBundle\Routing\</span>Router</h2>
        <div class="file-notice">
          <p>This Router creates the Loader only when the cache is empty.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_HttpKernel_CacheWarmer_WarmableInterface.xhtml">Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="container"/>
            <h4><span class="label private">private</span>
                $container</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_DependencyInjection_ContainerInterface.xhtml">Symfony\Component\DependencyInjection\ContainerInterface</a></span><strong> $container</strong>, <span class="param-type">mixed</span><strong> $resource</strong>, <span class="param-type">Array</span><strong> $options</strong>, <span class="param-type"><a href="../classes/Symfony_Component_Routing_RequestContext.xhtml">Symfony\Component\Routing\RequestContext</a></span><strong> $context</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - A ContainerInterface instance</li>
                <li><code>$resource</code> - The main resource to load</li>
                <li><code>$options</code> - An array of options</li>
                <li><code>$context</code> - The context</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="generate"/>
            <h4><span class="label public">public</span>generate<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type">Array</span><strong> $parameters</strong>, <span class="param-type"/><strong> $referenceType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getContext"/>
            <h4><span class="label public">public</span>getContext<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getGenerator"/>
            <h4><span class="label public">public</span>getGenerator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the UrlGenerator instance associated with this Router.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A UrlGeneratorInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMatcher"/>
            <h4><span class="label public">public</span>getMatcher<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the UrlMatcher instance associated with this Router.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A UrlMatcherInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOption"/>
            <h4><span class="label public">public</span>getOption<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets an option value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - The key</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRouteCollection"/>
            <h4><span class="label public">public</span>getRouteCollection<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getRouteCollection"/>
            <h4><span class="label public">public</span>getRouteCollection<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="match"/>
            <h4><span class="label public">public</span>match<span style="font-size:90%;">( <span class="param-type"/><strong> $pathinfo</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="setContext"/>
            <h4><span class="label public">public</span>setContext<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_RequestContext.xhtml">Symfony\Component\Routing\RequestContext</a></span><strong> $context</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="setOption"/>
            <h4><span class="label public">public</span>setOption<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an option.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - The key</li>
                <li><code>$value</code> - The value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOptions"/>
            <h4><span class="label public">public</span>setOptions<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets options.<pre>Available options:

  * cache_dir:     The cache directory (or null to disable caching)
  * debug:         Whether to enable debugging or not (false by default)
  * resource_type: Type hint for the main resource (optional)</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - An array of options</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When unsupported option is provided</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="warmUp"/>
            <h4><span class="label public">public</span>warmUp<span style="font-size:90%;">( <span class="param-type"/><strong> $cacheDir</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="resolve"/>
            <h4><span class="label private">private</span>resolve<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Recursively replaces placeholders with the service container parameters.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The source which might contain "%placeholders%"</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The source with the placeholders replaced by the container</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ParameterNotFoundException When a placeholder does not exist as a container parameter</code>
                </li>
                <li>
                  <code>RuntimeException           When a container value is not a string or a numeric value</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resolveParameters"/>
            <h4><span class="label private">private</span>resolveParameters<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_RouteCollection.xhtml">Symfony\Component\Routing\RouteCollection</a></span><strong> $collection</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Replaces placeholders with service container parameter values in: - the route defaults, - the route requirements, - the route pattern.<pre>- the route host.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$collection</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
