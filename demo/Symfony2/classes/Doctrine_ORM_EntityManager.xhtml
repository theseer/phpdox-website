<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\ORM\EntityManager - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#config">$config</a>
          </li>
          <li>
            <a href="#conn">$conn</a>
          </li>
          <li>
            <a href="#metadataFactory">$metadataFactory</a>
          </li>
          <li>
            <a href="#repositories">$repositories</a>
          </li>
          <li>
            <a href="#unitOfWork">$unitOfWork</a>
          </li>
          <li>
            <a href="#eventManager">$eventManager</a>
          </li>
          <li>
            <a href="#hydrators">$hydrators</a>
          </li>
          <li>
            <a href="#proxyFactory">$proxyFactory</a>
          </li>
          <li>
            <a href="#expressionBuilder">$expressionBuilder</a>
          </li>
          <li>
            <a href="#closed">$closed</a>
          </li>
          <li>
            <a href="#filterCollection">$filterCollection</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#beginTransaction">beginTransaction</a>
          </li>
          <li>
            <a href="#clear">clear</a>
          </li>
          <li>
            <a href="#close">close</a>
          </li>
          <li>
            <a href="#commit">commit</a>
          </li>
          <li>
            <a href="#contains">contains</a>
          </li>
          <li>
            <a href="#copy">copy</a>
          </li>
          <li>
            <a href="#create">create</a>
          </li>
          <li>
            <a href="#createNamedNativeQuery">createNamedNativeQuery</a>
          </li>
          <li>
            <a href="#createNamedQuery">createNamedQuery</a>
          </li>
          <li>
            <a href="#createNativeQuery">createNativeQuery</a>
          </li>
          <li>
            <a href="#createQuery">createQuery</a>
          </li>
          <li>
            <a href="#createQueryBuilder">createQueryBuilder</a>
          </li>
          <li>
            <a href="#detach">detach</a>
          </li>
          <li>
            <a href="#errorIfClosed">errorIfClosed</a>
          </li>
          <li>
            <a href="#find">find</a>
          </li>
          <li>
            <a href="#flush">flush</a>
          </li>
          <li>
            <a href="#getClassMetadata">getClassMetadata</a>
          </li>
          <li>
            <a href="#getConfiguration">getConfiguration</a>
          </li>
          <li>
            <a href="#getConnection">getConnection</a>
          </li>
          <li>
            <a href="#getEventManager">getEventManager</a>
          </li>
          <li>
            <a href="#getExpressionBuilder">getExpressionBuilder</a>
          </li>
          <li>
            <a href="#getFilters">getFilters</a>
          </li>
          <li>
            <a href="#getHydrator">getHydrator</a>
          </li>
          <li>
            <a href="#getMetadataFactory">getMetadataFactory</a>
          </li>
          <li>
            <a href="#getPartialReference">getPartialReference</a>
          </li>
          <li>
            <a href="#getProxyFactory">getProxyFactory</a>
          </li>
          <li>
            <a href="#getReference">getReference</a>
          </li>
          <li>
            <a href="#getRepository">getRepository</a>
          </li>
          <li>
            <a href="#getUnitOfWork">getUnitOfWork</a>
          </li>
          <li>
            <a href="#hasFilters">hasFilters</a>
          </li>
          <li>
            <a href="#initializeObject">initializeObject</a>
          </li>
          <li>
            <a href="#isFiltersStateClean">isFiltersStateClean</a>
          </li>
          <li>
            <a href="#isOpen">isOpen</a>
          </li>
          <li>
            <a href="#lock">lock</a>
          </li>
          <li>
            <a href="#merge">merge</a>
          </li>
          <li>
            <a href="#newHydrator">newHydrator</a>
          </li>
          <li>
            <a href="#persist">persist</a>
          </li>
          <li>
            <a href="#refresh">refresh</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
          <li>
            <a href="#rollback">rollback</a>
          </li>
          <li>
            <a href="#transactional">transactional</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\ORM\</span>EntityManager</h2>
        <div class="file-notice">
          <p>The EntityManager is the central access point to ORM functionality.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
          <li><b>Author: </b>Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;</li>
          <li><b>Author: </b>Jonathan Wage &lt;jonwage@gmail.com&gt;</li>
          <li><b>Author: </b>Roman Borschel &lt;roman@code-factory.org&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Doctrine_Common_Persistence_ObjectManager.xhtml">Doctrine\Common\Persistence\ObjectManager</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="config"/>
            <h4><span class="label private">private</span>object 
                
                $config</h4>
            <ul class="varlist">
              <li>The used Configuration.</li>
            </ul>
          </li>
          <li>
            <a name="conn"/>
            <h4><span class="label private">private</span>object 
                
                $conn</h4>
            <ul class="varlist">
              <li>The database connection used by the EntityManager.</li>
            </ul>
          </li>
          <li>
            <a name="metadataFactory"/>
            <h4><span class="label private">private</span>object 
                
                $metadataFactory</h4>
            <ul class="varlist">
              <li>The metadata factory, used to retrieve the ORM metadata of entity classes.</li>
            </ul>
          </li>
          <li>
            <a name="repositories"/>
            <h4><span class="label private">private</span>array 
                
                $repositories</h4>
            <ul class="varlist">
              <li>The EntityRepository instances.</li>
            </ul>
          </li>
          <li>
            <a name="unitOfWork"/>
            <h4><span class="label private">private</span>object 
                
                $unitOfWork</h4>
            <ul class="varlist">
              <li>The UnitOfWork used to coordinate object-level transactions.</li>
            </ul>
          </li>
          <li>
            <a name="eventManager"/>
            <h4><span class="label private">private</span>object 
                
                $eventManager</h4>
            <ul class="varlist">
              <li>The event manager that is the central point of the event system.</li>
            </ul>
          </li>
          <li>
            <a name="hydrators"/>
            <h4><span class="label private">private</span>array 
                
                $hydrators</h4>
            <ul class="varlist">
              <li>The maintained (cached) hydrators. One instance per type.</li>
            </ul>
          </li>
          <li>
            <a name="proxyFactory"/>
            <h4><span class="label private">private</span>object 
                
                $proxyFactory</h4>
            <ul class="varlist">
              <li>The proxy factory used to create dynamic proxies.</li>
            </ul>
          </li>
          <li>
            <a name="expressionBuilder"/>
            <h4><span class="label private">private</span>object 
                
                $expressionBuilder</h4>
            <ul class="varlist">
              <li>The expression builder instance used to generate query expressions.</li>
            </ul>
          </li>
          <li>
            <a name="closed"/>
            <h4><span class="label private">private</span>object 
                
                $closed</h4>
            <ul class="varlist">
              <li>Whether the EntityManager is closed or not.</li>
            </ul>
          </li>
          <li>
            <a name="filterCollection"/>
            <h4><span class="label private">private</span>object 
                
                $filterCollection</h4>
            <ul class="varlist">
              <li>Collection of query filters.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label protected">protected</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_DBAL_Connection.xhtml">Doctrine\DBAL\Connection</a></span><strong> $conn</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Configuration.xhtml">Doctrine\ORM\Configuration</a></span><strong> $config</strong>, <span class="param-type"><a href="../classes/Doctrine_Common_EventManager.xhtml">Doctrine\Common\EventManager</a></span><strong> $eventManager</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a new EntityManager that operates on the given database connection and uses the given Configuration and EventManager implementations.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$conn</code> - </li>
                <li><code>$config</code> - </li>
                <li><code>$eventManager</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="beginTransaction"/>
            <h4><span class="label public">public</span>beginTransaction<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Starts a transaction on the underlying database connection.</li>
            </p>
          </li>
          <li>
            <a name="clear"/>
            <h4><span class="label public">public</span>clear<span style="font-size:90%;">( <span class="param-type">string</span><strong> $entityName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the EntityManager. All entities that are currently managed by this EntityManager become detached.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entityName</code> - if given, only entities of this type will get detached</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="close"/>
            <h4><span class="label public">public</span>close<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Closes the EntityManager. All entities that are currently managed by this EntityManager become detached. The EntityManager may no longer be used after it is closed.</li>
            </p>
          </li>
          <li>
            <a name="commit"/>
            <h4><span class="label public">public</span>commit<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Commits a transaction on the underlying database connection.</li>
            </p>
          </li>
          <li>
            <a name="contains"/>
            <h4><span class="label public">public</span>contains<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines whether an entity instance is managed in this EntityManager.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>TRUE if this EntityManager currently manages the given entity, FALSE otherwise.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="copy"/>
            <h4><span class="label public">public</span>copy<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type"/><strong> $deep</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a copy of the given entity. Can create a shallow or a deep copy.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity to copy.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The new entity.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="create"/>
            <h4><span class="label true">true</span><span class="label public">public</span>create<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $conn</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Configuration.xhtml">Doctrine\ORM\Configuration</a></span><strong> $config</strong>, <span class="param-type"><a href="../classes/Doctrine_Common_EventManager.xhtml">Doctrine\Common\EventManager</a></span><strong> $eventManager</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Factory method to create EntityManager instances.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$conn</code> - An array with the connection parameters or an existing</li>
                <li><code>$config</code> - The Configuration instance to use.</li>
                <li><code>$eventManager</code> - The EventManager instance to use.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The created EntityManager.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createNamedNativeQuery"/>
            <h4><span class="label public">public</span>createNamedNativeQuery<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a NativeQuery from a named native query.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createNamedQuery"/>
            <h4><span class="label public">public</span>createNamedQuery<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a Query from a named query.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createNativeQuery"/>
            <h4><span class="label public">public</span>createNativeQuery<span style="font-size:90%;">( <span class="param-type">string</span><strong> $sql</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Query_ResultSetMapping.xhtml">Doctrine\ORM\Query\ResultSetMapping</a></span><strong> $rsm</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a native SQL query.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$sql</code> - </li>
                <li><code>$rsm</code> - The ResultSetMapping to use.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createQuery"/>
            <h4><span class="label public">public</span>createQuery<span style="font-size:90%;">( <span class="param-type">string</span><strong> $dql</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a new Query object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dql</code> - The DQL string.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createQueryBuilder"/>
            <h4><span class="label public">public</span>createQueryBuilder<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create a QueryBuilder instance</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>$qb</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="detach"/>
            <h4><span class="label public">public</span>detach<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Detaches an entity from the EntityManager, causing a managed entity to become detached.  Unflushed changes made to the entity if any (including removal of the entity), will not be synchronized to the database.<pre>Entities which previously referenced the detached entity will continue to
reference it.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity to detach.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="find"/>
            <h4><span class="label public">public</span>find<span style="font-size:90%;">( <span class="param-type">string</span><strong> $entityName</strong>, <span class="param-type">mixed</span><strong> $id</strong>, <span class="param-type">integer</span><strong> $lockMode</strong>, <span class="param-type">integer</span><strong> $lockVersion</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds an Entity by its identifier.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entityName</code> - </li>
                <li><code>$id</code> - </li>
                <li><code>$lockMode</code> - </li>
                <li><code>$lockVersion</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="flush"/>
            <h4><span class="label public">public</span>flush<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Flushes all changes to objects that have been queued up to now to the database.<pre>This effectively synchronizes the in-memory state of managed objects with the
database.

If an entity is explicitly passed to this method only this entity and
the cascade-persist semantics + scheduled inserts/removals are synchronized.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\Doctrine\ORM\OptimisticLockException If a version check on an entity that</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClassMetadata"/>
            <h4><span class="label public">public</span>getClassMetadata<span style="font-size:90%;">( <span class="param-type"/><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the ORM metadata descriptor for a class.<pre>The class name must be the fully-qualified class name without a leading backslash
(as it is returned by get_class($obj)) or an aliased class name.

Examples:
MyProject\Domain\User
sales:PriceRequest</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getConfiguration"/>
            <h4><span class="label public">public</span>getConfiguration<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Configuration used by the EntityManager.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getConnection"/>
            <h4><span class="label public">public</span>getConnection<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the database connection object used by the EntityManager.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getEventManager"/>
            <h4><span class="label public">public</span>getEventManager<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the EventManager used by the EntityManager.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExpressionBuilder"/>
            <h4><span class="label public">public</span>getExpressionBuilder<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets an ExpressionBuilder used for object-oriented construction of query expressions.<pre>Example:

&lt;code&gt;
    $qb = $em-&gt;createQueryBuilder();
    $expr = $em-&gt;getExpressionBuilder();
    $qb-&gt;select('u')-&gt;from('User', 'u')
        -&gt;where($expr-&gt;orX($expr-&gt;eq('u.id', 1), $expr-&gt;eq('u.id', 2)));
&lt;/code&gt;</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFilters"/>
            <h4><span class="label public">public</span>getFilters<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the enabled filters.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The active filter collection.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHydrator"/>
            <h4><span class="label public">public</span>getHydrator<span style="font-size:90%;">( <span class="param-type">int</span><strong> $hydrationMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a hydrator for the given hydration mode.<pre>This method caches the hydrator instances which is used for all queries that don't
selectively iterate over the result.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$hydrationMode</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMetadataFactory"/>
            <h4><span class="label public">public</span>getMetadataFactory<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the metadata factory used to gather the metadata of classes.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPartialReference"/>
            <h4><span class="label public">public</span>getPartialReference<span style="font-size:90%;">( <span class="param-type">string</span><strong> $entityName</strong>, <span class="param-type">mixed</span><strong> $identifier</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a partial reference to the entity identified by the given type and identifier without actually loading it, if the entity is not yet loaded.<pre>The returned reference may be a partial object if the entity is not yet loaded/managed.
If it is a partial object it will not initialize the rest of the entity state on access.
Thus you can only ever safely access the identifier of an entity obtained through
this method.

The use-cases for partial references involve maintaining bidirectional associations
without loading one side of the association or to update an entity without loading it.
Note, however, that in the latter case the original (persistent) entity data will
never be visible to the application (especially not event listeners) as it will
never be loaded in the first place.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entityName</code> - The name of the entity type.</li>
                <li><code>$identifier</code> - The entity identifier.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The (partial) entity reference.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getProxyFactory"/>
            <h4><span class="label public">public</span>getProxyFactory<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the proxy factory used by the EntityManager to create entity proxies.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getReference"/>
            <h4><span class="label public">public</span>getReference<span style="font-size:90%;">( <span class="param-type">string</span><strong> $entityName</strong>, <span class="param-type">mixed</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a reference to the entity identified by the given type and identifier without actually loading it, if the entity is not yet loaded.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entityName</code> - The name of the entity type.</li>
                <li><code>$id</code> - The entity identifier.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The entity reference.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRepository"/>
            <h4><span class="label public">public</span>getRepository<span style="font-size:90%;">( <span class="param-type">string</span><strong> $entityName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the repository for an entity class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entityName</code> - The name of the entity.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The repository class.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUnitOfWork"/>
            <h4><span class="label public">public</span>getUnitOfWork<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the UnitOfWork used by the EntityManager to coordinate operations.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasFilters"/>
            <h4><span class="label public">public</span>hasFilters<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks whether the Entity Manager has filters.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>if the EM has a filter collection.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initializeObject"/>
            <h4><span class="label public">public</span>initializeObject<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $obj</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Helper method to initialize a lazy loading proxy or persistent collection.<pre>This method is a no-op for other objects</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$obj</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isFiltersStateClean"/>
            <h4><span class="label public">public</span>isFiltersStateClean<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks whether the state of the filter collection is clean.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>True, if the filter collection is clean.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isOpen"/>
            <h4><span class="label public">public</span>isOpen<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the Entity manager is open or closed.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lock"/>
            <h4><span class="label public">public</span>lock<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong>, <span class="param-type">int</span><strong> $lockMode</strong>, <span class="param-type">int</span><strong> $lockVersion</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Acquire a lock on the given entity.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - </li>
                <li><code>$lockMode</code> - </li>
                <li><code>$lockVersion</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>OptimisticLockException</code>
                </li>
                <li>
                  <code>PessimisticLockException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="merge"/>
            <h4><span class="label public">public</span>merge<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Merges the state of a detached entity into the persistence context of this EntityManager and returns the managed copy of the entity.<pre>The entity passed to merge will not become associated/managed with this EntityManager.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The detached entity to merge into the persistence context.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The managed copy of the entity.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="newHydrator"/>
            <h4><span class="label public">public</span>newHydrator<span style="font-size:90%;">( <span class="param-type">int</span><strong> $hydrationMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create a new instance for the given hydration mode.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$hydrationMode</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="persist"/>
            <h4><span class="label public">public</span>persist<span style="font-size:90%;">( <span class="param-type"/><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tells the EntityManager to make an instance managed and persistent.<pre>The entity will be entered into the database at or before transaction
commit or as a result of the flush operation.

NOTE: The persist operation always considers entities that are not yet known to
this EntityManager as NEW. Do not pass detached entities to the persist operation.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - The instance to make managed and persistent.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="refresh"/>
            <h4><span class="label public">public</span>refresh<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Refreshes the persistent state of an entity from the database, overriding any local changes that have not yet been persisted.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity to refresh.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $entity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes an entity instance.<pre>A removed entity will be removed from the database at or before transaction commit
or as a result of the flush operation.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entity</code> - The entity instance to remove.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="rollback"/>
            <h4><span class="label public">public</span>rollback<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Performs a rollback on the underlying database connection.</li>
            </p>
          </li>
          <li>
            <a name="transactional"/>
            <h4><span class="label public">public</span>transactional<span style="font-size:90%;">( <span class="param-type"><span title="callable">callable</span></span><strong> $func</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Executes a function in a transaction.<pre>The function gets passed this EntityManager instance as an (optional) parameter.

{@link flush} is invoked prior to transaction commit.

If an exception occurs during execution of the function or flushing or transaction commit,
the transaction is rolled back, the EntityManager closed and the exception re-thrown.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$func</code> - The function to execute transactionally.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Returns the non-empty value returned from the closure or true instead</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="errorIfClosed"/>
            <h4><span class="label private">private</span>errorIfClosed<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Throws an exception if the EntityManager is closed or currently not active.</li>
            </p>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ORMException If the EntityManager is closed.</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
