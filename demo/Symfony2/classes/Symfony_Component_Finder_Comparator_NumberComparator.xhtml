<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Finder\Comparator\NumberComparator - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#getOperator">getOperator</a>
          </li>
          <li>
            <a href="#getTarget">getTarget</a>
          </li>
          <li>
            <a href="#setOperator">setOperator</a>
          </li>
          <li>
            <a href="#setTarget">setTarget</a>
          </li>
          <li>
            <a href="#test">test</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Finder\Comparator\</span>NumberComparator</h2>
        <div class="file-notice">
          <p>NumberComparator compiles a simple comparison to an anonymous subroutine, which you can call with a value to be tested again.</p>
          <p>
            <pre>Now this would be very pointless, if NumberCompare didn't understand
magnitudes.

The target value may use magnitudes of kilobytes (k, ki),
megabytes (m, mi), or gigabytes (g, gi).  Those suffixed
with an i use the appropriate 2**n version in accordance with the
IEC standard: http://physics.nist.gov/cuu/Units/binary.html

Based on the Perl Number::Compare module.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt; PHP port</li>
          <li><b>Author: </b>Richard Clamp &lt;richardc@unixbeard.net&gt; Perl version</li>
          <li><b>Copyright: </b>2004-2005 Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Copyright: </b>2002 Richard Clamp &lt;richardc@unixbeard.net&gt;</li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $test</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$test</code> - A comparison string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException If the test is not understood</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getOperator"/>
            <h4><span class="label public">public</span>getOperator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the comparison operator.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The operator</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTarget"/>
            <h4><span class="label public">public</span>getTarget<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the target value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The target value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOperator"/>
            <h4><span class="label public">public</span>setOperator<span style="font-size:90%;">( <span class="param-type">string</span><strong> $operator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the comparison operator.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$operator</code> - A valid operator</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTarget"/>
            <h4><span class="label public">public</span>setTarget<span style="font-size:90%;">( <span class="param-type">string</span><strong> $target</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the target value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$target</code> - The target value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="test"/>
            <h4><span class="label public">public</span>test<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $test</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tests against the target.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$test</code> - A test value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
