<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Config\Definition\Builder\ExprBuilder - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#node">$node</a>
          </li>
          <li>
            <a href="#ifPart">$ifPart</a>
          </li>
          <li>
            <a href="#thenPart">$thenPart</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#always">always</a>
          </li>
          <li>
            <a href="#buildExpressions">buildExpressions</a>
          </li>
          <li>
            <a href="#end">end</a>
          </li>
          <li>
            <a href="#ifArray">ifArray</a>
          </li>
          <li>
            <a href="#ifInArray">ifInArray</a>
          </li>
          <li>
            <a href="#ifNotInArray">ifNotInArray</a>
          </li>
          <li>
            <a href="#ifNull">ifNull</a>
          </li>
          <li>
            <a href="#ifString">ifString</a>
          </li>
          <li>
            <a href="#ifTrue">ifTrue</a>
          </li>
          <li>
            <a href="#then">then</a>
          </li>
          <li>
            <a href="#thenEmptyArray">thenEmptyArray</a>
          </li>
          <li>
            <a href="#thenInvalid">thenInvalid</a>
          </li>
          <li>
            <a href="#thenUnset">thenUnset</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Config\Definition\Builder\</span>ExprBuilder</h2>
        <div class="file-notice">
          <p>This class builds an if expression.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
          <li><b>Author: </b>Christophe Coevoet &lt;stof@notk.org&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="node"/>
            <h4><span class="label protected">protected</span>
                $node</h4>
          </li>
          <li>
            <a name="ifPart"/>
            <h4><span class="label public">public</span>
                $ifPart</h4>
          </li>
          <li>
            <a name="thenPart"/>
            <h4><span class="label public">public</span>
                $thenPart</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_Definition_Builder_NodeDefinition.xhtml">Symfony\Component\Config\Definition\Builder\NodeDefinition</a></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - The related node</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="always"/>
            <h4><span class="label public">public</span>always<span style="font-size:90%;">( <span class="param-type"><span title="Closure">Closure</span></span><strong> $then</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Marks the expression as being always used.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$then</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="buildExpressions"/>
            <h4><span class="label true">true</span><span class="label public">public</span>buildExpressions<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $expressions</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Builds the expressions.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expressions</code> - An array of ExprBuilder instances to build</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="end"/>
            <h4><span class="label public">public</span>end<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the related node</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ifArray"/>
            <h4><span class="label public">public</span>ifArray<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tests if the value is an array.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ifInArray"/>
            <h4><span class="label public">public</span>ifInArray<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $array</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tests if the value is in an array.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$array</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ifNotInArray"/>
            <h4><span class="label public">public</span>ifNotInArray<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $array</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tests if the value is not in an array.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$array</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ifNull"/>
            <h4><span class="label public">public</span>ifNull<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tests if the value is null.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ifString"/>
            <h4><span class="label public">public</span>ifString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tests if the value is a string.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ifTrue"/>
            <h4><span class="label public">public</span>ifTrue<span style="font-size:90%;">( <span class="param-type"><span title="Closure">Closure</span></span><strong> $closure</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a closure to use as tests.<pre>The default one tests if the value is true.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$closure</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="then"/>
            <h4><span class="label public">public</span>then<span style="font-size:90%;">( <span class="param-type"><span title="Closure">Closure</span></span><strong> $closure</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the closure to run if the test pass.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$closure</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="thenEmptyArray"/>
            <h4><span class="label public">public</span>thenEmptyArray<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a closure returning an empty array.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="thenInvalid"/>
            <h4><span class="label public">public</span>thenInvalid<span style="font-size:90%;">( <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a closure marking the value as invalid at validation time.<pre>if you want to add the value of the node in your message just use a %s placeholder.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="thenUnset"/>
            <h4><span class="label public">public</span>thenUnset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a closure unsetting this key of the array at validation time.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>UnsetKeyException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
