<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Finder\Glob - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#toRegex">toRegex</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Finder\</span>Glob</h2>
        <div class="file-notice">
          <p>Glob matches globbing patterns against text.</p>
          <p>
            <pre>if match_glob("foo.*", "foo.bar") echo "matched\n";

// prints foo.bar and foo.baz
$regex = glob_to_regex("foo.*");
for (array('foo.bar', 'foo.baz', 'foo', 'bar') as $t)
{
  if (/$regex/) echo "matched: $car\n";
}

Glob implements glob(3) style matching that can be used to match
against text, rather than fetching names from a filesystem.

Based on the Perl Text::Glob module.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt; PHP port</li>
          <li><b>Author: </b>Richard Clamp &lt;richardc@unixbeard.net&gt; Perl version</li>
          <li><b>Copyright: </b>2004-2005 Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Copyright: </b>2002 Richard Clamp &lt;richardc@unixbeard.net&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="toRegex"/>
            <h4><span class="label true">true</span><span class="label public">public</span>toRegex<span style="font-size:90%;">( <span class="param-type">string</span><strong> $glob</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $strictLeadingDot</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $strictWildcardSlash</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a regexp which is the equivalent of the glob pattern.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$glob</code> - The glob pattern</li>
                <li><code>$strictLeadingDot</code> - </li>
                <li><code>$strictWildcardSlash</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>regex The regexp</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
