<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Validator\Constraints\Regex - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#message">$message</a>
          </li>
          <li>
            <a href="#pattern">$pattern</a>
          </li>
          <li>
            <a href="#htmlPattern">$htmlPattern</a>
          </li>
          <li>
            <a href="#match">$match</a>
          </li>
          <li>
            <a href="#groups">$groups</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__set">__set</a>
          </li>
          <li>
            <a href="#addImplicitGroupName">addImplicitGroupName</a>
          </li>
          <li>
            <a href="#getDefaultOption">getDefaultOption</a>
          </li>
          <li>
            <a href="#getDefaultOption">getDefaultOption</a>
          </li>
          <li>
            <a href="#getHtmlPattern">getHtmlPattern</a>
          </li>
          <li>
            <a href="#getNonDelimitedPattern">getNonDelimitedPattern</a>
          </li>
          <li>
            <a href="#getRequiredOptions">getRequiredOptions</a>
          </li>
          <li>
            <a href="#getRequiredOptions">getRequiredOptions</a>
          </li>
          <li>
            <a href="#getTargets">getTargets</a>
          </li>
          <li>
            <a href="#validatedBy">validatedBy</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Validator\Constraints\</span>Regex</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="message"/>
            <h4><span class="label public">public</span>
                $message</h4>
          </li>
          <li>
            <a name="pattern"/>
            <h4><span class="label public">public</span>
                $pattern</h4>
          </li>
          <li>
            <a name="htmlPattern"/>
            <h4><span class="label public">public</span>
                $htmlPattern</h4>
          </li>
          <li>
            <a name="match"/>
            <h4><span class="label public">public</span>
                $match</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes the constraint with options.<pre>You should pass an associative array. The keys should be the names of
existing properties in this class. The values should be the value for these
properties.

Alternatively you can override the method getDefaultOption() to return the
name of an existing property. If no associative array is passed, this
property is set instead.

You can force that certain options are set by overriding
getRequiredOptions() to return the names of these options. If any
option is not set here, an exception is thrown.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - The options (as associative array)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidOptionsException       When you pass the names of non-existing</code>
                </li>
                <li>
                  <code>MissingOptionsException       When you don't pass any of the options</code>
                </li>
                <li>
                  <code>ConstraintDefinitionException When you don't pass an associative</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__set"/>
            <h4><span class="label public">public</span>__set<span style="font-size:90%;">( <span class="param-type"/><strong> $option</strong>, <span class="param-type"/><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unsupported operation.</li>
            </p>
          </li>
          <li>
            <a name="addImplicitGroupName"/>
            <h4><span class="label public">public</span>addImplicitGroupName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $group</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds the given group if this constraint is in the Default group</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$group</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDefaultOption"/>
            <h4><span class="label public">public</span>getDefaultOption<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="getDefaultOption"/>
            <h4><span class="label public">public</span>getDefaultOption<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the name of the default option<pre>Override this method to define a default option.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHtmlPattern"/>
            <h4><span class="label public">public</span>getHtmlPattern<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns htmlPattern if exists or pattern is convertible.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRequiredOptions"/>
            <h4><span class="label public">public</span>getRequiredOptions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="getRequiredOptions"/>
            <h4><span class="label public">public</span>getRequiredOptions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the name of the required options<pre>Override this method if you want to define required options.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTargets"/>
            <h4><span class="label public">public</span>getTargets<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the constraint can be put onto classes, properties or both<pre>This method should return one or more of the constants
Constraint::CLASS_CONSTRAINT and Constraint::PROPERTY_CONSTRAINT.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>One or more constant values</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validatedBy"/>
            <h4><span class="label public">public</span>validatedBy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the name of the class that validates this constraint<pre>By default, this is the fully qualified name of the constraint class
suffixed with "Validator". You can override this method to change that
behaviour.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNonDelimitedPattern"/>
            <h4><span class="label private">private</span>getNonDelimitedPattern<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Convert the htmlPattern to a suitable format for HTML5 pattern.<pre>Example: /^[a-z]+$/ would be converted to [a-z]+
However, if options are specified, it cannot be converted

Pattern is also ignored if match=false since the pattern should
then be reversed before application.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
