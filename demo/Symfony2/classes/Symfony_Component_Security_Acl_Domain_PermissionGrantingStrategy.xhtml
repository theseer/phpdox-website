<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#EQUAL">EQUAL</a>
          </li>
          <li>
            <a href="#ALL">ALL</a>
          </li>
          <li>
            <a href="#ANY">ANY</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#auditLogger">$auditLogger</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#hasSufficientPermissions">hasSufficientPermissions</a>
          </li>
          <li>
            <a href="#isAceApplicable">isAceApplicable</a>
          </li>
          <li>
            <a href="#isFieldGranted">isFieldGranted</a>
          </li>
          <li>
            <a href="#isGranted">isGranted</a>
          </li>
          <li>
            <a href="#setAuditLogger">setAuditLogger</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Security\Acl\Domain\</span>PermissionGrantingStrategy</h2>
        <div class="file-notice">
          <p>The permission granting strategy to apply to the access control list.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_Security_Acl_Model_PermissionGrantingStrategyInterface.xhtml">Symfony\Component\Security\Acl\Model\PermissionGrantingStrategyInterface</a>
          </li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="EQUAL"/>EQUAL = 'equal'<hr/></li>
          <li><a name="ALL"/>ALL = 'all'<hr/></li>
          <li><a name="ANY"/>ANY = 'any'<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="auditLogger"/>
            <h4><span class="label private">private</span>
                $auditLogger</h4>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="isFieldGranted"/>
            <h4><span class="label public">public</span>isFieldGranted<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Security_Acl_Model_AclInterface.xhtml">Symfony\Component\Security\Acl\Model\AclInterface</a></span><strong> $acl</strong>, <span class="param-type"/><strong> $field</strong>, <span class="param-type">Array</span><strong> $masks</strong>, <span class="param-type">Array</span><strong> $sids</strong>, <span class="param-type"/><strong> $administrativeMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="isGranted"/>
            <h4><span class="label public">public</span>isGranted<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Security_Acl_Model_AclInterface.xhtml">Symfony\Component\Security\Acl\Model\AclInterface</a></span><strong> $acl</strong>, <span class="param-type">Array</span><strong> $masks</strong>, <span class="param-type">Array</span><strong> $sids</strong>, <span class="param-type"/><strong> $administrativeMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="setAuditLogger"/>
            <h4><span class="label public">public</span>setAuditLogger<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Security_Acl_Model_AuditLoggerInterface.xhtml">Symfony\Component\Security\Acl\Model\AuditLoggerInterface</a></span><strong> $auditLogger</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the audit logger</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$auditLogger</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasSufficientPermissions"/>
            <h4><span class="label private">private</span>hasSufficientPermissions<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Security_Acl_Model_AclInterface.xhtml">Symfony\Component\Security\Acl\Model\AclInterface</a></span><strong> $acl</strong>, <span class="param-type">Array</span><strong> $aces</strong>, <span class="param-type">Array</span><strong> $masks</strong>, <span class="param-type">Array</span><strong> $sids</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $administrativeMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Makes an authorization decision.<pre>The order of ACEs, and SIDs is significant; the order of permission masks
not so much. It is important to note that the more specific security
identities should be at the beginning of the SIDs array in order for this
strategy to produce intuitive authorization decisions.

First, we will iterate over permissions, then over security identities.
For each combination of permission, and identity we will test the
available ACEs until we find one which is applicable.

The first applicable ACE will make the ultimate decision for the
permission/identity combination. If it is granting, this method will return
true, if it is denying, the method will continue to check the next
permission/identity combination.

This process is repeated until either a granting ACE is found, or no
permission/identity combinations are left. Finally, we will either throw
an NoAceFoundException, or deny access.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$acl</code> - </li>
                <li><code>$aces</code> - An array of ACE to check against</li>
                <li><code>$masks</code> - An array of permission masks</li>
                <li><code>$sids</code> - An array of SecurityIdentityInterface implementations</li>
                <li><code>$administrativeMode</code> - True turns off audit logging</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true, or false; either granting, or denying access respectively.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>NoAceFoundException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isAceApplicable"/>
            <h4><span class="label private">private</span>isAceApplicable<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $requiredMask</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Security_Acl_Model_EntryInterface.xhtml">Symfony\Component\Security\Acl\Model\EntryInterface</a></span><strong> $ace</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines whether the ACE is applicable to the given permission/security identity combination.<pre>Per default, we support three different comparison strategies.

Strategy ALL:
The ACE will be considered applicable when all the turned-on bits in the
required mask are also turned-on in the ACE mask.

Strategy ANY:
The ACE will be considered applicable when any of the turned-on bits in
the required mask is also turned-on the in the ACE mask.

Strategy EQUAL:
The ACE will be considered applicable when the bitmasks are equal.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$requiredMask</code> - </li>
                <li><code>$ace</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException if the ACE strategy is not supported</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
