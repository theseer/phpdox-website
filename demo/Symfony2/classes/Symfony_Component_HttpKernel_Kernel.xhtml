<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpKernel\Kernel - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#VERSION">VERSION</a>
          </li>
          <li>
            <a href="#VERSION_ID">VERSION_ID</a>
          </li>
          <li>
            <a href="#MAJOR_VERSION">MAJOR_VERSION</a>
          </li>
          <li>
            <a href="#MINOR_VERSION">MINOR_VERSION</a>
          </li>
          <li>
            <a href="#RELEASE_VERSION">RELEASE_VERSION</a>
          </li>
          <li>
            <a href="#EXTRA_VERSION">EXTRA_VERSION</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#bundles">$bundles</a>
          </li>
          <li>
            <a href="#bundleMap">$bundleMap</a>
          </li>
          <li>
            <a href="#container">$container</a>
          </li>
          <li>
            <a href="#rootDir">$rootDir</a>
          </li>
          <li>
            <a href="#environment">$environment</a>
          </li>
          <li>
            <a href="#debug">$debug</a>
          </li>
          <li>
            <a href="#booted">$booted</a>
          </li>
          <li>
            <a href="#name">$name</a>
          </li>
          <li>
            <a href="#startTime">$startTime</a>
          </li>
          <li>
            <a href="#classes">$classes</a>
          </li>
          <li>
            <a href="#loadClassCache">$loadClassCache</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__clone">__clone</a>
          </li>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#boot">boot</a>
          </li>
          <li>
            <a href="#buildContainer">buildContainer</a>
          </li>
          <li>
            <a href="#doLoadClassCache">doLoadClassCache</a>
          </li>
          <li>
            <a href="#dumpContainer">dumpContainer</a>
          </li>
          <li>
            <a href="#getBundle">getBundle</a>
          </li>
          <li>
            <a href="#getBundles">getBundles</a>
          </li>
          <li>
            <a href="#getCacheDir">getCacheDir</a>
          </li>
          <li>
            <a href="#getCharset">getCharset</a>
          </li>
          <li>
            <a href="#getContainer">getContainer</a>
          </li>
          <li>
            <a href="#getContainerBaseClass">getContainerBaseClass</a>
          </li>
          <li>
            <a href="#getContainerBuilder">getContainerBuilder</a>
          </li>
          <li>
            <a href="#getContainerClass">getContainerClass</a>
          </li>
          <li>
            <a href="#getContainerLoader">getContainerLoader</a>
          </li>
          <li>
            <a href="#getEnvParameters">getEnvParameters</a>
          </li>
          <li>
            <a href="#getEnvironment">getEnvironment</a>
          </li>
          <li>
            <a href="#getHttpKernel">getHttpKernel</a>
          </li>
          <li>
            <a href="#getKernelParameters">getKernelParameters</a>
          </li>
          <li>
            <a href="#getLogDir">getLogDir</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getRootDir">getRootDir</a>
          </li>
          <li>
            <a href="#getStartTime">getStartTime</a>
          </li>
          <li>
            <a href="#handle">handle</a>
          </li>
          <li>
            <a href="#init">init</a>
          </li>
          <li>
            <a href="#initializeBundles">initializeBundles</a>
          </li>
          <li>
            <a href="#initializeContainer">initializeContainer</a>
          </li>
          <li>
            <a href="#isClassInActiveBundle">isClassInActiveBundle</a>
          </li>
          <li>
            <a href="#isDebug">isDebug</a>
          </li>
          <li>
            <a href="#loadClassCache">loadClassCache</a>
          </li>
          <li>
            <a href="#locateResource">locateResource</a>
          </li>
          <li>
            <a href="#prepareContainer">prepareContainer</a>
          </li>
          <li>
            <a href="#serialize">serialize</a>
          </li>
          <li>
            <a href="#setClassCache">setClassCache</a>
          </li>
          <li>
            <a href="#shutdown">shutdown</a>
          </li>
          <li>
            <a href="#stripComments">stripComments</a>
          </li>
          <li>
            <a href="#terminate">terminate</a>
          </li>
          <li>
            <a href="#unserialize">unserialize</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpKernel\</span>Kernel</h2>
        <div class="file-notice">
          <p>The Kernel is the heart of the Symfony system.</p>
          <p>
            <pre>It manages an environment made of bundles.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_HttpKernel_KernelInterface.xhtml">Symfony\Component\HttpKernel\KernelInterface</a>
          </li>
          <li>
            <a href="../interfaces/Symfony_Component_HttpKernel_TerminableInterface.xhtml">Symfony\Component\HttpKernel\TerminableInterface</a>
          </li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="VERSION"/>VERSION = '2.3.2'<hr/></li>
          <li><a name="VERSION_ID"/>VERSION_ID = '20302'<hr/></li>
          <li><a name="MAJOR_VERSION"/>MAJOR_VERSION = '2'<hr/></li>
          <li><a name="MINOR_VERSION"/>MINOR_VERSION = '3'<hr/></li>
          <li><a name="RELEASE_VERSION"/>RELEASE_VERSION = '2'<hr/></li>
          <li><a name="EXTRA_VERSION"/>EXTRA_VERSION = ''<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="bundles"/>
            <h4><span class="label protected">protected</span>array 
                
                $bundles</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="bundleMap"/>
            <h4><span class="label protected">protected</span>
                $bundleMap</h4>
          </li>
          <li>
            <a name="container"/>
            <h4><span class="label protected">protected</span>
                $container</h4>
          </li>
          <li>
            <a name="rootDir"/>
            <h4><span class="label protected">protected</span>
                $rootDir</h4>
          </li>
          <li>
            <a name="environment"/>
            <h4><span class="label protected">protected</span>
                $environment</h4>
          </li>
          <li>
            <a name="debug"/>
            <h4><span class="label protected">protected</span>
                $debug</h4>
          </li>
          <li>
            <a name="booted"/>
            <h4><span class="label protected">protected</span>
                $booted</h4>
          </li>
          <li>
            <a name="name"/>
            <h4><span class="label protected">protected</span>
                $name</h4>
          </li>
          <li>
            <a name="startTime"/>
            <h4><span class="label protected">protected</span>
                $startTime</h4>
          </li>
          <li>
            <a name="classes"/>
            <h4><span class="label protected">protected</span>
                $classes</h4>
          </li>
          <li>
            <a name="loadClassCache"/>
            <h4><span class="label protected">protected</span>
                $loadClassCache</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $environment</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $debug</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$environment</code> - The environment</li>
                <li><code>$debug</code> - Whether to enable debugging or not</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__clone"/>
            <h4><span class="label public">public</span>__clone<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="boot"/>
            <h4><span class="label public">public</span>boot<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Boots the current kernel.</li>
            </p>
          </li>
          <li>
            <a name="getBundle"/>
            <h4><span class="label public">public</span>getBundle<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type"/><strong> $first</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getBundles"/>
            <h4><span class="label public">public</span>getBundles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getCacheDir"/>
            <h4><span class="label public">public</span>getCacheDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getCharset"/>
            <h4><span class="label public">public</span>getCharset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getContainer"/>
            <h4><span class="label public">public</span>getContainer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getEnvironment"/>
            <h4><span class="label public">public</span>getEnvironment<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getLogDir"/>
            <h4><span class="label public">public</span>getLogDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getRootDir"/>
            <h4><span class="label public">public</span>getRootDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getStartTime"/>
            <h4><span class="label public">public</span>getStartTime<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="handle"/>
            <h4><span class="label public">public</span>handle<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong>, <span class="param-type"/><strong> $type</strong>, <span class="param-type"/><strong> $catch</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="init"/>
            <h4><span class="label public">public</span>init<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
          </li>
          <li>
            <a name="isClassInActiveBundle"/>
            <h4><span class="label public">public</span>isClassInActiveBundle<span style="font-size:90%;">( <span class="param-type"/><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="isDebug"/>
            <h4><span class="label public">public</span>isDebug<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="loadClassCache"/>
            <h4><span class="label public">public</span>loadClassCache<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">string</span><strong> $extension</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads the PHP class cache.<pre>This methods only registers the fact that you want to load the cache classes.
The cache will actually only be loaded when the Kernel is booted.

That optimization is mainly useful when using the HttpCache class in which
case the class cache is not loaded if the Response is in the cache.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The cache name prefix</li>
                <li><code>$extension</code> - File extension of the resulting file</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="locateResource"/>
            <h4><span class="label public">public</span>locateResource<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">string</span><strong> $dir</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $first</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the file path for a given resource.<pre>A Resource can be a file or a directory.

The resource name must follow the following pattern:

    @&lt;BundleName&gt;/path/to/a/file.something

where BundleName is the name of the bundle
and the remaining part is the relative path in the bundle.

If $dir is passed, and the first segment of the path is "Resources",
this method will look for a file named:

    $dir/&lt;BundleName&gt;/path/without/Resources

before looking in the bundle resource folder.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - A resource name to locate</li>
                <li><code>$dir</code> - A directory where to look for the resource first</li>
                <li><code>$first</code> - Whether to return the first path or paths for all matching bundles</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The absolute path of the resource or an array if $first is false</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException if the file cannot be found or the name is not valid</code>
                </li>
                <li>
                  <code>\RuntimeException         if the name contains invalid/unsafe</code>
                </li>
                <li>
                  <code>\RuntimeException         if a custom resource is hidden by a resource in a derived bundle</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="serialize"/>
            <h4><span class="label public">public</span>serialize<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="setClassCache"/>
            <h4><span class="label public">public</span>setClassCache<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Used internally.</li>
            </p>
          </li>
          <li>
            <a name="shutdown"/>
            <h4><span class="label public">public</span>shutdown<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="stripComments"/>
            <h4><span class="label true">true</span><span class="label public">public</span>stripComments<span style="font-size:90%;">( <span class="param-type">string</span><strong> $source</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes comments from a PHP source string.<pre>We don't use the PHP php_strip_whitespace() function
as we want the content to be readable and well-formatted.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$source</code> - A PHP string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The PHP string with the comments removed</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="terminate"/>
            <h4><span class="label public">public</span>terminate<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Response.xhtml">Symfony\Component\HttpFoundation\Response</a></span><strong> $response</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="unserialize"/>
            <h4><span class="label public">public</span>unserialize<span style="font-size:90%;">( <span class="param-type"/><strong> $data</strong> )</span></h4>
          </li>
          <li>
            <a name="buildContainer"/>
            <h4><span class="label protected">protected</span>buildContainer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Builds the service container.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The compiled service container</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="doLoadClassCache"/>
            <h4><span class="label protected">protected</span>doLoadClassCache<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type"/><strong> $extension</strong> )</span></h4>
          </li>
          <li>
            <a name="dumpContainer"/>
            <h4><span class="label protected">protected</span>dumpContainer<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_ConfigCache.xhtml">Symfony\Component\Config\ConfigCache</a></span><strong> $cache</strong>, <span class="param-type"><a href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder.xhtml">Symfony\Component\DependencyInjection\ContainerBuilder</a></span><strong> $container</strong>, <span class="param-type">string</span><strong> $class</strong>, <span class="param-type">string</span><strong> $baseClass</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Dumps the service container to PHP code in the cache.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$cache</code> - The config cache</li>
                <li><code>$container</code> - The service container</li>
                <li><code>$class</code> - The name of the class to generate</li>
                <li><code>$baseClass</code> - The name of the container's base class</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainerBaseClass"/>
            <h4><span class="label protected">protected</span>getContainerBaseClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the container's base class.<pre>All names except Container must be fully qualified.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainerBuilder"/>
            <h4><span class="label protected">protected</span>getContainerBuilder<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a new ContainerBuilder instance used to build the service container.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainerClass"/>
            <h4><span class="label protected">protected</span>getContainerClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the container class.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The container class</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainerLoader"/>
            <h4><span class="label protected">protected</span>getContainerLoader<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_DependencyInjection_ContainerInterface.xhtml">Symfony\Component\DependencyInjection\ContainerInterface</a></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a loader for the container.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - The service container</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The loader</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getEnvParameters"/>
            <h4><span class="label protected">protected</span>getEnvParameters<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the environment parameters.<pre>Only the parameters starting with "SYMFONY__" are considered.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of parameters</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHttpKernel"/>
            <h4><span class="label protected">protected</span>getHttpKernel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a http kernel from the container</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getKernelParameters"/>
            <h4><span class="label protected">protected</span>getKernelParameters<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the kernel parameters.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of kernel parameters</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initializeBundles"/>
            <h4><span class="label protected">protected</span>initializeBundles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes the data structures related to the bundle management.<pre>- the bundles property maps a bundle name to the bundle instance,
 - the bundleMap property maps a bundle name to the bundle inheritance hierarchy (most derived bundle first).</pre></li>
            </p>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\LogicException if two bundles share a common name</code>
                </li>
                <li>
                  <code>\LogicException if a bundle tries to extend a non-registered bundle</code>
                </li>
                <li>
                  <code>\LogicException if a bundle tries to extend itself</code>
                </li>
                <li>
                  <code>\LogicException if two bundles extend the same ancestor</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initializeContainer"/>
            <h4><span class="label protected">protected</span>initializeContainer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes the service container.<pre>The cached version of the service container is used when fresh, otherwise the
container is built.</pre></li>
            </p>
          </li>
          <li>
            <a name="prepareContainer"/>
            <h4><span class="label protected">protected</span>prepareContainer<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder.xhtml">Symfony\Component\DependencyInjection\ContainerBuilder</a></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepares the ContainerBuilder before it is compiled.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - A ContainerBuilder instance</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
