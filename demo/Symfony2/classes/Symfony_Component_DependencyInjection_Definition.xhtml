<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\DependencyInjection\Definition - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#class">$class</a>
          </li>
          <li>
            <a href="#file">$file</a>
          </li>
          <li>
            <a href="#factoryClass">$factoryClass</a>
          </li>
          <li>
            <a href="#factoryMethod">$factoryMethod</a>
          </li>
          <li>
            <a href="#factoryService">$factoryService</a>
          </li>
          <li>
            <a href="#scope">$scope</a>
          </li>
          <li>
            <a href="#properties">$properties</a>
          </li>
          <li>
            <a href="#calls">$calls</a>
          </li>
          <li>
            <a href="#configurator">$configurator</a>
          </li>
          <li>
            <a href="#tags">$tags</a>
          </li>
          <li>
            <a href="#public">$public</a>
          </li>
          <li>
            <a href="#synthetic">$synthetic</a>
          </li>
          <li>
            <a href="#abstract">$abstract</a>
          </li>
          <li>
            <a href="#synchronized">$synchronized</a>
          </li>
          <li>
            <a href="#lazy">$lazy</a>
          </li>
          <li>
            <a href="#arguments">$arguments</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addArgument">addArgument</a>
          </li>
          <li>
            <a href="#addMethodCall">addMethodCall</a>
          </li>
          <li>
            <a href="#addTag">addTag</a>
          </li>
          <li>
            <a href="#clearTag">clearTag</a>
          </li>
          <li>
            <a href="#clearTags">clearTags</a>
          </li>
          <li>
            <a href="#getArgument">getArgument</a>
          </li>
          <li>
            <a href="#getArguments">getArguments</a>
          </li>
          <li>
            <a href="#getClass">getClass</a>
          </li>
          <li>
            <a href="#getConfigurator">getConfigurator</a>
          </li>
          <li>
            <a href="#getFactoryClass">getFactoryClass</a>
          </li>
          <li>
            <a href="#getFactoryMethod">getFactoryMethod</a>
          </li>
          <li>
            <a href="#getFactoryService">getFactoryService</a>
          </li>
          <li>
            <a href="#getFile">getFile</a>
          </li>
          <li>
            <a href="#getMethodCalls">getMethodCalls</a>
          </li>
          <li>
            <a href="#getProperties">getProperties</a>
          </li>
          <li>
            <a href="#getScope">getScope</a>
          </li>
          <li>
            <a href="#getTag">getTag</a>
          </li>
          <li>
            <a href="#getTags">getTags</a>
          </li>
          <li>
            <a href="#hasMethodCall">hasMethodCall</a>
          </li>
          <li>
            <a href="#hasTag">hasTag</a>
          </li>
          <li>
            <a href="#isAbstract">isAbstract</a>
          </li>
          <li>
            <a href="#isLazy">isLazy</a>
          </li>
          <li>
            <a href="#isPublic">isPublic</a>
          </li>
          <li>
            <a href="#isSynchronized">isSynchronized</a>
          </li>
          <li>
            <a href="#isSynthetic">isSynthetic</a>
          </li>
          <li>
            <a href="#removeMethodCall">removeMethodCall</a>
          </li>
          <li>
            <a href="#replaceArgument">replaceArgument</a>
          </li>
          <li>
            <a href="#setAbstract">setAbstract</a>
          </li>
          <li>
            <a href="#setArguments">setArguments</a>
          </li>
          <li>
            <a href="#setClass">setClass</a>
          </li>
          <li>
            <a href="#setConfigurator">setConfigurator</a>
          </li>
          <li>
            <a href="#setFactoryClass">setFactoryClass</a>
          </li>
          <li>
            <a href="#setFactoryMethod">setFactoryMethod</a>
          </li>
          <li>
            <a href="#setFactoryService">setFactoryService</a>
          </li>
          <li>
            <a href="#setFile">setFile</a>
          </li>
          <li>
            <a href="#setLazy">setLazy</a>
          </li>
          <li>
            <a href="#setMethodCalls">setMethodCalls</a>
          </li>
          <li>
            <a href="#setProperties">setProperties</a>
          </li>
          <li>
            <a href="#setProperty">setProperty</a>
          </li>
          <li>
            <a href="#setPublic">setPublic</a>
          </li>
          <li>
            <a href="#setScope">setScope</a>
          </li>
          <li>
            <a href="#setSynchronized">setSynchronized</a>
          </li>
          <li>
            <a href="#setSynthetic">setSynthetic</a>
          </li>
          <li>
            <a href="#setTags">setTags</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\DependencyInjection\</span>Definition</h2>
        <div class="file-notice">
          <p>Definition represents a service definition.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="class"/>
            <h4><span class="label private">private</span>
                $class</h4>
          </li>
          <li>
            <a name="file"/>
            <h4><span class="label private">private</span>
                $file</h4>
          </li>
          <li>
            <a name="factoryClass"/>
            <h4><span class="label private">private</span>
                $factoryClass</h4>
          </li>
          <li>
            <a name="factoryMethod"/>
            <h4><span class="label private">private</span>
                $factoryMethod</h4>
          </li>
          <li>
            <a name="factoryService"/>
            <h4><span class="label private">private</span>
                $factoryService</h4>
          </li>
          <li>
            <a name="scope"/>
            <h4><span class="label private">private</span>
                $scope</h4>
          </li>
          <li>
            <a name="properties"/>
            <h4><span class="label private">private</span>
                $properties</h4>
          </li>
          <li>
            <a name="calls"/>
            <h4><span class="label private">private</span>
                $calls</h4>
          </li>
          <li>
            <a name="configurator"/>
            <h4><span class="label private">private</span>
                $configurator</h4>
          </li>
          <li>
            <a name="tags"/>
            <h4><span class="label private">private</span>
                $tags</h4>
          </li>
          <li>
            <a name="public"/>
            <h4><span class="label private">private</span>
                $public</h4>
          </li>
          <li>
            <a name="synthetic"/>
            <h4><span class="label private">private</span>
                $synthetic</h4>
          </li>
          <li>
            <a name="abstract"/>
            <h4><span class="label private">private</span>
                $abstract</h4>
          </li>
          <li>
            <a name="synchronized"/>
            <h4><span class="label private">private</span>
                $synchronized</h4>
          </li>
          <li>
            <a name="lazy"/>
            <h4><span class="label private">private</span>
                $lazy</h4>
          </li>
          <li>
            <a name="arguments"/>
            <h4><span class="label protected">protected</span>
                $arguments</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong>, <span class="param-type">Array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The service class</li>
                <li><code>$arguments</code> - An array of arguments to pass to the service constructor</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addArgument"/>
            <h4><span class="label public">public</span>addArgument<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $argument</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an argument to pass to the service constructor/factory method.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$argument</code> - An argument</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addMethodCall"/>
            <h4><span class="label public">public</span>addMethodCall<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong>, <span class="param-type">Array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a method to call after service initialization.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - The method name to call</li>
                <li><code>$arguments</code> - An array of arguments to pass to the method call</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidArgumentException on empty $method param</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addTag"/>
            <h4><span class="label public">public</span>addTag<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">Array</span><strong> $attributes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a tag for this definition.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The tag name</li>
                <li><code>$attributes</code> - An array of attributes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="clearTag"/>
            <h4><span class="label public">public</span>clearTag<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears all tags for a given name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The tag name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="clearTags"/>
            <h4><span class="label public">public</span>clearTags<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the tags for this definition.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getArgument"/>
            <h4><span class="label public">public</span>getArgument<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $index</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets an argument to pass to the service constructor/factory method.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$index</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The argument value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>OutOfBoundsException When the argument does not exist</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getArguments"/>
            <h4><span class="label public">public</span>getArguments<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the arguments to pass to the service constructor/factory method.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The array of arguments</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClass"/>
            <h4><span class="label public">public</span>getClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the service class.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The service class</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getConfigurator"/>
            <h4><span class="label public">public</span>getConfigurator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the configurator to call after the service is fully initialized.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The PHP callable to call</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFactoryClass"/>
            <h4><span class="label public">public</span>getFactoryClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the factory class.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The factory class name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFactoryMethod"/>
            <h4><span class="label public">public</span>getFactoryMethod<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the factory method.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The factory method name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFactoryService"/>
            <h4><span class="label public">public</span>getFactoryService<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the factory service id.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The factory service id</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFile"/>
            <h4><span class="label public">public</span>getFile<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the file to require before creating the service.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The full pathname to include</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMethodCalls"/>
            <h4><span class="label public">public</span>getMethodCalls<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the methods to call after service initialization.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of method calls</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getProperties"/>
            <h4><span class="label public">public</span>getProperties<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
          </li>
          <li>
            <a name="getScope"/>
            <h4><span class="label public">public</span>getScope<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the scope of the service</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTag"/>
            <h4><span class="label public">public</span>getTag<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a tag by name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The tag name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of attributes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTags"/>
            <h4><span class="label public">public</span>getTags<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all tags.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of tags</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasMethodCall"/>
            <h4><span class="label public">public</span>hasMethodCall<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the current definition has a given method to call after service initialization.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - The method name to search for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasTag"/>
            <h4><span class="label public">public</span>hasTag<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this definition has a tag with the given name</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isAbstract"/>
            <h4><span class="label public">public</span>isAbstract<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this definition is abstract, that means it merely serves as a template for other definitions.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isLazy"/>
            <h4><span class="label public">public</span>isLazy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this service is lazy.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isPublic"/>
            <h4><span class="label public">public</span>isPublic<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this service is public facing</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSynchronized"/>
            <h4><span class="label public">public</span>isSynchronized<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this service is synchronized.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSynthetic"/>
            <h4><span class="label public">public</span>isSynthetic<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this definition is synthetic, that is not constructed by the container, but dynamically injected.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeMethodCall"/>
            <h4><span class="label public">public</span>removeMethodCall<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes a method to call after service initialization.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - The method name to remove</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="replaceArgument"/>
            <h4><span class="label public">public</span>replaceArgument<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $index</strong>, <span class="param-type">mixed</span><strong> $argument</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a specific argument</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$index</code> - </li>
                <li><code>$argument</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>OutOfBoundsException When the replaced argument does not exist</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAbstract"/>
            <h4><span class="label public">public</span>setAbstract<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this definition is abstract, that means it merely serves as a template for other definitions.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>the current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setArguments"/>
            <h4><span class="label public">public</span>setArguments<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the arguments to pass to the service constructor/factory method.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$arguments</code> - An array of arguments</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setClass"/>
            <h4><span class="label public">public</span>setClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the service class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The service class</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setConfigurator"/>
            <h4><span class="label public">public</span>setConfigurator<span style="font-size:90%;">( <span class="param-type"><span title="callable">callable</span></span><strong> $callable</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a configurator to call after the service is fully initialized.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$callable</code> - A PHP callable</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFactoryClass"/>
            <h4><span class="label public">public</span>setFactoryClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $factoryClass</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the name of the class that acts as a factory using the factory method, which will be invoked statically.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$factoryClass</code> - The factory class name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFactoryMethod"/>
            <h4><span class="label public">public</span>setFactoryMethod<span style="font-size:90%;">( <span class="param-type">string</span><strong> $factoryMethod</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the factory method able to create an instance of this class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$factoryMethod</code> - The factory method name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFactoryService"/>
            <h4><span class="label public">public</span>setFactoryService<span style="font-size:90%;">( <span class="param-type">string</span><strong> $factoryService</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the name of the service that acts as a factory using the factory method.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$factoryService</code> - The factory service id</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFile"/>
            <h4><span class="label public">public</span>setFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $file</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a file to require before creating the service.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$file</code> - A full pathname to include</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLazy"/>
            <h4><span class="label public">public</span>setLazy<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $lazy</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the lazy flag of this service.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$lazy</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMethodCalls"/>
            <h4><span class="label public">public</span>setMethodCalls<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $calls</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the methods to call after service initialization.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$calls</code> - An array of method calls</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setProperties"/>
            <h4><span class="label public">public</span>setProperties<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $properties</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
          </li>
          <li>
            <a name="setProperty"/>
            <h4><span class="label public">public</span>setProperty<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type"/><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
          </li>
          <li>
            <a name="setPublic"/>
            <h4><span class="label public">public</span>setPublic<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the visibility of this service.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setScope"/>
            <h4><span class="label public">public</span>setScope<span style="font-size:90%;">( <span class="param-type">string</span><strong> $scope</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the scope of the service</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$scope</code> - Whether the service must be shared or not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSynchronized"/>
            <h4><span class="label public">public</span>setSynchronized<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the synchronized flag of this service.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSynthetic"/>
            <h4><span class="label public">public</span>setSynthetic<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether this definition is synthetic, that is not constructed by the container, but dynamically injected.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>the current instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTags"/>
            <h4><span class="label public">public</span>setTags<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $tags</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets tags for this definition</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tags</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>the current instance</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
