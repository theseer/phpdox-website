<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpKernel\Event\FilterControllerEvent - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#controller">$controller</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#getController">getController</a>
          </li>
          <li>
            <a href="#getDispatcher">getDispatcher</a>
          </li>
          <li>
            <a href="#getKernel">getKernel</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getRequest">getRequest</a>
          </li>
          <li>
            <a href="#getRequestType">getRequestType</a>
          </li>
          <li>
            <a href="#isPropagationStopped">isPropagationStopped</a>
          </li>
          <li>
            <a href="#setController">setController</a>
          </li>
          <li>
            <a href="#setDispatcher">setDispatcher</a>
          </li>
          <li>
            <a href="#setName">setName</a>
          </li>
          <li>
            <a href="#stopPropagation">stopPropagation</a>
          </li>
          <li>
            <a href="#varToString">varToString</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpKernel\Event\</span>FilterControllerEvent</h2>
        <div class="file-notice">
          <p>Allows filtering of a controller callable</p>
          <p>
            <pre>You can call getController() to retrieve the current controller. With
setController() you can set a new controller that is used in the processing
of the request.

Controllers should be callables.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="controller"/>
            <h4><span class="label private">private</span>object 
                
                $controller</h4>
            <ul class="varlist">
              <li>The current controller</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_HttpKernel_HttpKernelInterface.xhtml">Symfony\Component\HttpKernel\HttpKernelInterface</a></span><strong> $kernel</strong>, <span class="param-type"/><strong> $controller</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong>, <span class="param-type"/><strong> $requestType</strong> )</span></h4>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getController"/>
            <h4><span class="label public">public</span>getController<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the current controller</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDispatcher"/>
            <h4><span class="label public">public</span>getDispatcher<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the EventDispatcher that dispatches this Event</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getKernel"/>
            <h4><span class="label public">public</span>getKernel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the kernel in which this event was thrown</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the event's name.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRequest"/>
            <h4><span class="label public">public</span>getRequest<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the request the kernel is currently processing</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRequestType"/>
            <h4><span class="label public">public</span>getRequestType<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the request type the kernel is currently processing</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>One of HttpKernelInterface::MASTER_REQUEST and</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isPropagationStopped"/>
            <h4><span class="label public">public</span>isPropagationStopped<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether further event listeners should be triggered.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether propagation was already stopped for this event.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setController"/>
            <h4><span class="label public">public</span>setController<span style="font-size:90%;">( <span class="param-type"><span title="callable">callable</span></span><strong> $controller</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a new controller</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$controller</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\LogicException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDispatcher"/>
            <h4><span class="label public">public</span>setDispatcher<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_EventDispatcher_EventDispatcherInterface.xhtml">Symfony\Component\EventDispatcher\EventDispatcherInterface</a></span><strong> $dispatcher</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Stores the EventDispatcher that dispatches this Event</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dispatcher</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setName"/>
            <h4><span class="label public">public</span>setName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the event's name property.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The event name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="stopPropagation"/>
            <h4><span class="label public">public</span>stopPropagation<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Stops the propagation of the event to further event listeners.<pre>If multiple event listeners are connected to the same event, no
further event listener will be triggered once any trigger calls
stopPropagation().</pre></li>
            </p>
          </li>
          <li>
            <a name="varToString"/>
            <h4><span class="label private">private</span>varToString<span style="font-size:90%;">( <span class="param-type"/><strong> $var</strong> )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
