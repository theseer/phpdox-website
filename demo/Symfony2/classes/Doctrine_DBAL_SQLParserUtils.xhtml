<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\DBAL\SQLParserUtils - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#POSITIONAL_TOKEN">POSITIONAL_TOKEN</a>
          </li>
          <li>
            <a href="#NAMED_TOKEN">NAMED_TOKEN</a>
          </li>
          <li>
            <a href="#ESCAPED_SINGLE_QUOTED_TEXT">ESCAPED_SINGLE_QUOTED_TEXT</a>
          </li>
          <li>
            <a href="#ESCAPED_DOUBLE_QUOTED_TEXT">ESCAPED_DOUBLE_QUOTED_TEXT</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#expandListParameters">expandListParameters</a>
          </li>
          <li>
            <a href="#extractParam">extractParam</a>
          </li>
          <li>
            <a href="#getPlaceholderPositions">getPlaceholderPositions</a>
          </li>
          <li>
            <a href="#getUnquotedStatementFragments">getUnquotedStatementFragments</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\DBAL\</span>SQLParserUtils</h2>
        <div class="file-notice">
          <p>Utility class that parses sql statements with regard to types and parameters.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
          <li><b>License: </b>http://www.opensource.org/licenses/lgpl-license.php LGPL</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="POSITIONAL_TOKEN"/>POSITIONAL_TOKEN = '\?'<hr/></li>
          <li><a name="NAMED_TOKEN"/>NAMED_TOKEN = '(?&lt;!:):[a-zA-Z_][a-zA-Z0-9_]*'<hr/></li>
          <li><a name="ESCAPED_SINGLE_QUOTED_TEXT"/>ESCAPED_SINGLE_QUOTED_TEXT = "'(?:[^'\\\\]|\\\\'|\\\\\\\\)*'"<hr/></li>
          <li><a name="ESCAPED_DOUBLE_QUOTED_TEXT"/>ESCAPED_DOUBLE_QUOTED_TEXT = '"(?:[^"\\\\]|\\\\"|\\\\\\\\)*"'<hr/></li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="expandListParameters"/>
            <h4><span class="label true">true</span><span class="label public">public</span>expandListParameters<span style="font-size:90%;">( <span class="param-type">string</span><strong> $query</strong>, <span class="param-type">array</span><strong> $params</strong>, <span class="param-type">array</span><strong> $types</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>For a positional query this method can rewrite the sql statement with regard to array parameters.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$query</code> - The SQL query to execute.</li>
                <li><code>$params</code> - The parameters to bind to the query.</li>
                <li><code>$types</code> - The types the previous parameters are in.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>SQLParserUtilsException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPlaceholderPositions"/>
            <h4><span class="label true">true</span><span class="label public">public</span>getPlaceholderPositions<span style="font-size:90%;">( <span class="param-type">string</span><strong> $statement</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $isPositional</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get an array of the placeholders in an sql statements as keys and their positions in the query string.<pre>Returns an integer =&gt; integer pair (indexed from zero) for a positional statement
and a string =&gt; int[] pair for a named statement.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$statement</code> - </li>
                <li><code>$isPositional</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="extractParam"/>
            <h4><span class="label true">true</span><span class="label private">private</span>extractParam<span style="font-size:90%;">( <span class="param-type">string</span><strong> $paramName</strong>, <span class="param-type">array</span><strong> $paramsOrTypes</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $isParam</strong>, <span class="param-type">mixed</span><strong> $defaultValue</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$paramName</code> - The name of the parameter (without a colon in front)</li>
                <li><code>$paramsOrTypes</code> - A hash of parameters or types</li>
                <li><code>$isParam</code> - </li>
                <li><code>$defaultValue</code> - An optional default value. If omitted, an exception is thrown</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>SQLParserUtilsException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUnquotedStatementFragments"/>
            <h4><span class="label true">true</span><span class="label private">private</span>getUnquotedStatementFragments<span style="font-size:90%;">( <span class="param-type">string</span><strong> $statement</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Slice the SQL statement around pairs of quotes and return string fragments of SQL outside of quoted literals.<pre>Each fragment is captured as a 2-element array:

0 =&gt; matched fragment string,
1 =&gt; offset of fragment in $statement</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$statement</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
