<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\ORM\Events - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#preRemove">preRemove</a>
          </li>
          <li>
            <a href="#postRemove">postRemove</a>
          </li>
          <li>
            <a href="#prePersist">prePersist</a>
          </li>
          <li>
            <a href="#postPersist">postPersist</a>
          </li>
          <li>
            <a href="#preUpdate">preUpdate</a>
          </li>
          <li>
            <a href="#postUpdate">postUpdate</a>
          </li>
          <li>
            <a href="#postLoad">postLoad</a>
          </li>
          <li>
            <a href="#loadClassMetadata">loadClassMetadata</a>
          </li>
          <li>
            <a href="#preFlush">preFlush</a>
          </li>
          <li>
            <a href="#onFlush">onFlush</a>
          </li>
          <li>
            <a href="#postFlush">postFlush</a>
          </li>
          <li>
            <a href="#onClear">onClear</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\ORM\</span>Events</h2>
        <div class="file-notice">
          <p>Container for all ORM events.</p>
          <p>
            <pre>This class cannot be instantiated.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Roman Borschel &lt;roman@code-factory.org&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="preRemove"/>preRemove = 'preRemove'<em> string</em><p><li>The preRemove event occurs for a given entity before the respective EntityManager remove operation for that entity is executed.<pre>This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="postRemove"/>postRemove = 'postRemove'<em> string</em><p><li>The postRemove event occurs for an entity after the entity has been deleted. It will be invoked after the database delete operations.<pre>This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="prePersist"/>prePersist = 'prePersist'<em> string</em><p><li>The prePersist event occurs for a given entity before the respective EntityManager persist operation for that entity is executed.<pre>This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="postPersist"/>postPersist = 'postPersist'<em> string</em><p><li>The postPersist event occurs for an entity after the entity has been made persistent. It will be invoked after the database insert operations.<pre>Generated primary key values are available in the postPersist event.

This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="preUpdate"/>preUpdate = 'preUpdate'<em> string</em><p><li>The preUpdate event occurs before the database update operations to entity data.<pre>This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="postUpdate"/>postUpdate = 'postUpdate'<em> string</em><p><li>The postUpdate event occurs after the database update operations to entity data.<pre>This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="postLoad"/>postLoad = 'postLoad'<em> string</em><p><li>The postLoad event occurs for an entity after the entity has been loaded into the current EntityManager from the database or after the refresh operation has been applied to it.<pre>Note that the postLoad event occurs for an entity before any associations have been
initialized. Therefore it is not safe to access associations in a postLoad callback
or event handler.

This is an entity lifecycle event.</pre></li></p><hr/></li>
          <li><a name="loadClassMetadata"/>loadClassMetadata = 'loadClassMetadata'<em> string</em><p><li>The loadClassMetadata event occurs after the mapping metadata for a class has been loaded from a mapping source (annotations/xml/yaml).</li></p><hr/></li>
          <li><a name="preFlush"/>preFlush = 'preFlush'<em> </em><p><li>The preFlush event occurs when the EntityManager#flush() operation is invoked, but before any changes to managed entites have been calculated. This event is always raised right after EntityManager#flush() call.</li></p><hr/></li>
          <li><a name="onFlush"/>onFlush = 'onFlush'<em> string</em><p><li>The onFlush event occurs when the EntityManager#flush() operation is invoked, after any changes to managed entities have been determined but before any actual database operations are executed. The event is only raised if there is actually something to do for the underlying UnitOfWork. If nothing needs to be done, the onFlush event is not raised.</li></p><hr/></li>
          <li><a name="postFlush"/>postFlush = 'postFlush'<em> string</em><p><li>The postFlush event occurs when the EntityManager#flush() operation is invoked and after all actual database operations are executed successfully. The event is only raised if there is actually something to do for the underlying UnitOfWork. If nothing needs to be done, the postFlush event is not raised. The event won't be raised if an error occurs during the flush operation.</li></p><hr/></li>
          <li><a name="onClear"/>onClear = 'onClear'<em> string</em><p><li>The onClear event occurs when the EntityManager#clear() operation is invoked, after all references to entities have been removed from the unit of work.</li></p><hr/></li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label private">private</span>__construct<span style="font-size:90%;">(  )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
