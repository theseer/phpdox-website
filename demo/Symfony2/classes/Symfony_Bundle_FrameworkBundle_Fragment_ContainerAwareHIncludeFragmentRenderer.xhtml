<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#container">$container</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#generateFragmentUri">generateFragmentUri</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#hasTemplating">hasTemplating</a>
          </li>
          <li>
            <a href="#render">render</a>
          </li>
          <li>
            <a href="#render">render</a>
          </li>
          <li>
            <a href="#setFragmentPath">setFragmentPath</a>
          </li>
          <li>
            <a href="#setTemplating">setTemplating</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Bundle\FrameworkBundle\Fragment\</span>ContainerAwareHIncludeFragmentRenderer</h2>
        <div class="file-notice">
          <p>Implements the Hinclude rendering strategy.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="container"/>
            <h4><span class="label private">private</span>
                $container</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_DependencyInjection_ContainerInterface.xhtml">Symfony\Component\DependencyInjection\ContainerInterface</a></span><strong> $container</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpKernel_UriSigner.xhtml">Symfony\Component\HttpKernel\UriSigner</a></span><strong> $signer</strong>, <span class="param-type"/><strong> $globalDefaultTemplate</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="hasTemplating"/>
            <h4><span class="label public">public</span>hasTemplating<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if a templating engine has been set.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the templating engine has been set, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="render"/>
            <h4><span class="label public">public</span>render<span style="font-size:90%;">( <span class="param-type"/><strong> $uri</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong>, <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="render"/>
            <h4><span class="label public">public</span>render<span style="font-size:90%;">( <span class="param-type"/><strong> $uri</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong>, <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}<pre>Additional available options:

 * default:    The default content (it can be a template name or the content)
 * id:         An optional hx:include tag id attribute
 * attributes: An optional array of hx:include tag attributes</pre></li>
            </p>
          </li>
          <li>
            <a name="setFragmentPath"/>
            <h4><span class="label public">public</span>setFragmentPath<span style="font-size:90%;">( <span class="param-type">string</span><strong> $path</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the fragment path that triggers the fragment listener.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$path</code> - The path</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTemplating"/>
            <h4><span class="label public">public</span>setTemplating<span style="font-size:90%;">( <span class="param-type"><span title="EngineInterface|\Twig_Environment|null">Twig_Environment|null</span></span><strong> $templating</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the templating engine to use to render the default content.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$templating</code> - An EngineInterface or a \Twig_Environment instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="generateFragmentUri"/>
            <h4><span class="label protected">protected</span>generateFragmentUri<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpKernel_Controller_ControllerReference.xhtml">Symfony\Component\HttpKernel\Controller\ControllerReference</a></span><strong> $reference</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Generates a fragment URI for a given controller.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$reference</code> - A ControllerReference instance</li>
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A fragment URI</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
