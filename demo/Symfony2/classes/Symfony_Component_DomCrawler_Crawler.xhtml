<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\DomCrawler\Crawler - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#uri">$uri</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#add">add</a>
          </li>
          <li>
            <a href="#addAll">addAll</a>
          </li>
          <li>
            <a href="#addContent">addContent</a>
          </li>
          <li>
            <a href="#addDocument">addDocument</a>
          </li>
          <li>
            <a href="#addHtmlContent">addHtmlContent</a>
          </li>
          <li>
            <a href="#addNode">addNode</a>
          </li>
          <li>
            <a href="#addNodeList">addNodeList</a>
          </li>
          <li>
            <a href="#addNodes">addNodes</a>
          </li>
          <li>
            <a href="#addXmlContent">addXmlContent</a>
          </li>
          <li>
            <a href="#attach">attach</a>
          </li>
          <li>
            <a href="#attr">attr</a>
          </li>
          <li>
            <a href="#children">children</a>
          </li>
          <li>
            <a href="#clear">clear</a>
          </li>
          <li>
            <a href="#contains">contains</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#current">current</a>
          </li>
          <li>
            <a href="#detach">detach</a>
          </li>
          <li>
            <a href="#each">each</a>
          </li>
          <li>
            <a href="#eq">eq</a>
          </li>
          <li>
            <a href="#extract">extract</a>
          </li>
          <li>
            <a href="#filter">filter</a>
          </li>
          <li>
            <a href="#filterXPath">filterXPath</a>
          </li>
          <li>
            <a href="#first">first</a>
          </li>
          <li>
            <a href="#form">form</a>
          </li>
          <li>
            <a href="#getHash">getHash</a>
          </li>
          <li>
            <a href="#getInfo">getInfo</a>
          </li>
          <li>
            <a href="#getNode">getNode</a>
          </li>
          <li>
            <a href="#html">html</a>
          </li>
          <li>
            <a href="#key">key</a>
          </li>
          <li>
            <a href="#last">last</a>
          </li>
          <li>
            <a href="#link">link</a>
          </li>
          <li>
            <a href="#links">links</a>
          </li>
          <li>
            <a href="#next">next</a>
          </li>
          <li>
            <a href="#nextAll">nextAll</a>
          </li>
          <li>
            <a href="#offsetExists">offsetExists</a>
          </li>
          <li>
            <a href="#offsetGet">offsetGet</a>
          </li>
          <li>
            <a href="#offsetSet">offsetSet</a>
          </li>
          <li>
            <a href="#offsetUnset">offsetUnset</a>
          </li>
          <li>
            <a href="#parents">parents</a>
          </li>
          <li>
            <a href="#previousAll">previousAll</a>
          </li>
          <li>
            <a href="#reduce">reduce</a>
          </li>
          <li>
            <a href="#removeAll">removeAll</a>
          </li>
          <li>
            <a href="#removeAllExcept">removeAllExcept</a>
          </li>
          <li>
            <a href="#rewind">rewind</a>
          </li>
          <li>
            <a href="#selectButton">selectButton</a>
          </li>
          <li>
            <a href="#selectLink">selectLink</a>
          </li>
          <li>
            <a href="#serialize">serialize</a>
          </li>
          <li>
            <a href="#setInfo">setInfo</a>
          </li>
          <li>
            <a href="#sibling">sibling</a>
          </li>
          <li>
            <a href="#siblings">siblings</a>
          </li>
          <li>
            <a href="#text">text</a>
          </li>
          <li>
            <a href="#unserialize">unserialize</a>
          </li>
          <li>
            <a href="#valid">valid</a>
          </li>
          <li>
            <a href="#xpathLiteral">xpathLiteral</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\DomCrawler\</span>Crawler</h2>
        <div class="file-notice">
          <p>Crawler eases navigation of a list of \DOMNode objects.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="uri"/>
            <h4><span class="label protected">protected</span>string 
                
                $uri</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $node</strong>, <span class="param-type">string</span><strong> $uri</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - A Node to use as the base for the crawling</li>
                <li><code>$uri</code> - The current URI or the base href value</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="add"/>
            <h4><span class="label public">public</span>add<span style="font-size:90%;">( <span class="param-type"><span title="\DOMNodeList|\DOMNode|array|string|null">DOMNode|array|string|null</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a node to the current list of nodes.<pre>This method uses the appropriate specialized add*() method based
on the type of the argument.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - A node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When node is not the expected type.</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addAll"/>
            <h4><span class="label public">public</span>addAll<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $storage</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds all objects from another storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addContent"/>
            <h4><span class="label public">public</span>addContent<span style="font-size:90%;">( <span class="param-type">string</span><strong> $content</strong>, <span class="param-type"><span title="null|string">null|string</span></span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds HTML/XML content.<pre>If the charset is not set via the content type, it is assumed
to be ISO-8859-1, which is the default charset defined by the
HTTP 1.1 specification.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$content</code> - A string to parse as HTML/XML</li>
                <li><code>$type</code> - The content type of the string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addDocument"/>
            <h4><span class="label public">public</span>addDocument<span style="font-size:90%;">( <span class="param-type"><span title="DOMDocument">DOMDocument</span></span><strong> $dom</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a \DOMDocument to the list of nodes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dom</code> - A \DOMDocument instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addHtmlContent"/>
            <h4><span class="label public">public</span>addHtmlContent<span style="font-size:90%;">( <span class="param-type">string</span><strong> $content</strong>, <span class="param-type">string</span><strong> $charset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an HTML content to the list of nodes.<pre>The libxml errors are disabled when the content is parsed.

If you want to get parsing errors, be sure to enable
internal errors via libxml_use_internal_errors(true)
and then, get the errors via libxml_get_errors(). Be
sure to clear errors with libxml_clear_errors() afterward.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$content</code> - The HTML content</li>
                <li><code>$charset</code> - The charset</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addNode"/>
            <h4><span class="label public">public</span>addNode<span style="font-size:90%;">( <span class="param-type"><span title="DOMNode">DOMNode</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a \DOMNode instance to the list of nodes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - A \DOMNode instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addNodeList"/>
            <h4><span class="label public">public</span>addNodeList<span style="font-size:90%;">( <span class="param-type"><span title="DOMNodeList">DOMNodeList</span></span><strong> $nodes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a \DOMNodeList to the list of nodes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$nodes</code> - A \DOMNodeList instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addNodes"/>
            <h4><span class="label public">public</span>addNodes<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $nodes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an array of \DOMNode instances to the list of nodes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$nodes</code> - An array of \DOMNode instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addXmlContent"/>
            <h4><span class="label public">public</span>addXmlContent<span style="font-size:90%;">( <span class="param-type">string</span><strong> $content</strong>, <span class="param-type">string</span><strong> $charset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an XML content to the list of nodes.<pre>The libxml errors are disabled when the content is parsed.

If you want to get parsing errors, be sure to enable
internal errors via libxml_use_internal_errors(true)
and then, get the errors via libxml_get_errors(). Be
sure to clear errors with libxml_clear_errors() afterward.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$content</code> - The XML content</li>
                <li><code>$charset</code> - The charset</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="attach"/>
            <h4><span class="label public">public</span>attach<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong>, [<span class="param-type">invalid method call</span><strong> $data</strong> ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an object in the storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="attr"/>
            <h4><span class="label public">public</span>attr<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attribute</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the attribute value of the first node of the list.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attribute</code> - The attribute name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The attribute value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="children"/>
            <h4><span class="label public">public</span>children<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the children nodes of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the children nodes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="clear"/>
            <h4><span class="label public">public</span>clear<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes all the nodes.</li>
            </p>
          </li>
          <li>
            <a name="contains"/>
            <h4><span class="label public">public</span>contains<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the storage contains a specific object</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the number of objects in the storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="current"/>
            <h4><span class="label public">public</span>current<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the current storage entry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="detach"/>
            <h4><span class="label public">public</span>detach<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes an object from the storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="each"/>
            <h4><span class="label public">public</span>each<span style="font-size:90%;">( <span class="param-type"><span title="Closure">Closure</span></span><strong> $closure</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Calls an anonymous function on each node of the list.<pre>The anonymous function receives the position and the node wrapped
in a Crawler instance as arguments.

Example:

    $crawler-&gt;filter('h1')-&gt;each(function ($node, $i) {
        return $node-&gt;text();
    });</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$closure</code> - An anonymous function</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of values returned by the anonymous function</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="eq"/>
            <h4><span class="label public">public</span>eq<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $position</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a node given its position in the node list.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$position</code> - The position</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A new instance of the Crawler with the selected node, or an empty Crawler if it does not exist.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="extract"/>
            <h4><span class="label public">public</span>extract<span style="font-size:90%;">( <span class="param-type">array</span><strong> $attributes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Extracts information from the list of nodes.<pre>You can extract attributes or/and the node value (_text).

Example:

$crawler-&gt;filter('h1 a')-&gt;extract(array('_text', 'href'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributes</code> - An array of attributes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of extracted values</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="filter"/>
            <h4><span class="label public">public</span>filter<span style="font-size:90%;">( <span class="param-type">string</span><strong> $selector</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Filters the list of nodes with a CSS selector.<pre>This method only works if you have installed the CssSelector Symfony Component.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$selector</code> - A CSS selector</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A new instance of Crawler with the filtered list of nodes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException if the CssSelector Component is not available</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="filterXPath"/>
            <h4><span class="label public">public</span>filterXPath<span style="font-size:90%;">( <span class="param-type">string</span><strong> $xpath</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Filters the list of nodes with an XPath expression.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$xpath</code> - An XPath expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A new instance of Crawler with the filtered list of nodes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="first"/>
            <h4><span class="label public">public</span>first<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the first node of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the first selected node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="form"/>
            <h4><span class="label public">public</span>form<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $values</strong>, <span class="param-type">string</span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a Form object for the first node in the list.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$values</code> - An array of values for the form fields</li>
                <li><code>$method</code> - The method for the form</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Form instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException If the current node list is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHash"/>
            <h4><span class="label public">public</span>getHash<span style="font-size:90%;">( <span class="param-type">string</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>
   Calculate a unique identifier for the contained objects
  <pre>The function calculates an identifier for the objects added to this SplObjectStorage object.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInfo"/>
            <h4><span class="label public">public</span>getInfo<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the data associated with the current iterator entry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="html"/>
            <h4><span class="label public">public</span>html<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the first node of the list as HTML.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node html</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="key"/>
            <h4><span class="label public">public</span>key<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the index at which the iterator currently is</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="last"/>
            <h4><span class="label public">public</span>last<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the last node of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the last selected node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="link"/>
            <h4><span class="label public">public</span>link<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a Link object for the first node in the list.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - The method for the link (get by default)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Link instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException If the current node list is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="links"/>
            <h4><span class="label public">public</span>links<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array of Link objects for the nodes in the list.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Link instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="next"/>
            <h4><span class="label public">public</span>next<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Move to the next entry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="nextAll"/>
            <h4><span class="label public">public</span>nextAll<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the next siblings nodes of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the next sibling nodes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetExists"/>
            <h4><span class="label public">public</span>offsetExists<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks whether an object exists in the storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetGet"/>
            <h4><span class="label public">public</span>offsetGet<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the data associated with an object</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetSet"/>
            <h4><span class="label public">public</span>offsetSet<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong>, [<span class="param-type">invalid method call</span><strong> $data</strong> ] )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Associates data to an object in the storage<pre>Associate data to an object in the storage.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="offsetUnset"/>
            <h4><span class="label public">public</span>offsetUnset<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes an object from the storage<pre>Removes an object from the storage.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parents"/>
            <h4><span class="label public">public</span>parents<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the parents nodes of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the parents nodes of the current selection</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="previousAll"/>
            <h4><span class="label public">public</span>previousAll<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the previous sibling nodes of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the previous sibling nodes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="reduce"/>
            <h4><span class="label public">public</span>reduce<span style="font-size:90%;">( <span class="param-type"><span title="Closure">Closure</span></span><strong> $closure</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Reduces the list of nodes by calling an anonymous function.<pre>To remove a node from the list, the anonymous function must return false.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$closure</code> - An anonymous function</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the selected nodes.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeAll"/>
            <h4><span class="label public">public</span>removeAll<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $storage</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes objects contained in another storage from the current storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeAllExcept"/>
            <h4><span class="label public">public</span>removeAllExcept<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $storage</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes all objects except for those contained in another storage from the current storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="rewind"/>
            <h4><span class="label public">public</span>rewind<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Rewind the iterator to the first storage element</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="selectButton"/>
            <h4><span class="label public">public</span>selectButton<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Selects a button by name or alt value for images.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The button text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A new instance of Crawler with the filtered list of nodes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="selectLink"/>
            <h4><span class="label public">public</span>selectLink<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Selects links by name or alt value for clickable images.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The link text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A new instance of Crawler with the filtered list of nodes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="serialize"/>
            <h4><span class="label public">public</span>serialize<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Serializes the storage</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setInfo"/>
            <h4><span class="label public">public</span>setInfo<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $data</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the data associated with the current iterator entry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="siblings"/>
            <h4><span class="label public">public</span>siblings<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the siblings nodes of the current selection</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Crawler instance with the sibling nodes</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="text"/>
            <h4><span class="label public">public</span>text<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the node value of the first node of the list.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When current node is empty</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unserialize"/>
            <h4><span class="label public">public</span>unserialize<span style="font-size:90%;">( <span class="param-type">string</span><strong> $serialized</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unserializes a storage from its string representation</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="valid"/>
            <h4><span class="label public">public</span>valid<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns if the current iterator entry is valid</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="xpathLiteral"/>
            <h4><span class="label true">true</span><span class="label public">public</span>xpathLiteral<span style="font-size:90%;">( <span class="param-type">string</span><strong> $s</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts string for XPath expressions.<pre>Escaped characters are: quotes (") and apostrophe (').

 Examples:
 &lt;code&gt;
    echo Crawler::xpathLiteral('foo " bar');
    //prints 'foo " bar'

    echo Crawler::xpathLiteral("foo ' bar");
    //prints "foo ' bar"

    echo Crawler::xpathLiteral('a\'b"c');
    //prints concat('a', "'", 'b"c')
 &lt;/code&gt;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$s</code> - String to be escaped</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Converted string</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNode"/>
            <h4><span class="label protected">protected</span>getNode<span style="font-size:90%;">( <span class="param-type"/><strong> $position</strong> )</span></h4>
          </li>
          <li>
            <a name="sibling"/>
            <h4><span class="label protected">protected</span>sibling<span style="font-size:90%;">( <span class="param-type"/><strong> $node</strong>, <span class="param-type">string</span><strong> $siblingDir</strong> )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
