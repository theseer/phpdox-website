<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\ClassLoader\ApcUniversalClassLoader - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#prefix">$prefix</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#findFile">findFile</a>
          </li>
          <li>
            <a href="#findFile">findFile</a>
          </li>
          <li>
            <a href="#getNamespaceFallbacks">getNamespaceFallbacks</a>
          </li>
          <li>
            <a href="#getNamespaces">getNamespaces</a>
          </li>
          <li>
            <a href="#getPrefixFallbacks">getPrefixFallbacks</a>
          </li>
          <li>
            <a href="#getPrefixes">getPrefixes</a>
          </li>
          <li>
            <a href="#getUseIncludePath">getUseIncludePath</a>
          </li>
          <li>
            <a href="#loadClass">loadClass</a>
          </li>
          <li>
            <a href="#register">register</a>
          </li>
          <li>
            <a href="#registerNamespace">registerNamespace</a>
          </li>
          <li>
            <a href="#registerNamespaceFallback">registerNamespaceFallback</a>
          </li>
          <li>
            <a href="#registerNamespaceFallbacks">registerNamespaceFallbacks</a>
          </li>
          <li>
            <a href="#registerNamespaces">registerNamespaces</a>
          </li>
          <li>
            <a href="#registerPrefix">registerPrefix</a>
          </li>
          <li>
            <a href="#registerPrefixFallback">registerPrefixFallback</a>
          </li>
          <li>
            <a href="#registerPrefixFallbacks">registerPrefixFallbacks</a>
          </li>
          <li>
            <a href="#registerPrefixes">registerPrefixes</a>
          </li>
          <li>
            <a href="#useIncludePath">useIncludePath</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\ClassLoader\</span>ApcUniversalClassLoader</h2>
        <div class="file-notice">
          <p>ApcUniversalClassLoader implements a "universal" autoloader cached in APC for PHP 5.3.</p>
          <p>
            <pre>It is able to load classes that use either:

 * The technical interoperability standards for PHP 5.3 namespaces and
   class names (https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md);

 * The PEAR naming convention for classes (http://pear.php.net/).

Classes from a sub-namespace or a sub-hierarchy of PEAR classes can be
looked for in a list of locations to ease the vendoring of a sub-set of
classes for large projects.

Example usage:

    require 'vendor/symfony/src/Symfony/Component/ClassLoader/UniversalClassLoader.php';
    require 'vendor/symfony/src/Symfony/Component/ClassLoader/ApcUniversalClassLoader.php';

    use Symfony\Component\ClassLoader\ApcUniversalClassLoader;

    $loader = new ApcUniversalClassLoader('apc.prefix.');

    // register classes with namespaces
    $loader-&gt;registerNamespaces(array(
        'Symfony\Component' =&gt; __DIR__.'/component',
        'Symfony'           =&gt; __DIR__.'/framework',
        'Sensio'            =&gt; array(__DIR__.'/src', __DIR__.'/vendor'),
    ));

    // register a library using the PEAR naming convention
    $loader-&gt;registerPrefixes(array(
        'Swift_' =&gt; __DIR__.'/Swift',
    ));

    // activate the autoloader
    $loader-&gt;register();

In this example, if you try to use a class in the Symfony\Component
namespace or one of its children (Symfony\Component\Console for instance),
the autoloader will first look for the class under the component/
directory, and it will then fallback to the framework/ directory if not
found before giving up.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Kris Wallsmith &lt;kris@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="prefix"/>
            <h4><span class="label private">private</span>
                $prefix</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - A prefix to create a namespace in APC</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="findFile"/>
            <h4><span class="label public">public</span>findFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds a file by class name while caching lookups to APC.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - A class name to resolve to file</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The path, if found</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findFile"/>
            <h4><span class="label public">public</span>findFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds the path to the file where the class is defined.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The name of the class</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The path, if found</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNamespaceFallbacks"/>
            <h4><span class="label public">public</span>getNamespaceFallbacks<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the directory(ies) to use as a fallback for namespaces.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of directories</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNamespaces"/>
            <h4><span class="label public">public</span>getNamespaces<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the configured namespaces.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A hash with namespaces as keys and directories as values</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPrefixFallbacks"/>
            <h4><span class="label public">public</span>getPrefixFallbacks<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the directory(ies) to use as a fallback for class prefixes.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of directories</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPrefixes"/>
            <h4><span class="label public">public</span>getPrefixes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the configured class prefixes.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A hash with class prefixes as keys and directories as values</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUseIncludePath"/>
            <h4><span class="label public">public</span>getUseIncludePath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Can be used to check if the autoloader uses the include path to check for classes.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadClass"/>
            <h4><span class="label public">public</span>loadClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads the given class or interface.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The name of the class</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>True, if loaded</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="register"/>
            <h4><span class="label public">public</span>register<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $prepend</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers this instance as an autoloader.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prepend</code> - Whether to prepend the autoloader or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerNamespace"/>
            <h4><span class="label public">public</span>registerNamespace<span style="font-size:90%;">( <span class="param-type">string</span><strong> $namespace</strong>, <span class="param-type"><span title="array|string">array|string</span></span><strong> $paths</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a namespace.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$namespace</code> - The namespace</li>
                <li><code>$paths</code> - The location(s) of the namespace</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerNamespaceFallback"/>
            <h4><span class="label public">public</span>registerNamespaceFallback<span style="font-size:90%;">( <span class="param-type">string</span><strong> $dir</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a directory to use as a fallback for namespaces.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dir</code> - A directory</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerNamespaceFallbacks"/>
            <h4><span class="label public">public</span>registerNamespaceFallbacks<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $dirs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers the directory to use as a fallback for namespaces.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dirs</code> - An array of directories</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerNamespaces"/>
            <h4><span class="label public">public</span>registerNamespaces<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $namespaces</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers an array of namespaces</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$namespaces</code> - An array of namespaces (namespaces as keys and locations as values)</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerPrefix"/>
            <h4><span class="label public">public</span>registerPrefix<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong>, <span class="param-type"><span title="array|string">array|string</span></span><strong> $paths</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a set of classes using the PEAR naming convention.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - The classes prefix</li>
                <li><code>$paths</code> - The location(s) of the classes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerPrefixFallback"/>
            <h4><span class="label public">public</span>registerPrefixFallback<span style="font-size:90%;">( <span class="param-type">string</span><strong> $dir</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a directory to use as a fallback for class prefixes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dir</code> - A directory</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerPrefixFallbacks"/>
            <h4><span class="label public">public</span>registerPrefixFallbacks<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $dirs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers directories to use as a fallback for class prefixes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dirs</code> - An array of directories</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerPrefixes"/>
            <h4><span class="label public">public</span>registerPrefixes<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers an array of classes using the PEAR naming convention.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - An array of classes (prefixes as keys and locations as values)</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="useIncludePath"/>
            <h4><span class="label public">public</span>useIncludePath<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $useIncludePath</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Turns on searching the include for class files. Allows easy loading of installed PEAR packages</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$useIncludePath</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
