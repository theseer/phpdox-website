<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpKernel\HttpCache\Store - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#root">$root</a>
          </li>
          <li>
            <a href="#keyCache">$keyCache</a>
          </li>
          <li>
            <a href="#locks">$locks</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#cleanup">cleanup</a>
          </li>
          <li>
            <a href="#generateContentDigest">generateContentDigest</a>
          </li>
          <li>
            <a href="#getCacheKey">getCacheKey</a>
          </li>
          <li>
            <a href="#getMetadata">getMetadata</a>
          </li>
          <li>
            <a href="#getPath">getPath</a>
          </li>
          <li>
            <a href="#invalidate">invalidate</a>
          </li>
          <li>
            <a href="#isLocked">isLocked</a>
          </li>
          <li>
            <a href="#load">load</a>
          </li>
          <li>
            <a href="#lock">lock</a>
          </li>
          <li>
            <a href="#lookup">lookup</a>
          </li>
          <li>
            <a href="#persistRequest">persistRequest</a>
          </li>
          <li>
            <a href="#persistResponse">persistResponse</a>
          </li>
          <li>
            <a href="#purge">purge</a>
          </li>
          <li>
            <a href="#requestsMatch">requestsMatch</a>
          </li>
          <li>
            <a href="#restoreResponse">restoreResponse</a>
          </li>
          <li>
            <a href="#save">save</a>
          </li>
          <li>
            <a href="#unlock">unlock</a>
          </li>
          <li>
            <a href="#write">write</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpKernel\HttpCache\</span>Store</h2>
        <div class="file-notice">
          <p>Store implements all the logic for storing cache metadata (Request and Response headers).</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_HttpKernel_HttpCache_StoreInterface.xhtml">Symfony\Component\HttpKernel\HttpCache\StoreInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="root"/>
            <h4><span class="label protected">protected</span>
                $root</h4>
          </li>
          <li>
            <a name="keyCache"/>
            <h4><span class="label private">private</span>
                $keyCache</h4>
          </li>
          <li>
            <a name="locks"/>
            <h4><span class="label private">private</span>
                $locks</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $root</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$root</code> - The path to the cache directory</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="cleanup"/>
            <h4><span class="label public">public</span>cleanup<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Cleanups storage.</li>
            </p>
          </li>
          <li>
            <a name="getPath"/>
            <h4><span class="label public">public</span>getPath<span style="font-size:90%;">( <span class="param-type"/><strong> $key</strong> )</span></h4>
          </li>
          <li>
            <a name="invalidate"/>
            <h4><span class="label public">public</span>invalidate<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Invalidates all cache entries that match the request.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isLocked"/>
            <h4><span class="label public">public</span>isLocked<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
          </li>
          <li>
            <a name="lock"/>
            <h4><span class="label public">public</span>lock<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Locks the cache for a given Request.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the lock is acquired, the path to the current lock otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lookup"/>
            <h4><span class="label public">public</span>lookup<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Locates a cached Response for the Request provided.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Response instance, or null if no cache entry was found</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="purge"/>
            <h4><span class="label public">public</span>purge<span style="font-size:90%;">( <span class="param-type">string</span><strong> $url</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Purges data for the given URL.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$url</code> - A URL</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the URL exists and has been purged, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unlock"/>
            <h4><span class="label public">public</span>unlock<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Releases the lock for the given Request.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>False if the lock file does not exist or cannot be unlocked, true otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="write"/>
            <h4><span class="label public">public</span>write<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong>, <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Response.xhtml">Symfony\Component\HttpFoundation\Response</a></span><strong> $response</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Writes a cache entry to the store for the given Request and Response.<pre>Existing entries are read and any that match the response are removed. This
method calls write with the new list of cache entries.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
                <li><code>$response</code> - A Response instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The key under which the response is stored</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="generateContentDigest"/>
            <h4><span class="label protected">protected</span>generateContentDigest<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Response.xhtml">Symfony\Component\HttpFoundation\Response</a></span><strong> $response</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns content digest for $response.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$response</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCacheKey"/>
            <h4><span class="label private">private</span>getCacheKey<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a cache key for the given Request.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A key for the given Request</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMetadata"/>
            <h4><span class="label private">private</span>getMetadata<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets all data associated with the given key.<pre>Use this method only if you know what you are doing.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - The store key</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of data associated with the key</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="load"/>
            <h4><span class="label private">private</span>load<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads data for the given key.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - The store key</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The data associated with the key</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="persistRequest"/>
            <h4><span class="label private">private</span>persistRequest<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Request.xhtml">Symfony\Component\HttpFoundation\Request</a></span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Persists the Request HTTP headers.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - A Request instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of HTTP headers</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="persistResponse"/>
            <h4><span class="label private">private</span>persistResponse<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_HttpFoundation_Response.xhtml">Symfony\Component\HttpFoundation\Response</a></span><strong> $response</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Persists the Response HTTP headers.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$response</code> - A Response instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of HTTP headers</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="requestsMatch"/>
            <h4><span class="label private">private</span>requestsMatch<span style="font-size:90%;">( <span class="param-type">string</span><strong> $vary</strong>, <span class="param-type">array</span><strong> $env1</strong>, <span class="param-type">array</span><strong> $env2</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines whether two Request HTTP header sets are non-varying based on the vary response header value provided.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$vary</code> - A Response vary header</li>
                <li><code>$env1</code> - A Request HTTP header array</li>
                <li><code>$env2</code> - A Request HTTP header array</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the two environments match, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="restoreResponse"/>
            <h4><span class="label private">private</span>restoreResponse<span style="font-size:90%;">( <span class="param-type">array</span><strong> $headers</strong>, <span class="param-type">string</span><strong> $body</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Restores a Response from the HTTP headers and body.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$headers</code> - An array of HTTP headers for the Response</li>
                <li><code>$body</code> - The Response body</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="save"/>
            <h4><span class="label private">private</span>save<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">string</span><strong> $data</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Save data for the given key.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - The store key</li>
                <li><code>$data</code> - The data to store</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
