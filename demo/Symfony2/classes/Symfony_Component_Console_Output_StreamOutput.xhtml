<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Console\Output\StreamOutput - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#stream">$stream</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#doWrite">doWrite</a>
          </li>
          <li>
            <a href="#doWrite">doWrite</a>
          </li>
          <li>
            <a href="#getFormatter">getFormatter</a>
          </li>
          <li>
            <a href="#getStream">getStream</a>
          </li>
          <li>
            <a href="#getVerbosity">getVerbosity</a>
          </li>
          <li>
            <a href="#hasColorSupport">hasColorSupport</a>
          </li>
          <li>
            <a href="#isDecorated">isDecorated</a>
          </li>
          <li>
            <a href="#setDecorated">setDecorated</a>
          </li>
          <li>
            <a href="#setFormatter">setFormatter</a>
          </li>
          <li>
            <a href="#setVerbosity">setVerbosity</a>
          </li>
          <li>
            <a href="#write">write</a>
          </li>
          <li>
            <a href="#writeln">writeln</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Console\Output\</span>StreamOutput</h2>
        <div class="file-notice">
          <p>StreamOutput writes the output to a given stream.</p>
          <p>
            <pre>Usage:

$output = new StreamOutput(fopen('php://stdout', 'w'));

As `StreamOutput` can use any stream, you can also use a file:

$output = new StreamOutput(fopen('/path/to/output.log', 'a', false));</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="stream"/>
            <h4><span class="label private">private</span>
                $stream</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $stream</strong>, <span class="param-type">integer</span><strong> $verbosity</strong>, <span class="param-type"><span title="Boolean|null">Boolean|null</span></span><strong> $decorated</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Console_Formatter_OutputFormatterInterface.xhtml">Symfony\Component\Console\Formatter\OutputFormatterInterface</a></span><strong> $formatter</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$stream</code> - A stream resource</li>
                <li><code>$verbosity</code> - The verbosity level (one of the VERBOSITY constants in OutputInterface)</li>
                <li><code>$decorated</code> - Whether to decorate messages (null for auto-guessing)</li>
                <li><code>$formatter</code> - Output formatter instance (null to use default OutputFormatter)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When first argument is not a real stream</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getFormatter"/>
            <h4><span class="label public">public</span>getFormatter<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="getStream"/>
            <h4><span class="label public">public</span>getStream<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the stream attached to this StreamOutput instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A stream resource</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getVerbosity"/>
            <h4><span class="label public">public</span>getVerbosity<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="isDecorated"/>
            <h4><span class="label public">public</span>isDecorated<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="setDecorated"/>
            <h4><span class="label public">public</span>setDecorated<span style="font-size:90%;">( <span class="param-type"/><strong> $decorated</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="setFormatter"/>
            <h4><span class="label public">public</span>setFormatter<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Console_Formatter_OutputFormatterInterface.xhtml">Symfony\Component\Console\Formatter\OutputFormatterInterface</a></span><strong> $formatter</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="setVerbosity"/>
            <h4><span class="label public">public</span>setVerbosity<span style="font-size:90%;">( <span class="param-type"/><strong> $level</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="write"/>
            <h4><span class="label public">public</span>write<span style="font-size:90%;">( <span class="param-type"/><strong> $messages</strong>, <span class="param-type"/><strong> $newline</strong>, <span class="param-type"/><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="writeln"/>
            <h4><span class="label public">public</span>writeln<span style="font-size:90%;">( <span class="param-type"/><strong> $messages</strong>, <span class="param-type"/><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="doWrite"/>
            <h4><span class="label protected">protected</span>doWrite<span style="font-size:90%;">( <span class="param-type"/><strong> $message</strong>, <span class="param-type"/><strong> $newline</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="doWrite"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>doWrite<span style="font-size:90%;">( <span class="param-type">string</span><strong> $message</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $newline</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Writes a message to the output.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$message</code> - A message to write to the output</li>
                <li><code>$newline</code> - Whether to add a newline or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasColorSupport"/>
            <h4><span class="label protected">protected</span>hasColorSupport<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the stream supports colorization.<pre>Colorization is disabled if not supported by the stream:

 -  windows without ansicon and ConEmu
 -  non tty consoles</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the stream supports colorization, false otherwise</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
