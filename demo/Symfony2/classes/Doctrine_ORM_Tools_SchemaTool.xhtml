<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\ORM\Tools\SchemaTool - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#em">$em</a>
          </li>
          <li>
            <a href="#platform">$platform</a>
          </li>
          <li>
            <a href="#quoteStrategy">$quoteStrategy</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#_gatherColumn">_gatherColumn</a>
          </li>
          <li>
            <a href="#_gatherColumns">_gatherColumns</a>
          </li>
          <li>
            <a href="#_gatherRelationJoinColumns">_gatherRelationJoinColumns</a>
          </li>
          <li>
            <a href="#_gatherRelationsSql">_gatherRelationsSql</a>
          </li>
          <li>
            <a href="#addDiscriminatorColumnDefinition">addDiscriminatorColumnDefinition</a>
          </li>
          <li>
            <a href="#createSchema">createSchema</a>
          </li>
          <li>
            <a href="#dropDatabase">dropDatabase</a>
          </li>
          <li>
            <a href="#dropSchema">dropSchema</a>
          </li>
          <li>
            <a href="#getCreateSchemaSql">getCreateSchemaSql</a>
          </li>
          <li>
            <a href="#getDefiningClass">getDefiningClass</a>
          </li>
          <li>
            <a href="#getDropDatabaseSQL">getDropDatabaseSQL</a>
          </li>
          <li>
            <a href="#getDropSchemaSQL">getDropSchemaSQL</a>
          </li>
          <li>
            <a href="#getSchemaFromMetadata">getSchemaFromMetadata</a>
          </li>
          <li>
            <a href="#getUpdateSchemaSql">getUpdateSchemaSql</a>
          </li>
          <li>
            <a href="#processingNotRequired">processingNotRequired</a>
          </li>
          <li>
            <a href="#updateSchema">updateSchema</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\ORM\Tools\</span>SchemaTool</h2>
        <div class="file-notice">
          <p>The SchemaTool is a tool to create/drop/update database schemas based on &lt;tt&gt;ClassMetadata&lt;/tt&gt; class descriptors.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;</li>
          <li><b>Author: </b>Jonathan Wage &lt;jonwage@gmail.com&gt;</li>
          <li><b>Author: </b>Roman Borschel &lt;roman@code-factory.org&gt;</li>
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="em"/>
            <h4><span class="label private">private</span>object 
                
                $em</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="platform"/>
            <h4><span class="label private">private</span>object 
                
                $platform</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="quoteStrategy"/>
            <h4><span class="label private">private</span>object 
                
                $quoteStrategy</h4>
            <ul class="varlist">
              <li>The quote strategy.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_EntityManager.xhtml">Doctrine\ORM\EntityManager</a></span><strong> $em</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes a new SchemaTool instance that uses the connection of the provided EntityManager.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$em</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="createSchema"/>
            <h4><span class="label public">public</span>createSchema<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates the database schema for the given array of ClassMetadata instances.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ToolsException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="dropDatabase"/>
            <h4><span class="label public">public</span>dropDatabase<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Drops all elements in the database of the current connection.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="dropSchema"/>
            <h4><span class="label public">public</span>dropSchema<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Drops the database schema for the given classes.<pre>In any way when an exception is thrown it is supressed since drop was
issued for all classes of the schema and some probably just don't exist.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCreateSchemaSql"/>
            <h4><span class="label public">public</span>getCreateSchemaSql<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the list of DDL statements that are required to create the database schema for the given list of ClassMetadata instances.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>$sql The SQL statements needed to create the schema for the classes.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDropDatabaseSQL"/>
            <h4><span class="label public">public</span>getDropDatabaseSQL<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the SQL needed to drop the database schema for the connections database.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDropSchemaSQL"/>
            <h4><span class="label public">public</span>getDropSchemaSQL<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get SQL to drop the tables defined by the passed classes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSchemaFromMetadata"/>
            <h4><span class="label public">public</span>getSchemaFromMetadata<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>From a given set of metadata classes this method creates a Schema instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUpdateSchemaSql"/>
            <h4><span class="label public">public</span>getUpdateSchemaSql<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong>, <span class="param-type">boolean</span><strong> $saveMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the sequence of SQL statements that need to be performed in order to bring the given class mappings in-synch with the relational schema.<pre>If $saveMode is set to true the command is executed in the Database,
else SQL is returned.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - The classes to consider.</li>
                <li><code>$saveMode</code> - True for writing to DB, false for SQL string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The sequence of SQL statements.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="updateSchema"/>
            <h4><span class="label public">public</span>updateSchema<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $classes</strong>, <span class="param-type">boolean</span><strong> $saveMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Updates the database schema of the given classes by comparing the ClassMetadata instances to the current database schema that is inspected. If $saveMode is set to true the command is executed in the Database, else SQL is returned.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classes</code> - </li>
                <li><code>$saveMode</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_gatherColumn"/>
            <h4><span class="label private">private</span>_gatherColumn<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">Array</span><strong> $mapping</strong>, <span class="param-type"><span title="Table">Table</span></span><strong> $table</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a column definition as required by the DBAL from an ORM field mapping definition.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The class that owns the field mapping.</li>
                <li><code>$mapping</code> - The field mapping.</li>
                <li><code>$table</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The portable column definition as required by the DBAL.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_gatherColumns"/>
            <h4><span class="label private">private</span>_gatherColumns<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type"><span title="Table">Table</span></span><strong> $table</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gathers the column definitions as required by the DBAL of all field mappings found in the given class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$table</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The list of portable column definitions as required by the DBAL.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_gatherRelationJoinColumns"/>
            <h4><span class="label private">private</span>_gatherRelationJoinColumns<span style="font-size:90%;">( <span class="param-type">array</span><strong> $joinColumns</strong>, <span class="param-type"><span title="\Doctrine\DBAL\Schema\Table">Table</span></span><strong> $theJoinTable</strong>, <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">array</span><strong> $mapping</strong>, <span class="param-type">array</span><strong> &amp;$primaryKeyColumns</strong>, <span class="param-type">array</span><strong> &amp;$uniqueConstraints</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gather columns and fk constraints that are required for one part of relationship.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$joinColumns</code> - </li>
                <li><code>$theJoinTable</code> - </li>
                <li><code>$class</code> - </li>
                <li><code>$mapping</code> - </li>
                <li><code>$primaryKeyColumns</code> - </li>
                <li><code>$uniqueConstraints</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_gatherRelationsSql"/>
            <h4><span class="label private">private</span>_gatherRelationsSql<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type"><span title="\Doctrine\DBAL\Schema\Table">Table</span></span><strong> $table</strong>, <span class="param-type"><span title="\Doctrine\DBAL\Schema\Schema">Schema</span></span><strong> $schema</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gathers the SQL for properly setting up the relations of the given class.<pre>This includes the SQL for foreign key constraints and join tables.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$table</code> - </li>
                <li><code>$schema</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addDiscriminatorColumnDefinition"/>
            <h4><span class="label private">private</span>addDiscriminatorColumnDefinition<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type"/><strong> $table</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a portable column definition as required by the DBAL for the discriminator column of a class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The portable column definition of the discriminator column as required by</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDefiningClass"/>
            <h4><span class="label private">private</span>getDefiningClass<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">string</span><strong> $referencedColumnName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the class metadata that is responsible for the definition of the referenced column name.<pre>Previously this was a simple task, but with DDC-117 this problem is actually recursive. If its
not a simple field, go through all identifier field names that are associations recursivly and
find that referenced column name.

TODO: Is there any way to make this code more pleasing?</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$referencedColumnName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>referencedFieldName)</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="processingNotRequired"/>
            <h4><span class="label private">private</span>processingNotRequired<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_ORM_Mapping_ClassMetadata.xhtml">Doctrine\ORM\Mapping\ClassMetadata</a></span><strong> $class</strong>, <span class="param-type">Array</span><strong> $processedClasses</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Some instances of ClassMetadata don't need to be processed in the SchemaTool context. This method detects them.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$processedClasses</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
