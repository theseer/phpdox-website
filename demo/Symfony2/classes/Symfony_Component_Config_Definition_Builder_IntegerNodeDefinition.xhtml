<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Config\Definition\Builder\IntegerNodeDefinition - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#attribute">attribute</a>
          </li>
          <li>
            <a href="#beforeNormalization">beforeNormalization</a>
          </li>
          <li>
            <a href="#cannotBeEmpty">cannotBeEmpty</a>
          </li>
          <li>
            <a href="#cannotBeOverwritten">cannotBeOverwritten</a>
          </li>
          <li>
            <a href="#createNode">createNode</a>
          </li>
          <li>
            <a href="#createNode">createNode</a>
          </li>
          <li>
            <a href="#defaultFalse">defaultFalse</a>
          </li>
          <li>
            <a href="#defaultNull">defaultNull</a>
          </li>
          <li>
            <a href="#defaultTrue">defaultTrue</a>
          </li>
          <li>
            <a href="#defaultValue">defaultValue</a>
          </li>
          <li>
            <a href="#end">end</a>
          </li>
          <li>
            <a href="#example">example</a>
          </li>
          <li>
            <a href="#getNode">getNode</a>
          </li>
          <li>
            <a href="#info">info</a>
          </li>
          <li>
            <a href="#instantiateNode">instantiateNode</a>
          </li>
          <li>
            <a href="#instantiateNode">instantiateNode</a>
          </li>
          <li>
            <a href="#instantiateNode">instantiateNode</a>
          </li>
          <li>
            <a href="#isRequired">isRequired</a>
          </li>
          <li>
            <a href="#max">max</a>
          </li>
          <li>
            <a href="#merge">merge</a>
          </li>
          <li>
            <a href="#min">min</a>
          </li>
          <li>
            <a href="#normalization">normalization</a>
          </li>
          <li>
            <a href="#setParent">setParent</a>
          </li>
          <li>
            <a href="#treatFalseLike">treatFalseLike</a>
          </li>
          <li>
            <a href="#treatNullLike">treatNullLike</a>
          </li>
          <li>
            <a href="#treatTrueLike">treatTrueLike</a>
          </li>
          <li>
            <a href="#validate">validate</a>
          </li>
          <li>
            <a href="#validation">validation</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Config\Definition\Builder\</span>IntegerNodeDefinition</h2>
        <div class="file-notice">
          <p>This class provides a fluent interface for defining an integer node.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Jeanmonod David &lt;david.jeanmonod@gmail.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_Builder_NodeParentInterface.xhtml">Symfony\Component\Config\Definition\Builder\NodeParentInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the node</li>
                <li><code>$parent</code> - The parent</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="attribute"/>
            <h4><span class="label public">public</span>attribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an attribute on the node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="beforeNormalization"/>
            <h4><span class="label public">public</span>beforeNormalization<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an expression to run before the normalization.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="cannotBeEmpty"/>
            <h4><span class="label public">public</span>cannotBeEmpty<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Denies the node value being empty.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="cannotBeOverwritten"/>
            <h4><span class="label public">public</span>cannotBeOverwritten<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $deny</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the node can be overwritten.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$deny</code> - Whether the overwriting is forbidden or not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultFalse"/>
            <h4><span class="label public">public</span>defaultFalse<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets false as the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultNull"/>
            <h4><span class="label public">public</span>defaultNull<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets null as the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultTrue"/>
            <h4><span class="label public">public</span>defaultTrue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets true as the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultValue"/>
            <h4><span class="label public">public</span>defaultValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the default value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The default value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="end"/>
            <h4><span class="label public">public</span>end<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the parent node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The builder of the parent node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="example"/>
            <h4><span class="label public">public</span>example<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $example</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets example configuration.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$example</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNode"/>
            <h4><span class="label public">public</span>getNode<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $forceRootNode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates the node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$forceRootNode</code> - Whether to force this node as the root node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="info"/>
            <h4><span class="label public">public</span>info<span style="font-size:90%;">( <span class="param-type">string</span><strong> $info</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets info message.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$info</code> - The info text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRequired"/>
            <h4><span class="label public">public</span>isRequired<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the node as required.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="max"/>
            <h4><span class="label public">public</span>max<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $max</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Ensures that the value is smaller than the given reference.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$max</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException when the constraint is inconsistent</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="min"/>
            <h4><span class="label public">public</span>min<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $min</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Ensures that the value is bigger than the given reference.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$min</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException when the constraint is inconsistent</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParent"/>
            <h4><span class="label public">public</span>setParent<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_Builder_NodeParentInterface.xhtml">Symfony\Component\Config\Definition\Builder\NodeParentInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the parent node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parent</code> - The parent</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="treatFalseLike"/>
            <h4><span class="label public">public</span>treatFalseLike<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the equivalent value used when the node contains false.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="treatNullLike"/>
            <h4><span class="label public">public</span>treatNullLike<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the equivalent value used when the node contains null.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="treatTrueLike"/>
            <h4><span class="label public">public</span>treatTrueLike<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the equivalent value used when the node contains true.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validate"/>
            <h4><span class="label public">public</span>validate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an expression to run for the validation.<pre>The expression receives the value of the node and must return it. It can
modify it.
An exception should be thrown when the node is not valid.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createNode"/>
            <h4><span class="label protected">protected</span>createNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="createNode"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>createNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiate and configure the node according to this definition</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>$node The node instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidDefinitionException When the definition is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="instantiateNode"/>
            <h4><span class="label protected">protected</span>instantiateNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates a Node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="instantiateNode"/>
            <h4><span class="label protected">protected</span>instantiateNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiate a Node</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="instantiateNode"/>
            <h4><span class="label protected">protected</span>instantiateNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiate a Node</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="merge"/>
            <h4><span class="label protected">protected</span>merge<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the builder for merging rules.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalization"/>
            <h4><span class="label protected">protected</span>normalization<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the builder for normalization rules.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validation"/>
            <h4><span class="label protected">protected</span>validation<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the builder for validation rules.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
