<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Config\Definition\Builder\NodeBuilder - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#parent">$parent</a>
          </li>
          <li>
            <a href="#nodeMapping">$nodeMapping</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#append">append</a>
          </li>
          <li>
            <a href="#arrayNode">arrayNode</a>
          </li>
          <li>
            <a href="#booleanNode">booleanNode</a>
          </li>
          <li>
            <a href="#end">end</a>
          </li>
          <li>
            <a href="#enumNode">enumNode</a>
          </li>
          <li>
            <a href="#floatNode">floatNode</a>
          </li>
          <li>
            <a href="#getNodeClass">getNodeClass</a>
          </li>
          <li>
            <a href="#integerNode">integerNode</a>
          </li>
          <li>
            <a href="#node">node</a>
          </li>
          <li>
            <a href="#scalarNode">scalarNode</a>
          </li>
          <li>
            <a href="#setNodeClass">setNodeClass</a>
          </li>
          <li>
            <a href="#setParent">setParent</a>
          </li>
          <li>
            <a href="#variableNode">variableNode</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Config\Definition\Builder\</span>NodeBuilder</h2>
        <div class="file-notice">
          <p>This class provides a fluent interface for building a node.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_Config_Definition_Builder_NodeParentInterface.xhtml">Symfony\Component\Config\Definition\Builder\NodeParentInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="parent"/>
            <h4><span class="label protected">protected</span>
                $parent</h4>
          </li>
          <li>
            <a name="nodeMapping"/>
            <h4><span class="label protected">protected</span>
                $nodeMapping</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="append"/>
            <h4><span class="label public">public</span>append<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_Definition_Builder_NodeDefinition.xhtml">Symfony\Component\Config\Definition\Builder\NodeDefinition</a></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Appends a node definition.<pre>Usage:

    $node = new ArrayNodeDefinition('name')
        -&gt;children()
            -&gt;scalarNode('foo')-&gt;end()
            -&gt;scalarNode('baz')-&gt;end()
            -&gt;append($this-&gt;getBarNodeDefinition())
        -&gt;end()
    ;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>This node builder</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="arrayNode"/>
            <h4><span class="label public">public</span>arrayNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child array node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="booleanNode"/>
            <h4><span class="label public">public</span>booleanNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child Boolean node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="end"/>
            <h4><span class="label public">public</span>end<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the parent node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parent node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="enumNode"/>
            <h4><span class="label public">public</span>enumNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child EnumNode.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="floatNode"/>
            <h4><span class="label public">public</span>floatNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child float node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - the name of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="integerNode"/>
            <h4><span class="label public">public</span>integerNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child integer node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - the name of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="node"/>
            <h4><span class="label public">public</span>node<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the node</li>
                <li><code>$type</code> - The type of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException When the node type is not registered</code>
                </li>
                <li>
                  <code>\RuntimeException When the node class is not found</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="scalarNode"/>
            <h4><span class="label public">public</span>scalarNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child scalar node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - the name of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNodeClass"/>
            <h4><span class="label public">public</span>setNodeClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong>, <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds or overrides a node Type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - The name of the type</li>
                <li><code>$class</code> - The fully qualified name the node definition class</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>This node builder</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParent"/>
            <h4><span class="label public">public</span>setParent<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_Builder_ParentNodeDefinitionInterface.xhtml">Symfony\Component\Config\Definition\Builder\ParentNodeDefinitionInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the parent node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parent</code> - The parent node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>This node builder</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="variableNode"/>
            <h4><span class="label public">public</span>variableNode<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a child variable node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The builder of the child node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNodeClass"/>
            <h4><span class="label protected">protected</span>getNodeClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the class name of the node definition.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - The node type</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node definition class name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException When the node type is not registered</code>
                </li>
                <li>
                  <code>\RuntimeException When the node class is not found</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
