<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\ORM\Query\Expr - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#_quoteLiteral">_quoteLiteral</a>
          </li>
          <li>
            <a href="#abs">abs</a>
          </li>
          <li>
            <a href="#all">all</a>
          </li>
          <li>
            <a href="#andX">andX</a>
          </li>
          <li>
            <a href="#any">any</a>
          </li>
          <li>
            <a href="#asc">asc</a>
          </li>
          <li>
            <a href="#avg">avg</a>
          </li>
          <li>
            <a href="#between">between</a>
          </li>
          <li>
            <a href="#concat">concat</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#countDistinct">countDistinct</a>
          </li>
          <li>
            <a href="#desc">desc</a>
          </li>
          <li>
            <a href="#diff">diff</a>
          </li>
          <li>
            <a href="#eq">eq</a>
          </li>
          <li>
            <a href="#exists">exists</a>
          </li>
          <li>
            <a href="#gt">gt</a>
          </li>
          <li>
            <a href="#gte">gte</a>
          </li>
          <li>
            <a href="#in">in</a>
          </li>
          <li>
            <a href="#isNotNull">isNotNull</a>
          </li>
          <li>
            <a href="#isNull">isNull</a>
          </li>
          <li>
            <a href="#length">length</a>
          </li>
          <li>
            <a href="#like">like</a>
          </li>
          <li>
            <a href="#literal">literal</a>
          </li>
          <li>
            <a href="#lower">lower</a>
          </li>
          <li>
            <a href="#lt">lt</a>
          </li>
          <li>
            <a href="#lte">lte</a>
          </li>
          <li>
            <a href="#max">max</a>
          </li>
          <li>
            <a href="#min">min</a>
          </li>
          <li>
            <a href="#neq">neq</a>
          </li>
          <li>
            <a href="#not">not</a>
          </li>
          <li>
            <a href="#notIn">notIn</a>
          </li>
          <li>
            <a href="#orX">orX</a>
          </li>
          <li>
            <a href="#prod">prod</a>
          </li>
          <li>
            <a href="#quot">quot</a>
          </li>
          <li>
            <a href="#some">some</a>
          </li>
          <li>
            <a href="#sqrt">sqrt</a>
          </li>
          <li>
            <a href="#substring">substring</a>
          </li>
          <li>
            <a href="#sum">sum</a>
          </li>
          <li>
            <a href="#trim">trim</a>
          </li>
          <li>
            <a href="#upper">upper</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\ORM\Query\</span>Expr</h2>
        <div class="file-notice">
          <p>This class is used to generate DQL expressions via a set of PHP static functions</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;</li>
          <li><b>Author: </b>Jonathan Wage &lt;jonwage@gmail.com&gt;</li>
          <li><b>Author: </b>Roman Borschel &lt;roman@code-factory.org&gt;</li>
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="abs"/>
            <h4><span class="label public">public</span>abs<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an ABS() function expression with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in ABS() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="all"/>
            <h4><span class="label public">public</span>all<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $subquery</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of ALL() function, with the given DQL Subquery.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subquery</code> - DQL Subquery to be used in ALL() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="andX"/>
            <h4><span class="label public">public</span>andX<span style="font-size:90%;">( <span class="param-type"/><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a conjunction of the given boolean expressions.<pre>Example:

    [php]
    // (u.type = ?1) AND (u.role = ?2)
    $expr-&gt;andX($expr-&gt;eq('u.type', ':1'), $expr-&gt;eq('u.role', ':2'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>|</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="any"/>
            <h4><span class="label public">public</span>any<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $subquery</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an ANY() function expression with the given DQL subquery.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subquery</code> - DQL Subquery to be used in ANY() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="asc"/>
            <h4><span class="label public">public</span>asc<span style="font-size:90%;">( <span class="param-type"/><strong> $expr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an ASCending order expression.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$sort</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="avg"/>
            <h4><span class="label public">public</span>avg<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of AVG() function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in AVG() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="between"/>
            <h4><span class="label public">public</span>between<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $val</strong>, <span class="param-type">integer</span><strong> $x</strong>, <span class="param-type">integer</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of BETWEEN() function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$val</code> - Valued to be inspected by range values.</li>
                <li><code>$x</code> - Starting range value to be used in BETWEEN() function.</li>
                <li><code>$y</code> - End point value to be used in BETWEEN() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A BETWEEN expression.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="concat"/>
            <h4><span class="label public">public</span>concat<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type"/><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a CONCAT() function expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - First argument to be used in CONCAT() function.</li>
                <li><code>$x</code> - Second argument to be used in CONCAT() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of COUNT() function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in COUNT() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="countDistinct"/>
            <h4><span class="label public">public</span>countDistinct<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of COUNT(DISTINCT) function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in COUNT(DISTINCT) function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="desc"/>
            <h4><span class="label public">public</span>desc<span style="font-size:90%;">( <span class="param-type"/><strong> $expr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a DESCending order expression.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$sort</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="diff"/>
            <h4><span class="label public">public</span>diff<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a difference mathematical expression with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; - &lt;right expr&gt;. Example:

    [php]
    // u.monthlySubscriptionCount - 1
    $q-&gt;expr()-&gt;diff('u.monthlySubscriptionCount', '1')</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="eq"/>
            <h4><span class="label public">public</span>eq<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an equality comparison expression with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; = &lt;right expr&gt;. Example:

    [php]
    // u.id = ?1
    $expr-&gt;eq('u.id', '?1');</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="exists"/>
            <h4><span class="label public">public</span>exists<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $subquery</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of EXISTS() function, with the given DQL Subquery.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subquery</code> - DQL Subquery to be used in EXISTS() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="gt"/>
            <h4><span class="label public">public</span>gt<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of Expr\Comparison, with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; &gt; &lt;right expr&gt;. Example:

    [php]
    // u.id &gt; ?1
    $q-&gt;where($q-&gt;expr()-&gt;gt('u.id', '?1'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="gte"/>
            <h4><span class="label public">public</span>gte<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of Expr\Comparison, with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; &gt;= &lt;right expr&gt;. Example:

    [php]
    // u.id &gt;= ?1
    $q-&gt;where($q-&gt;expr()-&gt;gte('u.id', '?1'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="in"/>
            <h4><span class="label public">public</span>in<span style="font-size:90%;">( <span class="param-type">string</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an IN() expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Field in string format to be restricted by IN() function</li>
                <li><code>$y</code> - Argument to be used in IN() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNotNull"/>
            <h4><span class="label public">public</span>isNotNull<span style="font-size:90%;">( <span class="param-type">string</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an IS NOT NULL expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Field in string format to be restricted by IS NOT NULL</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNull"/>
            <h4><span class="label public">public</span>isNull<span style="font-size:90%;">( <span class="param-type">string</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an IS NULL expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Field in string format to be restricted by IS NULL</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="length"/>
            <h4><span class="label public">public</span>length<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a LENGTH() function expression with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used as argument of LENGTH() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A LENGTH function expression.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="like"/>
            <h4><span class="label public">public</span>like<span style="font-size:90%;">( <span class="param-type">string</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a LIKE() comparison expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Field in string format to be inspected by LIKE() comparison.</li>
                <li><code>$y</code> - Argument to be used in LIKE() comparison.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="literal"/>
            <h4><span class="label public">public</span>literal<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $literal</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a literal expression of the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$literal</code> - Argument to be converted to literal.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lower"/>
            <h4><span class="label public">public</span>lower<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a LOWER() function expression with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in LOWER() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A LOWER function expression.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lt"/>
            <h4><span class="label public">public</span>lt<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of Expr\Comparison, with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; &lt; &lt;right expr&gt;. Example:

    [php]
    // u.id &lt; ?1
    $q-&gt;where($q-&gt;expr()-&gt;lt('u.id', '?1'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lte"/>
            <h4><span class="label public">public</span>lte<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of Expr\Comparison, with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; &lt;= &lt;right expr&gt;. Example:

    [php]
    // u.id &lt;= ?1
    $q-&gt;where($q-&gt;expr()-&gt;lte('u.id', '?1'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="max"/>
            <h4><span class="label public">public</span>max<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of MAX() function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in MAX() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="min"/>
            <h4><span class="label public">public</span>min<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of MIN() function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in MIN() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="neq"/>
            <h4><span class="label public">public</span>neq<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of Expr\Comparison, with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; &lt;&gt; &lt;right expr&gt;. Example:

    [php]
    // u.id &lt;&gt; ?1
    $q-&gt;where($q-&gt;expr()-&gt;neq('u.id', '?1'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="not"/>
            <h4><span class="label public">public</span>not<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $restriction</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a negation expression of the given restriction.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$restriction</code> - Restriction to be used in NOT() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="notIn"/>
            <h4><span class="label public">public</span>notIn<span style="font-size:90%;">( <span class="param-type">string</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a NOT IN() expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Field in string format to be restricted by NOT IN() function</li>
                <li><code>$y</code> - Argument to be used in NOT IN() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="orX"/>
            <h4><span class="label public">public</span>orX<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a disjunction of the given boolean expressions.<pre>Example:

    [php]
    // (u.type = ?1) OR (u.role = ?2)
    $q-&gt;where($q-&gt;expr()-&gt;orX('u.type = ?1', 'u.role = ?2'));</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Optional clause. Defaults = null, but requires</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prod"/>
            <h4><span class="label public">public</span>prod<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a product mathematical expression with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; * &lt;right expr&gt;. Example:

    [php]
    // u.salary * u.percentAnualSalaryIncrease
    $q-&gt;expr()-&gt;prod('u.salary', 'u.percentAnualSalaryIncrease')</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="quot"/>
            <h4><span class="label public">public</span>quot<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a quotient mathematical expression with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; / &lt;right expr&gt;. Example:

    [php]
    // u.total / u.period
    $expr-&gt;quot('u.total', 'u.period')</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="some"/>
            <h4><span class="label public">public</span>some<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $subquery</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a SOME() function expression with the given DQL subquery.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subquery</code> - DQL Subquery to be used in SOME() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="sqrt"/>
            <h4><span class="label public">public</span>sqrt<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a SQRT() function expression with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in SQRT() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="substring"/>
            <h4><span class="label public">public</span>substring<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">integer</span><strong> $from</strong>, <span class="param-type">integer</span><strong> $len</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a SUBSTRING() function expression with the given arguments.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used as string to be cropped by SUBSTRING() function.</li>
                <li><code>$from</code> - Initial offset to start cropping string. May accept negative values.</li>
                <li><code>$len</code> - Length of crop. May accept negative values.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="sum"/>
            <h4><span class="label public">public</span>sum<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong>, <span class="param-type">mixed</span><strong> $y</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a sum mathematical expression with the given arguments.<pre>First argument is considered the left expression and the second is the right expression.
When converted to string, it will generated a &lt;left expr&gt; + &lt;right expr&gt;. Example:

    [php]
    // u.numChildren + 1
    $q-&gt;expr()-&gt;diff('u.numChildren', '1')</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Left expression</li>
                <li><code>$y</code> - Right expression</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="trim"/>
            <h4><span class="label public">public</span>trim<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an instance of TRIM() function, with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used as argument of TRIM() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>a TRIM expression.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="upper"/>
            <h4><span class="label public">public</span>upper<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $x</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates an UPPER() function expression with the given argument.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$x</code> - Argument to be used in UPPER() function.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An UPPER function expression.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_quoteLiteral"/>
            <h4><span class="label private">private</span>_quoteLiteral<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $literal</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Quotes a literal value, if necessary, according to the DQL syntax.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$literal</code> - The literal value.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
