<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Config\Util\XmlUtils - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#convertDomElementToArray">convertDomElementToArray</a>
          </li>
          <li>
            <a href="#getXmlErrors">getXmlErrors</a>
          </li>
          <li>
            <a href="#loadFile">loadFile</a>
          </li>
          <li>
            <a href="#phpize">phpize</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Config\Util\</span>XmlUtils</h2>
        <div class="file-notice">
          <p>XMLUtils is a bunch of utility methods to XML operations.</p>
          <p>
            <pre>This class contains static methods only and is not meant to be instantiated.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Martin Hasoň &lt;martin.hason@gmail.com&gt;</li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label private">private</span>__construct<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>This class should not be instantiated</li>
            </p>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="convertDomElementToArray"/>
            <h4><span class="label true">true</span><span class="label public">public</span>convertDomElementToArray<span style="font-size:90%;">( <span class="param-type"><span title="DomElement">DomElement</span></span><strong> $element</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $checkPrefix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts a \DomElement object to a PHP array.<pre>The following rules applies during the conversion:

 * Each tag is converted to a key value or an array
   if there is more than one "value"

 * The content of a tag is set under a "value" key (&lt;foo&gt;bar&lt;/foo&gt;)
   if the tag also has some nested tags

 * The attributes are converted to keys (&lt;foo foo="bar"/&gt;)

 * The nested-tags are converted to keys (&lt;foo&gt;&lt;foo&gt;bar&lt;/foo&gt;&lt;/foo&gt;)</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$element</code> - A \DomElement instance</li>
                <li><code>$checkPrefix</code> - Check prefix in an element or an attribute name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A PHP array</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>loadFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $file</strong>, <span class="param-type"><span title="string|callable">string|callable</span></span><strong> $schemaOrCallable</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads an XML file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$file</code> - An XML file path</li>
                <li><code>$schemaOrCallable</code> - An XSD schema file path or callable</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When loading of XML file returns error</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="phpize"/>
            <h4><span class="label true">true</span><span class="label public">public</span>phpize<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts an xml value to a php type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getXmlErrors"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getXmlErrors<span style="font-size:90%;">( <span class="param-type"/><strong> $internalErrors</strong> )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
