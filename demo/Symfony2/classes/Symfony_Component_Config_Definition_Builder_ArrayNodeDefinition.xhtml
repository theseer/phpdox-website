<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#performDeepMerging">$performDeepMerging</a>
          </li>
          <li>
            <a href="#ignoreExtraKeys">$ignoreExtraKeys</a>
          </li>
          <li>
            <a href="#children">$children</a>
          </li>
          <li>
            <a href="#prototype">$prototype</a>
          </li>
          <li>
            <a href="#atLeastOne">$atLeastOne</a>
          </li>
          <li>
            <a href="#allowNewKeys">$allowNewKeys</a>
          </li>
          <li>
            <a href="#key">$key</a>
          </li>
          <li>
            <a href="#removeKeyItem">$removeKeyItem</a>
          </li>
          <li>
            <a href="#addDefaults">$addDefaults</a>
          </li>
          <li>
            <a href="#addDefaultChildren">$addDefaultChildren</a>
          </li>
          <li>
            <a href="#nodeBuilder">$nodeBuilder</a>
          </li>
          <li>
            <a href="#normalizeKeys">$normalizeKeys</a>
          </li>
          <li>
            <a href="#name">$name</a>
          </li>
          <li>
            <a href="#normalization">$normalization</a>
          </li>
          <li>
            <a href="#validation">$validation</a>
          </li>
          <li>
            <a href="#defaultValue">$defaultValue</a>
          </li>
          <li>
            <a href="#default">$default</a>
          </li>
          <li>
            <a href="#required">$required</a>
          </li>
          <li>
            <a href="#merge">$merge</a>
          </li>
          <li>
            <a href="#allowEmptyValue">$allowEmptyValue</a>
          </li>
          <li>
            <a href="#nullEquivalent">$nullEquivalent</a>
          </li>
          <li>
            <a href="#trueEquivalent">$trueEquivalent</a>
          </li>
          <li>
            <a href="#falseEquivalent">$falseEquivalent</a>
          </li>
          <li>
            <a href="#parent">$parent</a>
          </li>
          <li>
            <a href="#attributes">$attributes</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addDefaultChildrenIfNoneSet">addDefaultChildrenIfNoneSet</a>
          </li>
          <li>
            <a href="#addDefaultsIfNotSet">addDefaultsIfNotSet</a>
          </li>
          <li>
            <a href="#append">append</a>
          </li>
          <li>
            <a href="#attribute">attribute</a>
          </li>
          <li>
            <a href="#beforeNormalization">beforeNormalization</a>
          </li>
          <li>
            <a href="#canBeDisabled">canBeDisabled</a>
          </li>
          <li>
            <a href="#canBeEnabled">canBeEnabled</a>
          </li>
          <li>
            <a href="#canBeUnset">canBeUnset</a>
          </li>
          <li>
            <a href="#cannotBeEmpty">cannotBeEmpty</a>
          </li>
          <li>
            <a href="#cannotBeOverwritten">cannotBeOverwritten</a>
          </li>
          <li>
            <a href="#children">children</a>
          </li>
          <li>
            <a href="#createNode">createNode</a>
          </li>
          <li>
            <a href="#createNode">createNode</a>
          </li>
          <li>
            <a href="#defaultFalse">defaultFalse</a>
          </li>
          <li>
            <a href="#defaultNull">defaultNull</a>
          </li>
          <li>
            <a href="#defaultTrue">defaultTrue</a>
          </li>
          <li>
            <a href="#defaultValue">defaultValue</a>
          </li>
          <li>
            <a href="#disallowNewKeysInSubsequentConfigs">disallowNewKeysInSubsequentConfigs</a>
          </li>
          <li>
            <a href="#end">end</a>
          </li>
          <li>
            <a href="#example">example</a>
          </li>
          <li>
            <a href="#fixXmlConfig">fixXmlConfig</a>
          </li>
          <li>
            <a href="#getNode">getNode</a>
          </li>
          <li>
            <a href="#getNodeBuilder">getNodeBuilder</a>
          </li>
          <li>
            <a href="#ignoreExtraKeys">ignoreExtraKeys</a>
          </li>
          <li>
            <a href="#info">info</a>
          </li>
          <li>
            <a href="#isRequired">isRequired</a>
          </li>
          <li>
            <a href="#merge">merge</a>
          </li>
          <li>
            <a href="#normalization">normalization</a>
          </li>
          <li>
            <a href="#normalizeKeys">normalizeKeys</a>
          </li>
          <li>
            <a href="#performNoDeepMerging">performNoDeepMerging</a>
          </li>
          <li>
            <a href="#prototype">prototype</a>
          </li>
          <li>
            <a href="#requiresAtLeastOneElement">requiresAtLeastOneElement</a>
          </li>
          <li>
            <a href="#setBuilder">setBuilder</a>
          </li>
          <li>
            <a href="#setParent">setParent</a>
          </li>
          <li>
            <a href="#treatFalseLike">treatFalseLike</a>
          </li>
          <li>
            <a href="#treatNullLike">treatNullLike</a>
          </li>
          <li>
            <a href="#treatTrueLike">treatTrueLike</a>
          </li>
          <li>
            <a href="#useAttributeAsKey">useAttributeAsKey</a>
          </li>
          <li>
            <a href="#validate">validate</a>
          </li>
          <li>
            <a href="#validateConcreteNode">validateConcreteNode</a>
          </li>
          <li>
            <a href="#validatePrototypeNode">validatePrototypeNode</a>
          </li>
          <li>
            <a href="#validation">validation</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Config\Definition\Builder\</span>ArrayNodeDefinition</h2>
        <div class="file-notice">
          <p>This class provides a fluent interface for defining an array node.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_Config_Definition_Builder_ParentNodeDefinitionInterface.xhtml">Symfony\Component\Config\Definition\Builder\ParentNodeDefinitionInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="performDeepMerging"/>
            <h4><span class="label protected">protected</span>
                $performDeepMerging</h4>
          </li>
          <li>
            <a name="ignoreExtraKeys"/>
            <h4><span class="label protected">protected</span>
                $ignoreExtraKeys</h4>
          </li>
          <li>
            <a name="children"/>
            <h4><span class="label protected">protected</span>
                $children</h4>
          </li>
          <li>
            <a name="prototype"/>
            <h4><span class="label protected">protected</span>
                $prototype</h4>
          </li>
          <li>
            <a name="atLeastOne"/>
            <h4><span class="label protected">protected</span>
                $atLeastOne</h4>
          </li>
          <li>
            <a name="allowNewKeys"/>
            <h4><span class="label protected">protected</span>
                $allowNewKeys</h4>
          </li>
          <li>
            <a name="key"/>
            <h4><span class="label protected">protected</span>
                $key</h4>
          </li>
          <li>
            <a name="removeKeyItem"/>
            <h4><span class="label protected">protected</span>
                $removeKeyItem</h4>
          </li>
          <li>
            <a name="addDefaults"/>
            <h4><span class="label protected">protected</span>
                $addDefaults</h4>
          </li>
          <li>
            <a name="addDefaultChildren"/>
            <h4><span class="label protected">protected</span>
                $addDefaultChildren</h4>
          </li>
          <li>
            <a name="nodeBuilder"/>
            <h4><span class="label protected">protected</span>
                $nodeBuilder</h4>
          </li>
          <li>
            <a name="normalizeKeys"/>
            <h4><span class="label protected">protected</span>
                $normalizeKeys</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_Builder_NodeParentInterface.xhtml">Symfony\Component\Config\Definition\Builder\NodeParentInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addDefaultChildrenIfNoneSet"/>
            <h4><span class="label public">public</span>addDefaultChildrenIfNoneSet<span style="font-size:90%;">( <span class="param-type"><span title="integer|string|array|null">integer|string|array|null</span></span><strong> $children</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds children with a default value when none are defined.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$children</code> - The number of children|The child name|The children names to be added</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addDefaultsIfNotSet"/>
            <h4><span class="label public">public</span>addDefaultsIfNotSet<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds the default value if the node is not set in the configuration.<pre>This method is applicable to concrete nodes only (not to prototype nodes).
If this function has been called and the node is not set during the finalization
phase, it's default value will be derived from its children default values.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="append"/>
            <h4><span class="label public">public</span>append<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_Definition_Builder_NodeDefinition.xhtml">Symfony\Component\Config\Definition\Builder\NodeDefinition</a></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Appends a node definition.<pre>$node = new ArrayNodeDefinition()
        -&gt;children()
            -&gt;scalarNode('foo')-&gt;end()
            -&gt;scalarNode('baz')-&gt;end()
        -&gt;end()
        -&gt;append($this-&gt;getBarNodeDefinition())
    ;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - A NodeDefinition instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>This node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="attribute"/>
            <h4><span class="label public">public</span>attribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an attribute on the node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="beforeNormalization"/>
            <h4><span class="label public">public</span>beforeNormalization<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an expression to run before the normalization.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="canBeDisabled"/>
            <h4><span class="label public">public</span>canBeDisabled<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an "enabled" boolean to enable the current section.<pre>By default, the section is enabled.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="canBeEnabled"/>
            <h4><span class="label public">public</span>canBeEnabled<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an "enabled" boolean to enable the current section.<pre>By default, the section is disabled. If any configuration is specified then
the node will be automatically enabled:

enableableArrayNode: {enabled: true, ...}   # The config is enabled &amp; default values get overridden
enableableArrayNode: ~                      # The config is enabled &amp; use the default values
enableableArrayNode: true                   # The config is enabled &amp; use the default values
enableableArrayNode: {other: value, ...}    # The config is enabled &amp; default values get overridden
enableableArrayNode: {enabled: false, ...}  # The config is disabled
enableableArrayNode: false                  # The config is disabled</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="canBeUnset"/>
            <h4><span class="label public">public</span>canBeUnset<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $allow</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the node can be unset.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$allow</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="cannotBeEmpty"/>
            <h4><span class="label public">public</span>cannotBeEmpty<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Denies the node value being empty.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="cannotBeOverwritten"/>
            <h4><span class="label public">public</span>cannotBeOverwritten<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $deny</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the node can be overwritten.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$deny</code> - Whether the overwriting is forbidden or not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="children"/>
            <h4><span class="label public">public</span>children<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a builder to add children nodes.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultFalse"/>
            <h4><span class="label public">public</span>defaultFalse<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets false as the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultNull"/>
            <h4><span class="label public">public</span>defaultNull<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets null as the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultTrue"/>
            <h4><span class="label public">public</span>defaultTrue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets true as the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="defaultValue"/>
            <h4><span class="label public">public</span>defaultValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the default value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The default value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="disallowNewKeysInSubsequentConfigs"/>
            <h4><span class="label public">public</span>disallowNewKeysInSubsequentConfigs<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Disallows adding news keys in a subsequent configuration.<pre>If used all keys have to be defined in the same configuration file.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="end"/>
            <h4><span class="label public">public</span>end<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the parent node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The builder of the parent node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="example"/>
            <h4><span class="label public">public</span>example<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $example</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets example configuration.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$example</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fixXmlConfig"/>
            <h4><span class="label public">public</span>fixXmlConfig<span style="font-size:90%;">( <span class="param-type">string</span><strong> $singular</strong>, <span class="param-type">string</span><strong> $plural</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a normalization rule for XML configurations.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$singular</code> - The key to remap</li>
                <li><code>$plural</code> - The plural of the key for irregular plurals</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNode"/>
            <h4><span class="label public">public</span>getNode<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $forceRootNode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates the node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$forceRootNode</code> - Whether to force this node as the root node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="ignoreExtraKeys"/>
            <h4><span class="label public">public</span>ignoreExtraKeys<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Allows extra config keys to be specified under an array without throwing an exception.<pre>Those config values are simply ignored. This should be used only
in special cases where you want to send an entire configuration
array through a special tree that processes only part of the array.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="info"/>
            <h4><span class="label public">public</span>info<span style="font-size:90%;">( <span class="param-type">string</span><strong> $info</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets info message.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$info</code> - The info text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRequired"/>
            <h4><span class="label public">public</span>isRequired<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the node as required.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeKeys"/>
            <h4><span class="label public">public</span>normalizeKeys<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $bool</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets key normalization.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$bool</code> - Whether to enable key normalization</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="performNoDeepMerging"/>
            <h4><span class="label public">public</span>performNoDeepMerging<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Disables the deep merging of the node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prototype"/>
            <h4><span class="label public">public</span>prototype<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a prototype for child nodes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - the type of node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="requiresAtLeastOneElement"/>
            <h4><span class="label public">public</span>requiresAtLeastOneElement<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Requires the node to have at least one element.<pre>This method is applicable to prototype nodes only.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setBuilder"/>
            <h4><span class="label public">public</span>setBuilder<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_Definition_Builder_NodeBuilder.xhtml">Symfony\Component\Config\Definition\Builder\NodeBuilder</a></span><strong> $builder</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a custom children builder.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$builder</code> - A custom NodeBuilder</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParent"/>
            <h4><span class="label public">public</span>setParent<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_Builder_NodeParentInterface.xhtml">Symfony\Component\Config\Definition\Builder\NodeParentInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the parent node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parent</code> - The parent</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="treatFalseLike"/>
            <h4><span class="label public">public</span>treatFalseLike<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the equivalent value used when the node contains false.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="treatNullLike"/>
            <h4><span class="label public">public</span>treatNullLike<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the equivalent value used when the node contains null.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="treatTrueLike"/>
            <h4><span class="label public">public</span>treatTrueLike<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the equivalent value used when the node contains true.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="useAttributeAsKey"/>
            <h4><span class="label public">public</span>useAttributeAsKey<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $removeKeyItem</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the attribute which value is to be used as key.<pre>This is useful when you have an indexed array that should be an
associative array. You can select an item from within the array
to be the key of the particular item. For example, if "id" is the
"key", then:

    array(
        array('id' =&gt; 'my_name', 'foo' =&gt; 'bar'),
    );

  becomes

    array(
        'my_name' =&gt; array('foo' =&gt; 'bar'),
    );

If you'd like "'id' =&gt; 'my_name'" to still be present in the resulting
array, then you can set the second argument of this method to false.

This method is applicable to prototype nodes only.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the key</li>
                <li><code>$removeKeyItem</code> - Whether or not the key item should be removed.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validate"/>
            <h4><span class="label public">public</span>validate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an expression to run for the validation.<pre>The expression receives the value of the node and must return it. It can
modify it.
An exception should be thrown when the node is not valid.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createNode"/>
            <h4><span class="label protected">protected</span>createNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="createNode"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>createNode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiate and configure the node according to this definition</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>$node The node instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidDefinitionException When the definition is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNodeBuilder"/>
            <h4><span class="label protected">protected</span>getNodeBuilder<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a node builder to be used to add children and prototype</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The node builder</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="merge"/>
            <h4><span class="label protected">protected</span>merge<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the builder for merging rules.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalization"/>
            <h4><span class="label protected">protected</span>normalization<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the builder for normalization rules.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validateConcreteNode"/>
            <h4><span class="label protected">protected</span>validateConcreteNode<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_Definition_ArrayNode.xhtml">Symfony\Component\Config\Definition\ArrayNode</a></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Validate the configuration of a concrete node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - The related node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidDefinitionException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validatePrototypeNode"/>
            <h4><span class="label protected">protected</span>validatePrototypeNode<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Config_Definition_PrototypedArrayNode.xhtml">Symfony\Component\Config\Definition\PrototypedArrayNode</a></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Validate the configuration of a prototype node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - The related node</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidDefinitionException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validation"/>
            <h4><span class="label protected">protected</span>validation<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the builder for validation rules.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
