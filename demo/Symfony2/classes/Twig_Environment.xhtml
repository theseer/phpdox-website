<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Twig_Environment - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#VERSION">VERSION</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#charset">$charset</a>
          </li>
          <li>
            <a href="#loader">$loader</a>
          </li>
          <li>
            <a href="#debug">$debug</a>
          </li>
          <li>
            <a href="#autoReload">$autoReload</a>
          </li>
          <li>
            <a href="#cache">$cache</a>
          </li>
          <li>
            <a href="#lexer">$lexer</a>
          </li>
          <li>
            <a href="#parser">$parser</a>
          </li>
          <li>
            <a href="#compiler">$compiler</a>
          </li>
          <li>
            <a href="#baseTemplateClass">$baseTemplateClass</a>
          </li>
          <li>
            <a href="#extensions">$extensions</a>
          </li>
          <li>
            <a href="#parsers">$parsers</a>
          </li>
          <li>
            <a href="#visitors">$visitors</a>
          </li>
          <li>
            <a href="#filters">$filters</a>
          </li>
          <li>
            <a href="#tests">$tests</a>
          </li>
          <li>
            <a href="#functions">$functions</a>
          </li>
          <li>
            <a href="#globals">$globals</a>
          </li>
          <li>
            <a href="#runtimeInitialized">$runtimeInitialized</a>
          </li>
          <li>
            <a href="#extensionInitialized">$extensionInitialized</a>
          </li>
          <li>
            <a href="#loadedTemplates">$loadedTemplates</a>
          </li>
          <li>
            <a href="#strictVariables">$strictVariables</a>
          </li>
          <li>
            <a href="#unaryOperators">$unaryOperators</a>
          </li>
          <li>
            <a href="#binaryOperators">$binaryOperators</a>
          </li>
          <li>
            <a href="#templateClassPrefix">$templateClassPrefix</a>
          </li>
          <li>
            <a href="#functionCallbacks">$functionCallbacks</a>
          </li>
          <li>
            <a href="#filterCallbacks">$filterCallbacks</a>
          </li>
          <li>
            <a href="#staging">$staging</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addExtension">addExtension</a>
          </li>
          <li>
            <a href="#addFilter">addFilter</a>
          </li>
          <li>
            <a href="#addFunction">addFunction</a>
          </li>
          <li>
            <a href="#addGlobal">addGlobal</a>
          </li>
          <li>
            <a href="#addNodeVisitor">addNodeVisitor</a>
          </li>
          <li>
            <a href="#addTest">addTest</a>
          </li>
          <li>
            <a href="#addTokenParser">addTokenParser</a>
          </li>
          <li>
            <a href="#clearCacheFiles">clearCacheFiles</a>
          </li>
          <li>
            <a href="#clearTemplateCache">clearTemplateCache</a>
          </li>
          <li>
            <a href="#compile">compile</a>
          </li>
          <li>
            <a href="#compileSource">compileSource</a>
          </li>
          <li>
            <a href="#computeAlternatives">computeAlternatives</a>
          </li>
          <li>
            <a href="#disableAutoReload">disableAutoReload</a>
          </li>
          <li>
            <a href="#disableDebug">disableDebug</a>
          </li>
          <li>
            <a href="#disableStrictVariables">disableStrictVariables</a>
          </li>
          <li>
            <a href="#display">display</a>
          </li>
          <li>
            <a href="#enableAutoReload">enableAutoReload</a>
          </li>
          <li>
            <a href="#enableDebug">enableDebug</a>
          </li>
          <li>
            <a href="#enableStrictVariables">enableStrictVariables</a>
          </li>
          <li>
            <a href="#getBaseTemplateClass">getBaseTemplateClass</a>
          </li>
          <li>
            <a href="#getBinaryOperators">getBinaryOperators</a>
          </li>
          <li>
            <a href="#getCache">getCache</a>
          </li>
          <li>
            <a href="#getCacheFilename">getCacheFilename</a>
          </li>
          <li>
            <a href="#getCharset">getCharset</a>
          </li>
          <li>
            <a href="#getCompiler">getCompiler</a>
          </li>
          <li>
            <a href="#getExtension">getExtension</a>
          </li>
          <li>
            <a href="#getExtensions">getExtensions</a>
          </li>
          <li>
            <a href="#getFilter">getFilter</a>
          </li>
          <li>
            <a href="#getFilters">getFilters</a>
          </li>
          <li>
            <a href="#getFunction">getFunction</a>
          </li>
          <li>
            <a href="#getFunctions">getFunctions</a>
          </li>
          <li>
            <a href="#getGlobals">getGlobals</a>
          </li>
          <li>
            <a href="#getLexer">getLexer</a>
          </li>
          <li>
            <a href="#getLoader">getLoader</a>
          </li>
          <li>
            <a href="#getNodeVisitors">getNodeVisitors</a>
          </li>
          <li>
            <a href="#getParser">getParser</a>
          </li>
          <li>
            <a href="#getTags">getTags</a>
          </li>
          <li>
            <a href="#getTemplateClass">getTemplateClass</a>
          </li>
          <li>
            <a href="#getTemplateClassPrefix">getTemplateClassPrefix</a>
          </li>
          <li>
            <a href="#getTest">getTest</a>
          </li>
          <li>
            <a href="#getTests">getTests</a>
          </li>
          <li>
            <a href="#getTokenParsers">getTokenParsers</a>
          </li>
          <li>
            <a href="#getUnaryOperators">getUnaryOperators</a>
          </li>
          <li>
            <a href="#hasExtension">hasExtension</a>
          </li>
          <li>
            <a href="#initExtension">initExtension</a>
          </li>
          <li>
            <a href="#initExtensions">initExtensions</a>
          </li>
          <li>
            <a href="#initGlobals">initGlobals</a>
          </li>
          <li>
            <a href="#initRuntime">initRuntime</a>
          </li>
          <li>
            <a href="#isAutoReload">isAutoReload</a>
          </li>
          <li>
            <a href="#isDebug">isDebug</a>
          </li>
          <li>
            <a href="#isStrictVariables">isStrictVariables</a>
          </li>
          <li>
            <a href="#isTemplateFresh">isTemplateFresh</a>
          </li>
          <li>
            <a href="#loadTemplate">loadTemplate</a>
          </li>
          <li>
            <a href="#mergeGlobals">mergeGlobals</a>
          </li>
          <li>
            <a href="#parse">parse</a>
          </li>
          <li>
            <a href="#registerUndefinedFilterCallback">registerUndefinedFilterCallback</a>
          </li>
          <li>
            <a href="#registerUndefinedFunctionCallback">registerUndefinedFunctionCallback</a>
          </li>
          <li>
            <a href="#removeExtension">removeExtension</a>
          </li>
          <li>
            <a href="#render">render</a>
          </li>
          <li>
            <a href="#resolveTemplate">resolveTemplate</a>
          </li>
          <li>
            <a href="#setBaseTemplateClass">setBaseTemplateClass</a>
          </li>
          <li>
            <a href="#setCache">setCache</a>
          </li>
          <li>
            <a href="#setCharset">setCharset</a>
          </li>
          <li>
            <a href="#setCompiler">setCompiler</a>
          </li>
          <li>
            <a href="#setExtensions">setExtensions</a>
          </li>
          <li>
            <a href="#setLexer">setLexer</a>
          </li>
          <li>
            <a href="#setLoader">setLoader</a>
          </li>
          <li>
            <a href="#setParser">setParser</a>
          </li>
          <li>
            <a href="#tokenize">tokenize</a>
          </li>
          <li>
            <a href="#writeCacheFile">writeCacheFile</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>Twig_Environment</h2>
        <div class="file-notice">
          <p>Stores the Twig configuration.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="VERSION"/>VERSION = '1.13.1'<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="charset"/>
            <h4><span class="label protected">protected</span>
                $charset</h4>
          </li>
          <li>
            <a name="loader"/>
            <h4><span class="label protected">protected</span>
                $loader</h4>
          </li>
          <li>
            <a name="debug"/>
            <h4><span class="label protected">protected</span>
                $debug</h4>
          </li>
          <li>
            <a name="autoReload"/>
            <h4><span class="label protected">protected</span>
                $autoReload</h4>
          </li>
          <li>
            <a name="cache"/>
            <h4><span class="label protected">protected</span>
                $cache</h4>
          </li>
          <li>
            <a name="lexer"/>
            <h4><span class="label protected">protected</span>
                $lexer</h4>
          </li>
          <li>
            <a name="parser"/>
            <h4><span class="label protected">protected</span>
                $parser</h4>
          </li>
          <li>
            <a name="compiler"/>
            <h4><span class="label protected">protected</span>
                $compiler</h4>
          </li>
          <li>
            <a name="baseTemplateClass"/>
            <h4><span class="label protected">protected</span>
                $baseTemplateClass</h4>
          </li>
          <li>
            <a name="extensions"/>
            <h4><span class="label protected">protected</span>
                $extensions</h4>
          </li>
          <li>
            <a name="parsers"/>
            <h4><span class="label protected">protected</span>
                $parsers</h4>
          </li>
          <li>
            <a name="visitors"/>
            <h4><span class="label protected">protected</span>
                $visitors</h4>
          </li>
          <li>
            <a name="filters"/>
            <h4><span class="label protected">protected</span>
                $filters</h4>
          </li>
          <li>
            <a name="tests"/>
            <h4><span class="label protected">protected</span>
                $tests</h4>
          </li>
          <li>
            <a name="functions"/>
            <h4><span class="label protected">protected</span>
                $functions</h4>
          </li>
          <li>
            <a name="globals"/>
            <h4><span class="label protected">protected</span>
                $globals</h4>
          </li>
          <li>
            <a name="runtimeInitialized"/>
            <h4><span class="label protected">protected</span>
                $runtimeInitialized</h4>
          </li>
          <li>
            <a name="extensionInitialized"/>
            <h4><span class="label protected">protected</span>
                $extensionInitialized</h4>
          </li>
          <li>
            <a name="loadedTemplates"/>
            <h4><span class="label protected">protected</span>
                $loadedTemplates</h4>
          </li>
          <li>
            <a name="strictVariables"/>
            <h4><span class="label protected">protected</span>
                $strictVariables</h4>
          </li>
          <li>
            <a name="unaryOperators"/>
            <h4><span class="label protected">protected</span>
                $unaryOperators</h4>
          </li>
          <li>
            <a name="binaryOperators"/>
            <h4><span class="label protected">protected</span>
                $binaryOperators</h4>
          </li>
          <li>
            <a name="templateClassPrefix"/>
            <h4><span class="label protected">protected</span>
                $templateClassPrefix</h4>
          </li>
          <li>
            <a name="functionCallbacks"/>
            <h4><span class="label protected">protected</span>
                $functionCallbacks</h4>
          </li>
          <li>
            <a name="filterCallbacks"/>
            <h4><span class="label protected">protected</span>
                $filterCallbacks</h4>
          </li>
          <li>
            <a name="staging"/>
            <h4><span class="label protected">protected</span>
                $staging</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_LoaderInterface">Twig_LoaderInterface</span></span><strong> $loader</strong>, <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.<pre>Available options:

 * debug: When set to true, it automatically set "auto_reload" to true as
          well (default to false).

 * charset: The charset used by the templates (default to UTF-8).

 * base_template_class: The base template class to use for generated
                        templates (default to Twig_Template).

 * cache: An absolute path where to store the compiled templates, or
          false to disable compilation cache (default).

 * auto_reload: Whether to reload the template is the original source changed.
                If you don't provide the auto_reload option, it will be
                determined automatically base on the debug value.

 * strict_variables: Whether to ignore invalid variables in templates
                     (default to false).

 * autoescape: Whether to enable auto-escaping (default to html):
                 * false: disable auto-escaping
                 * true: equivalent to html
                 * html, js: set the autoescaping to one of the supported strategies
                 * PHP callback: a PHP callback that returns an escaping strategy based on the template "filename"

 * optimizations: A flag that indicates which optimizations to apply
                  (default to -1 which means that all optimizations are enabled;
                  set it to 0 to disable).</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$loader</code> - A Twig_LoaderInterface instance</li>
                <li><code>$options</code> - An array of options</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addExtension"/>
            <h4><span class="label public">public</span>addExtension<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_ExtensionInterface">Twig_ExtensionInterface</span></span><strong> $extension</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers an extension.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$extension</code> - A Twig_ExtensionInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addFilter"/>
            <h4><span class="label public">public</span>addFilter<span style="font-size:90%;">( <span class="param-type"><span title="string|Twig_SimpleFilter">string|Twig_SimpleFilter</span></span><strong> $name</strong>, <span class="param-type"><span title="Twig_FilterInterface|Twig_SimpleFilter">Twig_FilterInterface|Twig_SimpleFilter</span></span><strong> $filter</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a Filter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The filter name or a Twig_SimpleFilter instance</li>
                <li><code>$filter</code> - A Twig_FilterInterface instance or a Twig_SimpleFilter instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addFunction"/>
            <h4><span class="label public">public</span>addFunction<span style="font-size:90%;">( <span class="param-type"><span title="string|Twig_SimpleFunction">string|Twig_SimpleFunction</span></span><strong> $name</strong>, <span class="param-type"><span title="Twig_FunctionInterface|Twig_SimpleFunction">Twig_FunctionInterface|Twig_SimpleFunction</span></span><strong> $function</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a Function.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The function name or a Twig_SimpleFunction instance</li>
                <li><code>$function</code> - A Twig_FunctionInterface instance or a Twig_SimpleFunction instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addGlobal"/>
            <h4><span class="label public">public</span>addGlobal<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a Global.<pre>New globals can be added before compiling or rendering a template;
but after, you can only update existing globals.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The global name</li>
                <li><code>$value</code> - The global value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addNodeVisitor"/>
            <h4><span class="label public">public</span>addNodeVisitor<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_NodeVisitorInterface">Twig_NodeVisitorInterface</span></span><strong> $visitor</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a Node Visitor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$visitor</code> - A Twig_NodeVisitorInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addTest"/>
            <h4><span class="label public">public</span>addTest<span style="font-size:90%;">( <span class="param-type"><span title="string|Twig_SimpleTest">string|Twig_SimpleTest</span></span><strong> $name</strong>, <span class="param-type"><span title="Twig_TestInterface|Twig_SimpleTest">Twig_TestInterface|Twig_SimpleTest</span></span><strong> $test</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a Test.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The test name or a Twig_SimpleTest instance</li>
                <li><code>$test</code> - A Twig_TestInterface instance or a Twig_SimpleTest instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addTokenParser"/>
            <h4><span class="label public">public</span>addTokenParser<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_TokenParserInterface">Twig_TokenParserInterface</span></span><strong> $parser</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a Token Parser.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parser</code> - A Twig_TokenParserInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="clearCacheFiles"/>
            <h4><span class="label public">public</span>clearCacheFiles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the template cache files on the filesystem.</li>
            </p>
          </li>
          <li>
            <a name="clearTemplateCache"/>
            <h4><span class="label public">public</span>clearTemplateCache<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the internal template cache.</li>
            </p>
          </li>
          <li>
            <a name="compile"/>
            <h4><span class="label public">public</span>compile<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_NodeInterface">Twig_NodeInterface</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Compiles a Node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - A Twig_NodeInterface instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The compiled PHP source code</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="compileSource"/>
            <h4><span class="label public">public</span>compileSource<span style="font-size:90%;">( <span class="param-type">string</span><strong> $source</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Compiles a template source code.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$source</code> - The template source code</li>
                <li><code>$name</code> - The template name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The compiled PHP source code</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="computeAlternatives"/>
            <h4><span class="label public">public</span>computeAlternatives<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type"/><strong> $items</strong> )</span></h4>
          </li>
          <li>
            <a name="disableAutoReload"/>
            <h4><span class="label public">public</span>disableAutoReload<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Disables the auto_reload option.</li>
            </p>
          </li>
          <li>
            <a name="disableDebug"/>
            <h4><span class="label public">public</span>disableDebug<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Disables debugging mode.</li>
            </p>
          </li>
          <li>
            <a name="disableStrictVariables"/>
            <h4><span class="label public">public</span>disableStrictVariables<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Disables the strict_variables option.</li>
            </p>
          </li>
          <li>
            <a name="display"/>
            <h4><span class="label public">public</span>display<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">Array</span><strong> $context</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Displays a template.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The template name</li>
                <li><code>$context</code> - An array of parameters to pass to the template</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="enableAutoReload"/>
            <h4><span class="label public">public</span>enableAutoReload<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Enables the auto_reload option.</li>
            </p>
          </li>
          <li>
            <a name="enableDebug"/>
            <h4><span class="label public">public</span>enableDebug<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Enables debugging mode.</li>
            </p>
          </li>
          <li>
            <a name="enableStrictVariables"/>
            <h4><span class="label public">public</span>enableStrictVariables<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Enables the strict_variables option.</li>
            </p>
          </li>
          <li>
            <a name="getBaseTemplateClass"/>
            <h4><span class="label public">public</span>getBaseTemplateClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the base template class for compiled templates.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The base template class name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getBinaryOperators"/>
            <h4><span class="label public">public</span>getBinaryOperators<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered binary Operators.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of binary operators</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCache"/>
            <h4><span class="label public">public</span>getCache<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the cache directory or false if cache is disabled.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCacheFilename"/>
            <h4><span class="label public">public</span>getCacheFilename<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the cache filename for a given template.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The template name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The cache file name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCharset"/>
            <h4><span class="label public">public</span>getCharset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the default template charset.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The default charset</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCompiler"/>
            <h4><span class="label public">public</span>getCompiler<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Compiler instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_CompilerInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExtension"/>
            <h4><span class="label public">public</span>getExtension<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets an extension by name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The extension name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_ExtensionInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExtensions"/>
            <h4><span class="label public">public</span>getExtensions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all registered extensions.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of extensions</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFilter"/>
            <h4><span class="label public">public</span>getFilter<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get a filter by name.<pre>Subclasses may override this method and load filters differently;
so no list of filters is available.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The filter name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_Filter instance or false if the filter does not exist</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFilters"/>
            <h4><span class="label public">public</span>getFilters<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered Filters.<pre>Be warned that this method cannot return filters defined with registerUndefinedFunctionCallback.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Twig_FilterInterface instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFunction"/>
            <h4><span class="label public">public</span>getFunction<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get a function by name.<pre>Subclasses may override this method and load functions differently;
so no list of functions is available.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - function name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_Function instance or false if the function does not exist</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFunctions"/>
            <h4><span class="label public">public</span>getFunctions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets registered functions.<pre>Be warned that this method cannot return functions defined with registerUndefinedFunctionCallback.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Twig_FunctionInterface instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getGlobals"/>
            <h4><span class="label public">public</span>getGlobals<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered Globals.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of globals</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLexer"/>
            <h4><span class="label public">public</span>getLexer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Lexer instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_LexerInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLoader"/>
            <h4><span class="label public">public</span>getLoader<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Loader instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_LoaderInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNodeVisitors"/>
            <h4><span class="label public">public</span>getNodeVisitors<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered Node Visitors.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Twig_NodeVisitorInterface instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getParser"/>
            <h4><span class="label public">public</span>getParser<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Parser instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_ParserInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTags"/>
            <h4><span class="label public">public</span>getTags<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets registered tags.<pre>Be warned that this method cannot return tags defined by Twig_TokenParserBrokerInterface classes.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Twig_TokenParserInterface instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTemplateClass"/>
            <h4><span class="label public">public</span>getTemplateClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">integer</span><strong> $index</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the template class associated with the given string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name for which to calculate the template class name</li>
                <li><code>$index</code> - The index if it is an embedded template</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The template class name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTemplateClassPrefix"/>
            <h4><span class="label public">public</span>getTemplateClassPrefix<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the template class prefix.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The template class prefix</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTest"/>
            <h4><span class="label public">public</span>getTest<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a test by name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The test name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_Test instance or false if the test does not exist</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTests"/>
            <h4><span class="label public">public</span>getTests<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered Tests.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of Twig_TestInterface instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTokenParsers"/>
            <h4><span class="label public">public</span>getTokenParsers<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered Token Parsers.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A broker containing token parsers</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUnaryOperators"/>
            <h4><span class="label public">public</span>getUnaryOperators<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered unary Operators.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of unary operators</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasExtension"/>
            <h4><span class="label public">public</span>hasExtension<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the given extension is registered.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The extension name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the extension is registered or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initRuntime"/>
            <h4><span class="label public">public</span>initRuntime<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes the runtime environment.</li>
            </p>
          </li>
          <li>
            <a name="isAutoReload"/>
            <h4><span class="label public">public</span>isAutoReload<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the auto_reload option is enabled.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if auto_reload is enabled, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isDebug"/>
            <h4><span class="label public">public</span>isDebug<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if debug mode is enabled.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if debug mode is enabled, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isStrictVariables"/>
            <h4><span class="label public">public</span>isStrictVariables<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the strict_variables option is enabled.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if strict_variables is enabled, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isTemplateFresh"/>
            <h4><span class="label public">public</span>isTemplateFresh<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><span title="timestamp">timestamp</span></span><strong> $time</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the template is still fresh.<pre>Besides checking the loader for freshness information,
this method also checks if the enabled extensions have
not changed.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The template name</li>
                <li><code>$time</code> - The last modification time of the cached template</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the template is fresh, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadTemplate"/>
            <h4><span class="label public">public</span>loadTemplate<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">integer</span><strong> $index</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads a template by name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The template name</li>
                <li><code>$index</code> - The index if it is an embedded template</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A template instance representing the given template name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="mergeGlobals"/>
            <h4><span class="label public">public</span>mergeGlobals<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $context</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Merges a context with the defined globals.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$context</code> - An array representing the context</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The context merged with the globals</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parse"/>
            <h4><span class="label public">public</span>parse<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_TokenStream">Twig_TokenStream</span></span><strong> $tokens</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parses a token stream.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tokens</code> - A Twig_TokenStream instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Node tree</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerUndefinedFilterCallback"/>
            <h4><span class="label public">public</span>registerUndefinedFilterCallback<span style="font-size:90%;">( <span class="param-type"/><strong> $callable</strong> )</span></h4>
          </li>
          <li>
            <a name="registerUndefinedFunctionCallback"/>
            <h4><span class="label public">public</span>registerUndefinedFunctionCallback<span style="font-size:90%;">( <span class="param-type"/><strong> $callable</strong> )</span></h4>
          </li>
          <li>
            <a name="removeExtension"/>
            <h4><span class="label public">public</span>removeExtension<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes an extension by name.<pre>This method is deprecated and you should not use it.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The extension name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="render"/>
            <h4><span class="label public">public</span>render<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">Array</span><strong> $context</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Renders a template.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The template name</li>
                <li><code>$context</code> - An array of parameters to pass to the template</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The rendered template</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resolveTemplate"/>
            <h4><span class="label public">public</span>resolveTemplate<span style="font-size:90%;">( <span class="param-type"/><strong> $names</strong> )</span></h4>
          </li>
          <li>
            <a name="setBaseTemplateClass"/>
            <h4><span class="label public">public</span>setBaseTemplateClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the base template class for compiled templates.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The base template class name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCache"/>
            <h4><span class="label public">public</span>setCache<span style="font-size:90%;">( <span class="param-type"><span title="string|false">string|false</span></span><strong> $cache</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the cache directory or false if cache is disabled.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$cache</code> - The absolute path to the compiled templates,</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCharset"/>
            <h4><span class="label public">public</span>setCharset<span style="font-size:90%;">( <span class="param-type">string</span><strong> $charset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the default template charset.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$charset</code> - The default charset</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCompiler"/>
            <h4><span class="label public">public</span>setCompiler<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_CompilerInterface">Twig_CompilerInterface</span></span><strong> $compiler</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Compiler instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$compiler</code> - A Twig_CompilerInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setExtensions"/>
            <h4><span class="label public">public</span>setExtensions<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $extensions</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers an array of extensions.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$extensions</code> - An array of extensions</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLexer"/>
            <h4><span class="label public">public</span>setLexer<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_LexerInterface">Twig_LexerInterface</span></span><strong> $lexer</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Lexer instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>A</code> - Twig_LexerInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLoader"/>
            <h4><span class="label public">public</span>setLoader<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_LoaderInterface">Twig_LoaderInterface</span></span><strong> $loader</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Loader instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$loader</code> - A Twig_LoaderInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParser"/>
            <h4><span class="label public">public</span>setParser<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_ParserInterface">Twig_ParserInterface</span></span><strong> $parser</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Parser instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>A</code> - Twig_ParserInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="tokenize"/>
            <h4><span class="label public">public</span>tokenize<span style="font-size:90%;">( <span class="param-type">string</span><strong> $source</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tokenizes a source code.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$source</code> - The template source code</li>
                <li><code>$name</code> - The template name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Twig_TokenStream instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initExtension"/>
            <h4><span class="label protected">protected</span>initExtension<span style="font-size:90%;">( <span class="param-type"><span title="\\Twig_ExtensionInterface">Twig_ExtensionInterface</span></span><strong> $extension</strong> )</span></h4>
          </li>
          <li>
            <a name="initExtensions"/>
            <h4><span class="label protected">protected</span>initExtensions<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="initGlobals"/>
            <h4><span class="label protected">protected</span>initGlobals<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="writeCacheFile"/>
            <h4><span class="label protected">protected</span>writeCacheFile<span style="font-size:90%;">( <span class="param-type"/><strong> $file</strong>, <span class="param-type"/><strong> $content</strong> )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
