<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Console\Event\ConsoleExceptionEvent - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#exception">$exception</a>
          </li>
          <li>
            <a href="#exitCode">$exitCode</a>
          </li>
          <li>
            <a href="#command">$command</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#getCommand">getCommand</a>
          </li>
          <li>
            <a href="#getDispatcher">getDispatcher</a>
          </li>
          <li>
            <a href="#getException">getException</a>
          </li>
          <li>
            <a href="#getExitCode">getExitCode</a>
          </li>
          <li>
            <a href="#getInput">getInput</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getOutput">getOutput</a>
          </li>
          <li>
            <a href="#isPropagationStopped">isPropagationStopped</a>
          </li>
          <li>
            <a href="#setDispatcher">setDispatcher</a>
          </li>
          <li>
            <a href="#setException">setException</a>
          </li>
          <li>
            <a href="#setName">setName</a>
          </li>
          <li>
            <a href="#stopPropagation">stopPropagation</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Console\Event\</span>ConsoleExceptionEvent</h2>
        <div class="file-notice">
          <p>Allows to handle exception thrown in a command.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="exception"/>
            <h4><span class="label private">private</span>
                $exception</h4>
          </li>
          <li>
            <a name="exitCode"/>
            <h4><span class="label private">private</span>
                $exitCode</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Console_Command_Command.xhtml">Symfony\Component\Console\Command\Command</a></span><strong> $command</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Console_Input_InputInterface.xhtml">Symfony\Component\Console\Input\InputInterface</a></span><strong> $input</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Console_Output_OutputInterface.xhtml">Symfony\Component\Console\Output\OutputInterface</a></span><strong> $output</strong>, <span class="param-type"><a href="../classes/Exception.xhtml">Exception</a></span><strong> $exception</strong>, <span class="param-type"/><strong> $exitCode</strong> )</span></h4>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getCommand"/>
            <h4><span class="label public">public</span>getCommand<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the command that is executed.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Command instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDispatcher"/>
            <h4><span class="label public">public</span>getDispatcher<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the EventDispatcher that dispatches this Event</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getException"/>
            <h4><span class="label public">public</span>getException<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the thrown exception.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The thrown exception</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExitCode"/>
            <h4><span class="label public">public</span>getExitCode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the exit code.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The command exit code</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInput"/>
            <h4><span class="label public">public</span>getInput<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the input instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An InputInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the event's name.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOutput"/>
            <h4><span class="label public">public</span>getOutput<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the output instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An OutputInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isPropagationStopped"/>
            <h4><span class="label public">public</span>isPropagationStopped<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether further event listeners should be triggered.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether propagation was already stopped for this event.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDispatcher"/>
            <h4><span class="label public">public</span>setDispatcher<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_EventDispatcher_EventDispatcherInterface.xhtml">Symfony\Component\EventDispatcher\EventDispatcherInterface</a></span><strong> $dispatcher</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Stores the EventDispatcher that dispatches this Event</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dispatcher</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setException"/>
            <h4><span class="label public">public</span>setException<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Exception.xhtml">Exception</a></span><strong> $exception</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Replaces the thrown exception.<pre>This exception will be thrown if no response is set in the event.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$exception</code> - The thrown exception</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setName"/>
            <h4><span class="label public">public</span>setName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the event's name property.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The event name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="stopPropagation"/>
            <h4><span class="label public">public</span>stopPropagation<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Stops the propagation of the event to further event listeners.<pre>If multiple event listeners are connected to the same event, no
further event listener will be triggered once any trigger calls
stopPropagation().</pre></li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
