<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Config\Definition\ArrayNode - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#xmlRemappings">$xmlRemappings</a>
          </li>
          <li>
            <a href="#children">$children</a>
          </li>
          <li>
            <a href="#allowFalse">$allowFalse</a>
          </li>
          <li>
            <a href="#allowNewKeys">$allowNewKeys</a>
          </li>
          <li>
            <a href="#addIfNotSet">$addIfNotSet</a>
          </li>
          <li>
            <a href="#performDeepMerging">$performDeepMerging</a>
          </li>
          <li>
            <a href="#ignoreExtraKeys">$ignoreExtraKeys</a>
          </li>
          <li>
            <a href="#normalizeKeys">$normalizeKeys</a>
          </li>
          <li>
            <a href="#name">$name</a>
          </li>
          <li>
            <a href="#parent">$parent</a>
          </li>
          <li>
            <a href="#normalizationClosures">$normalizationClosures</a>
          </li>
          <li>
            <a href="#finalValidationClosures">$finalValidationClosures</a>
          </li>
          <li>
            <a href="#allowOverwrite">$allowOverwrite</a>
          </li>
          <li>
            <a href="#required">$required</a>
          </li>
          <li>
            <a href="#equivalentValues">$equivalentValues</a>
          </li>
          <li>
            <a href="#attributes">$attributes</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addChild">addChild</a>
          </li>
          <li>
            <a href="#addEquivalentValue">addEquivalentValue</a>
          </li>
          <li>
            <a href="#finalize">finalize</a>
          </li>
          <li>
            <a href="#finalizeValue">finalizeValue</a>
          </li>
          <li>
            <a href="#finalizeValue">finalizeValue</a>
          </li>
          <li>
            <a href="#getAttribute">getAttribute</a>
          </li>
          <li>
            <a href="#getAttributes">getAttributes</a>
          </li>
          <li>
            <a href="#getChildren">getChildren</a>
          </li>
          <li>
            <a href="#getDefaultValue">getDefaultValue</a>
          </li>
          <li>
            <a href="#getExample">getExample</a>
          </li>
          <li>
            <a href="#getInfo">getInfo</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getPath">getPath</a>
          </li>
          <li>
            <a href="#hasAttribute">hasAttribute</a>
          </li>
          <li>
            <a href="#hasDefaultValue">hasDefaultValue</a>
          </li>
          <li>
            <a href="#isRequired">isRequired</a>
          </li>
          <li>
            <a href="#merge">merge</a>
          </li>
          <li>
            <a href="#mergeValues">mergeValues</a>
          </li>
          <li>
            <a href="#mergeValues">mergeValues</a>
          </li>
          <li>
            <a href="#normalize">normalize</a>
          </li>
          <li>
            <a href="#normalizeValue">normalizeValue</a>
          </li>
          <li>
            <a href="#normalizeValue">normalizeValue</a>
          </li>
          <li>
            <a href="#preNormalize">preNormalize</a>
          </li>
          <li>
            <a href="#preNormalize">preNormalize</a>
          </li>
          <li>
            <a href="#remapXml">remapXml</a>
          </li>
          <li>
            <a href="#removeAttribute">removeAttribute</a>
          </li>
          <li>
            <a href="#setAddIfNotSet">setAddIfNotSet</a>
          </li>
          <li>
            <a href="#setAllowFalse">setAllowFalse</a>
          </li>
          <li>
            <a href="#setAllowNewKeys">setAllowNewKeys</a>
          </li>
          <li>
            <a href="#setAllowOverwrite">setAllowOverwrite</a>
          </li>
          <li>
            <a href="#setAttribute">setAttribute</a>
          </li>
          <li>
            <a href="#setAttributes">setAttributes</a>
          </li>
          <li>
            <a href="#setExample">setExample</a>
          </li>
          <li>
            <a href="#setFinalValidationClosures">setFinalValidationClosures</a>
          </li>
          <li>
            <a href="#setIgnoreExtraKeys">setIgnoreExtraKeys</a>
          </li>
          <li>
            <a href="#setInfo">setInfo</a>
          </li>
          <li>
            <a href="#setName">setName</a>
          </li>
          <li>
            <a href="#setNormalizationClosures">setNormalizationClosures</a>
          </li>
          <li>
            <a href="#setNormalizeKeys">setNormalizeKeys</a>
          </li>
          <li>
            <a href="#setPerformDeepMerging">setPerformDeepMerging</a>
          </li>
          <li>
            <a href="#setRequired">setRequired</a>
          </li>
          <li>
            <a href="#setXmlRemappings">setXmlRemappings</a>
          </li>
          <li>
            <a href="#validateType">validateType</a>
          </li>
          <li>
            <a href="#validateType">validateType</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Config\Definition\</span>ArrayNode</h2>
        <div class="file-notice">
          <p>Represents an Array node in the config tree.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Symfony_Component_Config_Definition_PrototypeNodeInterface.xhtml">Symfony\Component\Config\Definition\PrototypeNodeInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="xmlRemappings"/>
            <h4><span class="label protected">protected</span>
                $xmlRemappings</h4>
          </li>
          <li>
            <a name="children"/>
            <h4><span class="label protected">protected</span>
                $children</h4>
          </li>
          <li>
            <a name="allowFalse"/>
            <h4><span class="label protected">protected</span>
                $allowFalse</h4>
          </li>
          <li>
            <a name="allowNewKeys"/>
            <h4><span class="label protected">protected</span>
                $allowNewKeys</h4>
          </li>
          <li>
            <a name="addIfNotSet"/>
            <h4><span class="label protected">protected</span>
                $addIfNotSet</h4>
          </li>
          <li>
            <a name="performDeepMerging"/>
            <h4><span class="label protected">protected</span>
                $performDeepMerging</h4>
          </li>
          <li>
            <a name="ignoreExtraKeys"/>
            <h4><span class="label protected">protected</span>
                $ignoreExtraKeys</h4>
          </li>
          <li>
            <a name="normalizeKeys"/>
            <h4><span class="label protected">protected</span>
                $normalizeKeys</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_NodeInterface.xhtml">Symfony\Component\Config\Definition\NodeInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The Node's name</li>
                <li><code>$parent</code> - The node parent</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addChild"/>
            <h4><span class="label public">public</span>addChild<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Definition_NodeInterface.xhtml">Symfony\Component\Config\Definition\NodeInterface</a></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a child node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - The child node to add</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException when the child node has no name</code>
                </li>
                <li>
                  <code>\InvalidArgumentException when the child node's name is not unique</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addEquivalentValue"/>
            <h4><span class="label public">public</span>addEquivalentValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $originalValue</strong>, <span class="param-type">mixed</span><strong> $equivalentValue</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an equivalent value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$originalValue</code> - </li>
                <li><code>$equivalentValue</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="finalize"/>
            <h4><span class="label true">true</span><span class="label public">public</span>finalize<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finalizes a value, applying all finalization closures.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to finalize</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The finalized value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidConfigurationException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttribute"/>
            <h4><span class="label public">public</span>getAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $key</strong>, <span class="param-type"/><strong> $default</strong> )</span></h4>
          </li>
          <li>
            <a name="getAttributes"/>
            <h4><span class="label public">public</span>getAttributes<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="getChildren"/>
            <h4><span class="label public">public</span>getChildren<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the children of this node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The children</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDefaultValue"/>
            <h4><span class="label public">public</span>getDefaultValue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The default value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException if the node has no default value</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExample"/>
            <h4><span class="label public">public</span>getExample<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the example configuration for this node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The example</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInfo"/>
            <h4><span class="label public">public</span>getInfo<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns info message.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The info text</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the name of this node</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Node's name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPath"/>
            <h4><span class="label public">public</span>getPath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the path of this node.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Node's path</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasAttribute"/>
            <h4><span class="label public">public</span>hasAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $key</strong> )</span></h4>
          </li>
          <li>
            <a name="hasDefaultValue"/>
            <h4><span class="label public">public</span>hasDefaultValue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the node has a default value.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRequired"/>
            <h4><span class="label public">public</span>isRequired<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if this node is required.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="merge"/>
            <h4><span class="label true">true</span><span class="label public">public</span>merge<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $leftSide</strong>, <span class="param-type">mixed</span><strong> $rightSide</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Merges two values together.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$leftSide</code> - </li>
                <li><code>$rightSide</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The merged value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ForbiddenOverwriteException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalize"/>
            <h4><span class="label true">true</span><span class="label public">public</span>normalize<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes a value, applying all normalization closures.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - Value to normalize.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized value.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeAttribute"/>
            <h4><span class="label public">public</span>removeAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $key</strong> )</span></h4>
          </li>
          <li>
            <a name="setAddIfNotSet"/>
            <h4><span class="label public">public</span>setAddIfNotSet<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether to add default values for this array if it has not been defined in any of the configuration files.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAllowFalse"/>
            <h4><span class="label public">public</span>setAllowFalse<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $allow</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether false is allowed as value indicating that the array should be unset.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$allow</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAllowNewKeys"/>
            <h4><span class="label public">public</span>setAllowNewKeys<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $allow</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether new keys can be defined in subsequent configurations.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$allow</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAllowOverwrite"/>
            <h4><span class="label public">public</span>setAllowOverwrite<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $allow</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets if this node can be overridden.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$allow</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttribute"/>
            <h4><span class="label public">public</span>setAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $key</strong>, <span class="param-type"/><strong> $value</strong> )</span></h4>
          </li>
          <li>
            <a name="setAttributes"/>
            <h4><span class="label public">public</span>setAttributes<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $attributes</strong> )</span></h4>
          </li>
          <li>
            <a name="setExample"/>
            <h4><span class="label public">public</span>setExample<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $example</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the example configuration for this node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$example</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFinalValidationClosures"/>
            <h4><span class="label public">public</span>setFinalValidationClosures<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $closures</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the closures used for final validation.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$closures</code> - An array of Closures used for final validation</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setIgnoreExtraKeys"/>
            <h4><span class="label public">public</span>setIgnoreExtraKeys<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether extra keys should just be ignore without an exception.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - To allow extra keys</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setInfo"/>
            <h4><span class="label public">public</span>setInfo<span style="font-size:90%;">( <span class="param-type">string</span><strong> $info</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets an info message.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$info</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setName"/>
            <h4><span class="label public">public</span>setName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the node Name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The node's name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNormalizationClosures"/>
            <h4><span class="label public">public</span>setNormalizationClosures<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $closures</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the closures used for normalization.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$closures</code> - An array of Closures used for normalization</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNormalizeKeys"/>
            <h4><span class="label public">public</span>setNormalizeKeys<span style="font-size:90%;">( <span class="param-type"/><strong> $normalizeKeys</strong> )</span></h4>
          </li>
          <li>
            <a name="setPerformDeepMerging"/>
            <h4><span class="label public">public</span>setPerformDeepMerging<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets if deep merging should occur.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRequired"/>
            <h4><span class="label public">public</span>setRequired<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $boolean</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set this node as required.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$boolean</code> - Required node</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setXmlRemappings"/>
            <h4><span class="label public">public</span>setXmlRemappings<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $remappings</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the xml remappings that should be performed.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$remappings</code> - an array of the form array(array(string, string))</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="finalizeValue"/>
            <h4><span class="label protected">protected</span>finalizeValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finalizes the value of this node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The finalised value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>UnsetKeyException</code>
                </li>
                <li>
                  <code>InvalidConfigurationException if the node doesn't have enough children</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="finalizeValue"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>finalizeValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finalizes a value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to finalize</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The finalized value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="mergeValues"/>
            <h4><span class="label protected">protected</span>mergeValues<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $leftSide</strong>, <span class="param-type">mixed</span><strong> $rightSide</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Merges values together.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$leftSide</code> - The left side to merge.</li>
                <li><code>$rightSide</code> - The right side to merge.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The merged values</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidConfigurationException</code>
                </li>
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="mergeValues"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>mergeValues<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $leftSide</strong>, <span class="param-type">mixed</span><strong> $rightSide</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Merges two values together.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$leftSide</code> - </li>
                <li><code>$rightSide</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The merged value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeValue"/>
            <h4><span class="label protected">protected</span>normalizeValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes the value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to normalize</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidConfigurationException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeValue"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>normalizeValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes the value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to normalize.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="preNormalize"/>
            <h4><span class="label protected">protected</span>preNormalize<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes keys between the different configuration formats.<pre>Namely, you mostly have foo_bar in YAML while you have foo-bar in XML.
After running this method, all keys are normalized to foo_bar.

If you have a mixed key like foo-bar_moo, it will not be altered.
The key will also not be altered if the target key already exists.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The value with normalized keys</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="preNormalize"/>
            <h4><span class="label protected">protected</span>preNormalize<span style="font-size:90%;">( <span class="param-type"/><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes the value before any other normalization is applied.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized array value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remapXml"/>
            <h4><span class="label protected">protected</span>remapXml<span style="font-size:90%;">( <span class="param-type">array</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Remaps multiple singular values to a single plural value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The source values</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The remapped values</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validateType"/>
            <h4><span class="label protected">protected</span>validateType<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Validates the type of the value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidTypeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="validateType"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>validateType<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Validates the type of a Node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to validate</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidTypeException when the value is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
