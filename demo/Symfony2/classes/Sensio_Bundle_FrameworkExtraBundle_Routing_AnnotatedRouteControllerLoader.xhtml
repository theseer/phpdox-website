<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addRoute">addRoute</a>
          </li>
          <li>
            <a href="#configureRoute">configureRoute</a>
          </li>
          <li>
            <a href="#configureRoute">configureRoute</a>
          </li>
          <li>
            <a href="#getDefaultRouteName">getDefaultRouteName</a>
          </li>
          <li>
            <a href="#getDefaultRouteName">getDefaultRouteName</a>
          </li>
          <li>
            <a href="#getResolver">getResolver</a>
          </li>
          <li>
            <a href="#load">load</a>
          </li>
          <li>
            <a href="#setResolver">setResolver</a>
          </li>
          <li>
            <a href="#setRouteAnnotationClass">setRouteAnnotationClass</a>
          </li>
          <li>
            <a href="#supports">supports</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Sensio\Bundle\FrameworkExtraBundle\Routing\</span>AnnotatedRouteControllerLoader</h2>
        <div class="file-notice">
          <p>AnnotatedRouteControllerLoader is an implementation of AnnotationClassLoader that sets the '_controller' default based on the class and method names.</p>
          <p>
            <pre>It also parse the @Method annotation.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Doctrine_Common_Annotations_Reader.xhtml">Doctrine\Common\Annotations\Reader</a></span><strong> $reader</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$reader</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getResolver"/>
            <h4><span class="label public">public</span>getResolver<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="load"/>
            <h4><span class="label public">public</span>load<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong>, <span class="param-type"><span title="string|null">string|null</span></span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads from annotations from a class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - A class name</li>
                <li><code>$type</code> - The resource type</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A RouteCollection instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When route can't be parsed</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setResolver"/>
            <h4><span class="label public">public</span>setResolver<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Loader_LoaderResolverInterface.xhtml">Symfony\Component\Config\Loader\LoaderResolverInterface</a></span><strong> $resolver</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="setRouteAnnotationClass"/>
            <h4><span class="label public">public</span>setRouteAnnotationClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the annotation class to read route properties from.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - A fully-qualified class name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="supports"/>
            <h4><span class="label public">public</span>supports<span style="font-size:90%;">( <span class="param-type"/><strong> $resource</strong>, <span class="param-type"/><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritdoc}</li>
            </p>
          </li>
          <li>
            <a name="addRoute"/>
            <h4><span class="label protected">protected</span>addRoute<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_RouteCollection.xhtml">Symfony\Component\Routing\RouteCollection</a></span><strong> $collection</strong>, <span class="param-type"/><strong> $annot</strong>, <span class="param-type"/><strong> $globals</strong>, <span class="param-type"><a href="../classes/ReflectionClass.xhtml">ReflectionClass</a></span><strong> $class</strong>, <span class="param-type"><a href="../classes/ReflectionMethod.xhtml">ReflectionMethod</a></span><strong> $method</strong> )</span></h4>
          </li>
          <li>
            <a name="configureRoute"/>
            <h4><span class="label protected">protected</span>configureRoute<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_Route.xhtml">Symfony\Component\Routing\Route</a></span><strong> $route</strong>, <span class="param-type"><a href="../classes/ReflectionClass.xhtml">ReflectionClass</a></span><strong> $class</strong>, <span class="param-type"><a href="../classes/ReflectionMethod.xhtml">ReflectionMethod</a></span><strong> $method</strong>, <span class="param-type">mixed</span><strong> $annot</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Configures the _controller default parameter and eventually the _method requirement of a given Route instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$route</code> - A route instance</li>
                <li><code>$class</code> - A ReflectionClass instance</li>
                <li><code>$method</code> - A ReflectionClass method</li>
                <li><code>$annot</code> - The annotation class instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\LogicException When the service option is specified on a method</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="configureRoute"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>configureRoute<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_Route.xhtml">Symfony\Component\Routing\Route</a></span><strong> $route</strong>, <span class="param-type"><a href="../classes/ReflectionClass.xhtml">ReflectionClass</a></span><strong> $class</strong>, <span class="param-type"><a href="../classes/ReflectionMethod.xhtml">ReflectionMethod</a></span><strong> $method</strong>, <span class="param-type"/><strong> $annot</strong> )</span></h4>
          </li>
          <li>
            <a name="getDefaultRouteName"/>
            <h4><span class="label protected">protected</span>getDefaultRouteName<span style="font-size:90%;">( <span class="param-type"><a href="../classes/ReflectionClass.xhtml">ReflectionClass</a></span><strong> $class</strong>, <span class="param-type"><a href="../classes/ReflectionMethod.xhtml">ReflectionMethod</a></span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Makes the default route name more sane by removing common keywords.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - A ReflectionClass instance</li>
                <li><code>$method</code> - A ReflectionMethod instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The default route name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDefaultRouteName"/>
            <h4><span class="label protected">protected</span>getDefaultRouteName<span style="font-size:90%;">( <span class="param-type"><a href="../classes/ReflectionClass.xhtml">ReflectionClass</a></span><strong> $class</strong>, <span class="param-type"><a href="../classes/ReflectionMethod.xhtml">ReflectionMethod</a></span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the default route name for a class method.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$method</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
