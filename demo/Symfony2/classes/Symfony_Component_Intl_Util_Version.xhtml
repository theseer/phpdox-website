<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Intl\Util\Version - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#compare">compare</a>
          </li>
          <li>
            <a href="#normalize">normalize</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Intl\Util\</span>Version</h2>
        <div class="file-notice">
          <p>Facilitates the comparison of version strings.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label private">private</span>__construct<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Must not be instantiated.</li>
            </p>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="compare"/>
            <h4><span class="label true">true</span><span class="label public">public</span>compare<span style="font-size:90%;">( <span class="param-type">string</span><strong> $version1</strong>, <span class="param-type">string</span><strong> $version2</strong>, <span class="param-type">string</span><strong> $operator</strong>, <span class="param-type"><span title="integer|null">integer|null</span></span><strong> $precision</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Compares two versions with an operator.<pre>This method is identical to , except that you
can pass the number of regarded version components in the last argument
$precision.
Examples:
    Version::compare('1.2.3', '1.2.4', '==')
    // =&gt; false
    Version::compare('1.2.3', '1.2.4', '==', 2)
    // =&gt; true
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$version1</code> - A version string.</li>
                <li><code>$version2</code> - A version string to compare.</li>
                <li><code>$operator</code> - The comparison operator.</li>
                <li><code>$precision</code> - The number of components to compare. Pass</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the comparison succeeded.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalize"/>
            <h4><span class="label true">true</span><span class="label public">public</span>normalize<span style="font-size:90%;">( <span class="param-type">string</span><strong> $version</strong>, <span class="param-type"><span title="integer|null">integer|null</span></span><strong> $precision</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes a version string to the number of components given in the parameter $precision.<pre>Examples:

    Version::normalize('1.2.3', 1);
    // =&gt; '1'

    Version::normalize('1.2.3', 2);
    // =&gt; '1.2'</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$version</code> - A version string.</li>
                <li><code>$precision</code> - The number of components to include. Pass</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized version or NULL if it couldn't be</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
