<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\ClassLoader\XcacheClassLoader - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#prefix">$prefix</a>
          </li>
          <li>
            <a href="#classFinder">$classFinder</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#findFile">findFile</a>
          </li>
          <li>
            <a href="#loadClass">loadClass</a>
          </li>
          <li>
            <a href="#register">register</a>
          </li>
          <li>
            <a href="#unregister">unregister</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\ClassLoader\</span>XcacheClassLoader</h2>
        <div class="file-notice">
          <p>XcacheClassLoader implements a wrapping autoloader cached in Xcache for PHP 5.3.</p>
          <p>
            <pre>It expects an object implementing a findFile method to find the file. This
allows using it as a wrapper around the other loaders of the component (the
ClassLoader and the UniversalClassLoader for instance) but also around any
other autoloader following this convention (the Composer one for instance)

    $loader = new ClassLoader();

    // register classes with namespaces
    $loader-&gt;add('Symfony\Component', __DIR__.'/component');
    $loader-&gt;add('Symfony',           __DIR__.'/framework');

    $cachedLoader = new XcacheClassLoader('my_prefix', $loader);

    // activate the cached autoloader
    $cachedLoader-&gt;register();

    // eventually deactivate the non-cached loader if it was registered previously
    // to be sure to use the cached one.
    $loader-&gt;unregister();</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Kris Wallsmith &lt;kris@symfony.com&gt;</li>
          <li><b>Author: </b>Kim Hemsø Rasmussen &lt;kimhemsoe@gmail.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="prefix"/>
            <h4><span class="label private">private</span>
                $prefix</h4>
          </li>
          <li>
            <a name="classFinder"/>
            <h4><span class="label private">private</span>
                $classFinder</h4>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong>, <span class="param-type">invalid method call</span><strong> $classFinder</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - A prefix to create a namespace in Xcache</li>
                <li><code>$classFinder</code> - An object that implements findFile() method.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
                <li>
                  <code>\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="findFile"/>
            <h4><span class="label public">public</span>findFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds a file by class name while caching lookups to Xcache.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - A class name to resolve to file</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadClass"/>
            <h4><span class="label public">public</span>loadClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads the given class or interface.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - The name of the class</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>True, if loaded</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="register"/>
            <h4><span class="label public">public</span>register<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $prepend</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers this instance as an autoloader.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prepend</code> - Whether to prepend the autoloader or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unregister"/>
            <h4><span class="label public">public</span>unregister<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unregisters this instance as an autoloader.</li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
