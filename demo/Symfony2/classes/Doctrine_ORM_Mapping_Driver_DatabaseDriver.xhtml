<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\ORM\Mapping\Driver\DatabaseDriver - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#_sm">$_sm</a>
          </li>
          <li>
            <a href="#tables">$tables</a>
          </li>
          <li>
            <a href="#classToTableNames">$classToTableNames</a>
          </li>
          <li>
            <a href="#manyToManyTables">$manyToManyTables</a>
          </li>
          <li>
            <a href="#classNamesForTables">$classNamesForTables</a>
          </li>
          <li>
            <a href="#fieldNamesForColumns">$fieldNamesForColumns</a>
          </li>
          <li>
            <a href="#namespace">$namespace</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#getAllClassNames">getAllClassNames</a>
          </li>
          <li>
            <a href="#getClassNameForTable">getClassNameForTable</a>
          </li>
          <li>
            <a href="#getFieldNameForColumn">getFieldNameForColumn</a>
          </li>
          <li>
            <a href="#isTransient">isTransient</a>
          </li>
          <li>
            <a href="#loadMetadataForClass">loadMetadataForClass</a>
          </li>
          <li>
            <a href="#reverseEngineerMappingFromDatabase">reverseEngineerMappingFromDatabase</a>
          </li>
          <li>
            <a href="#setClassNameForTable">setClassNameForTable</a>
          </li>
          <li>
            <a href="#setFieldNameForColumn">setFieldNameForColumn</a>
          </li>
          <li>
            <a href="#setNamespace">setNamespace</a>
          </li>
          <li>
            <a href="#setTables">setTables</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\ORM\Mapping\Driver\</span>DatabaseDriver</h2>
        <div class="file-notice">
          <p>The DatabaseDriver reverse engineers the mapping metadata from a database.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;</li>
          <li><b>Author: </b>Jonathan Wage &lt;jonwage@gmail.com&gt;</li>
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Doctrine_Common_Persistence_Mapping_Driver_MappingDriver.xhtml">Doctrine\Common\Persistence\Mapping\Driver\MappingDriver</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="_sm"/>
            <h4><span class="label private">private</span>object 
                
                $_sm</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="tables"/>
            <h4><span class="label private">private</span>array 
                
                $tables</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="classToTableNames"/>
            <h4><span class="label private">private</span>
                $classToTableNames</h4>
          </li>
          <li>
            <a name="manyToManyTables"/>
            <h4><span class="label private">private</span>array 
                
                $manyToManyTables</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="classNamesForTables"/>
            <h4><span class="label private">private</span>array 
                
                $classNamesForTables</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="fieldNamesForColumns"/>
            <h4><span class="label private">private</span>array 
                
                $fieldNamesForColumns</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="namespace"/>
            <h4><span class="label private">private</span>string 
                
                $namespace</h4>
            <ul class="varlist">
              <li>The namespace for the generated entities.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Doctrine_DBAL_Schema_AbstractSchemaManager.xhtml">Doctrine\DBAL\Schema\AbstractSchemaManager</a></span><strong> $schemaManager</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$schemaManager</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getAllClassNames"/>
            <h4><span class="label public">public</span>getAllClassNames<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="isTransient"/>
            <h4><span class="label public">public</span>isTransient<span style="font-size:90%;">( <span class="param-type"/><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="loadMetadataForClass"/>
            <h4><span class="label public">public</span>loadMetadataForClass<span style="font-size:90%;">( <span class="param-type"/><strong> $className</strong>, <span class="param-type"><a href="../interfaces/Doctrine_Common_Persistence_Mapping_ClassMetadata.xhtml">Doctrine\Common\Persistence\Mapping\ClassMetadata</a></span><strong> $metadata</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}</li>
            </p>
          </li>
          <li>
            <a name="setClassNameForTable"/>
            <h4><span class="label public">public</span>setClassNameForTable<span style="font-size:90%;">( <span class="param-type">string</span><strong> $tableName</strong>, <span class="param-type">string</span><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set class name for a table.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tableName</code> - </li>
                <li><code>$className</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFieldNameForColumn"/>
            <h4><span class="label public">public</span>setFieldNameForColumn<span style="font-size:90%;">( <span class="param-type">string</span><strong> $tableName</strong>, <span class="param-type">string</span><strong> $columnName</strong>, <span class="param-type">string</span><strong> $fieldName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set field name for a column on a specific table.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tableName</code> - </li>
                <li><code>$columnName</code> - </li>
                <li><code>$fieldName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNamespace"/>
            <h4><span class="label public">public</span>setNamespace<span style="font-size:90%;">( <span class="param-type">string</span><strong> $namespace</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the namespace for the generated entities.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$namespace</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTables"/>
            <h4><span class="label public">public</span>setTables<span style="font-size:90%;">( <span class="param-type">array</span><strong> $entityTables</strong>, <span class="param-type">array</span><strong> $manyToManyTables</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set tables manually instead of relying on the reverse engeneering capabilities of SchemaManager.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$entityTables</code> - </li>
                <li><code>$manyToManyTables</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClassNameForTable"/>
            <h4><span class="label private">private</span>getClassNameForTable<span style="font-size:90%;">( <span class="param-type">string</span><strong> $tableName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the mapped class name for a table if it exists. Otherwise return "classified" version.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tableName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFieldNameForColumn"/>
            <h4><span class="label private">private</span>getFieldNameForColumn<span style="font-size:90%;">( <span class="param-type">string</span><strong> $tableName</strong>, <span class="param-type">string</span><strong> $columnName</strong>, <span class="param-type">boolean</span><strong> $fk</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the mapped field name for a column, if it exists. Otherwise return camelized version.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tableName</code> - </li>
                <li><code>$columnName</code> - </li>
                <li><code>$fk</code> - Whether the column is a foreignkey or not.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="reverseEngineerMappingFromDatabase"/>
            <h4><span class="label private">private</span>reverseEngineerMappingFromDatabase<span style="font-size:90%;">(  )</span></h4>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
