<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Yaml\Inline - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#REGEX_QUOTED_STRING">REGEX_QUOTED_STRING</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#exceptionOnInvalidType">$exceptionOnInvalidType</a>
          </li>
          <li>
            <a href="#objectSupport">$objectSupport</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#dump">dump</a>
          </li>
          <li>
            <a href="#dumpArray">dumpArray</a>
          </li>
          <li>
            <a href="#evaluateScalar">evaluateScalar</a>
          </li>
          <li>
            <a href="#getTimestampRegex">getTimestampRegex</a>
          </li>
          <li>
            <a href="#parse">parse</a>
          </li>
          <li>
            <a href="#parseMapping">parseMapping</a>
          </li>
          <li>
            <a href="#parseQuotedScalar">parseQuotedScalar</a>
          </li>
          <li>
            <a href="#parseScalar">parseScalar</a>
          </li>
          <li>
            <a href="#parseSequence">parseSequence</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Yaml\</span>Inline</h2>
        <div class="file-notice">
          <p>Inline implements a YAML parser/dumper for the YAML inline syntax.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="REGEX_QUOTED_STRING"/>REGEX_QUOTED_STRING = '(?:"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'([^\']*(?:\'\'[^\']*)*)\')'<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="exceptionOnInvalidType"/>
            <h4><span class="label private">private</span>
                $exceptionOnInvalidType</h4>
          </li>
          <li>
            <a name="objectSupport"/>
            <h4><span class="label private">private</span>
                $objectSupport</h4>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="dump"/>
            <h4><span class="label true">true</span><span class="label public">public</span>dump<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $exceptionOnInvalidType</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $objectSupport</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Dumps a given PHP variable to a YAML string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The PHP variable to convert</li>
                <li><code>$exceptionOnInvalidType</code> - true if an exception must be thrown on invalid types (a PHP resource or object), false otherwise</li>
                <li><code>$objectSupport</code> - true if object support is enabled, false otherwise</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The YAML string representing the PHP array</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>DumpException When trying to dump PHP resource</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parse"/>
            <h4><span class="label true">true</span><span class="label public">public</span>parse<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $exceptionOnInvalidType</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $objectSupport</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts a YAML string to a PHP array.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - A YAML string</li>
                <li><code>$exceptionOnInvalidType</code> - true if an exception must be thrown on invalid types (a PHP resource or object), false otherwise</li>
                <li><code>$objectSupport</code> - true if object support is enabled, false otherwise</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A PHP array representing the YAML string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ParseException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseScalar"/>
            <h4><span class="label true">true</span><span class="label public">public</span>parseScalar<span style="font-size:90%;">( <span class="param-type"><span title="scalar">scalar</span></span><strong> $scalar</strong>, <span class="param-type">string</span><strong> $delimiters</strong>, <span class="param-type">Array</span><strong> $stringDelimiters</strong>, <span class="param-type">integer</span><strong> &amp;$i</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $evaluate</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parses a scalar to a YAML string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$scalar</code> - </li>
                <li><code>$delimiters</code> - </li>
                <li><code>$stringDelimiters</code> - </li>
                <li><code>&amp;$i</code> - </li>
                <li><code>$evaluate</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A YAML string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ParseException When malformed inline YAML string is parsed</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="dumpArray"/>
            <h4><span class="label true">true</span><span class="label private">private</span>dumpArray<span style="font-size:90%;">( <span class="param-type">array</span><strong> $value</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $exceptionOnInvalidType</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $objectSupport</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Dumps a PHP array to a YAML string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The PHP array to dump</li>
                <li><code>$exceptionOnInvalidType</code> - true if an exception must be thrown on invalid types (a PHP resource or object), false otherwise</li>
                <li><code>$objectSupport</code> - true if object support is enabled, false otherwise</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The YAML string representing the PHP array</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="evaluateScalar"/>
            <h4><span class="label true">true</span><span class="label private">private</span>evaluateScalar<span style="font-size:90%;">( <span class="param-type">string</span><strong> $scalar</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Evaluates scalars and replaces magic values.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$scalar</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A YAML string</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTimestampRegex"/>
            <h4><span class="label true">true</span><span class="label private">private</span>getTimestampRegex<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a regex that matches a YAML date.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The regular expression</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseMapping"/>
            <h4><span class="label true">true</span><span class="label private">private</span>parseMapping<span style="font-size:90%;">( <span class="param-type">string</span><strong> $mapping</strong>, <span class="param-type">integer</span><strong> &amp;$i</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parses a mapping to a YAML string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$mapping</code> - </li>
                <li><code>&amp;$i</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A YAML string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ParseException When malformed inline YAML string is parsed</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseQuotedScalar"/>
            <h4><span class="label true">true</span><span class="label private">private</span>parseQuotedScalar<span style="font-size:90%;">( <span class="param-type">string</span><strong> $scalar</strong>, <span class="param-type"/><strong> &amp;$i</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parses a quoted scalar to YAML.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$scalar</code> - </li>
                <li><code>&amp;$i</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A YAML string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ParseException When malformed inline YAML string is parsed</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseSequence"/>
            <h4><span class="label true">true</span><span class="label private">private</span>parseSequence<span style="font-size:90%;">( <span class="param-type">string</span><strong> $sequence</strong>, <span class="param-type">integer</span><strong> &amp;$i</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parses a sequence to a YAML string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$sequence</code> - </li>
                <li><code>&amp;$i</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A YAML string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>ParseException When malformed inline YAML string is parsed</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
