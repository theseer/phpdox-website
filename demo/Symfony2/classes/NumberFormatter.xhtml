<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - NumberFormatter - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#create">create</a>
          </li>
          <li>
            <a href="#format">format</a>
          </li>
          <li>
            <a href="#formatCurrency">formatCurrency</a>
          </li>
          <li>
            <a href="#getAttribute">getAttribute</a>
          </li>
          <li>
            <a href="#getErrorCode">getErrorCode</a>
          </li>
          <li>
            <a href="#getErrorMessage">getErrorMessage</a>
          </li>
          <li>
            <a href="#getLocale">getLocale</a>
          </li>
          <li>
            <a href="#getPattern">getPattern</a>
          </li>
          <li>
            <a href="#getSymbol">getSymbol</a>
          </li>
          <li>
            <a href="#getTextAttribute">getTextAttribute</a>
          </li>
          <li>
            <a href="#parse">parse</a>
          </li>
          <li>
            <a href="#parseCurrency">parseCurrency</a>
          </li>
          <li>
            <a href="#resetError">resetError</a>
          </li>
          <li>
            <a href="#setAttribute">setAttribute</a>
          </li>
          <li>
            <a href="#setPattern">setPattern</a>
          </li>
          <li>
            <a href="#setSymbol">setSymbol</a>
          </li>
          <li>
            <a href="#setTextAttribute">setTextAttribute</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>NumberFormatter</h2>
        <div class="file-notice">
          <p>Stub implementation for the NumberFormatter class of the intl extension</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist"/>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $locale</strong>, <span class="param-type">int</span><strong> $style</strong>, <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$locale</code> - The locale code. The only currently supported locale is "en".</li>
                <li><code>$style</code> - Style of the formatting, one of the format style constants.</li>
                <li><code>$pattern</code> - Not supported. A pattern string in case $style is NumberFormat::PATTERN_DECIMAL or</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentValueNotImplementedException  When $locale different than "en" is passed</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $style is not supported</code>
                </li>
                <li>
                  <code>MethodArgumentNotImplementedException       When the pattern value is different than null</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="create"/>
            <h4><span class="label true">true</span><span class="label public">public</span>create<span style="font-size:90%;">( <span class="param-type">string</span><strong> $locale</strong>, <span class="param-type">int</span><strong> $style</strong>, <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Static constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$locale</code> - The locale code. The only supported locale is "en".</li>
                <li><code>$style</code> - Style of the formatting, one of the format style constants.</li>
                <li><code>$pattern</code> - Not supported. A pattern string in case $style is NumberFormat::PATTERN_DECIMAL or</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentValueNotImplementedException  When $locale different than "en" is passed</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $style is not supported</code>
                </li>
                <li>
                  <code>MethodArgumentNotImplementedException       When the pattern value is different than null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="format"/>
            <h4><span class="label public">public</span>format<span style="font-size:90%;">( <span class="param-type"><span title="number">number</span></span><strong> $value</strong>, <span class="param-type">int</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Format a number</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to format</li>
                <li><code>$type</code> - Type of the formatting, one of the format type constants.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The formatted value or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>NotImplementedException                    If the method is called with the class $style 'CURRENCY'</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException If the $type is different than TYPE_DEFAULT</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="formatCurrency"/>
            <h4><span class="label public">public</span>formatCurrency<span style="font-size:90%;">( <span class="param-type">float</span><strong> $value</strong>, <span class="param-type">string</span><strong> $currency</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Format a currency value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The numeric currency value</li>
                <li><code>$currency</code> - The 3-letter ISO 4217 currency code indicating the currency to use</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The formatted currency value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttribute"/>
            <h4><span class="label public">public</span>getAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an attribute value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the numeric attribute constants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The attribute value on success or false on error</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getErrorCode"/>
            <h4><span class="label public">public</span>getErrorCode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns formatter's last error code. Always returns the U_ZERO_ERROR class constant value</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The error code from last formatter call</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getErrorMessage"/>
            <h4><span class="label public">public</span>getErrorMessage<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns formatter's last error message. Always returns the U_ZERO_ERROR_MESSAGE class constant value</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The error message from last formatter call</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLocale"/>
            <h4><span class="label public">public</span>getLocale<span style="font-size:90%;">( <span class="param-type">int</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the formatter's locale<pre>The parameter $type is currently ignored.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - Not supported. The locale name type to return (Locale::VALID_LOCALE or Locale::ACTUAL_LOCALE)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The locale used to create the formatter. Currently always</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPattern"/>
            <h4><span class="label public">public</span>getPattern<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Returns the formatter's pattern</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The pattern string used by the formatter or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSymbol"/>
            <h4><span class="label public">public</span>getSymbol<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Returns a formatter symbol value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - A symbol specifier, one of the format symbol constants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The symbol value or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTextAttribute"/>
            <h4><span class="label public">public</span>getTextAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Returns a formatter text attribute value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the text attribute constants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The attribute value or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parse"/>
            <h4><span class="label public">public</span>parse<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong>, <span class="param-type">int</span><strong> $type</strong>, <span class="param-type">int</span><strong> &amp;$position</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse a number</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to parse</li>
                <li><code>$type</code> - Type of the formatting, one of the format type constants.</li>
                <li><code>$position</code> - Not supported. Offset to begin the parsing on return this value will hold the offset at which the parsing ended</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parsed value of false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentNotImplementedException        When $position different than null, behavior not implemented</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseCurrency"/>
            <h4><span class="label public">public</span>parseCurrency<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong>, <span class="param-type">string</span><strong> &amp;$currency</strong>, <span class="param-type">int</span><strong> &amp;$position</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Parse a currency number</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to parse</li>
                <li><code>$currency</code> - Parameter to receive the currency name (reference)</li>
                <li><code>$position</code> - Offset to begin the parsing on return this value will hold the offset at which the parsing ended</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parsed numeric value of false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttribute"/>
            <h4><span class="label public">public</span>setAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong>, <span class="param-type">int</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set an attribute</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the numeric attribute constants.</li>
                <li><code>$value</code> - The attribute value. The only currently supported rounding modes are</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $attr is not supported</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $value is not supported</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPattern"/>
            <h4><span class="label public">public</span>setPattern<span style="font-size:90%;">( <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Set the formatter's pattern</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pattern</code> - A pattern string in conformance with the ICU DecimalFormat documentation</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSymbol"/>
            <h4><span class="label public">public</span>setSymbol<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong>, <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Set the formatter's symbol</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - A symbol specifier, one of the format symbol constants</li>
                <li><code>$value</code> - The value for the symbol</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTextAttribute"/>
            <h4><span class="label public">public</span>setTextAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong>, <span class="param-type">int</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Set a text attribute</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the text attribute constants</li>
                <li><code>$value</code> - The attribute value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resetError"/>
            <h4><span class="label protected">protected</span>resetError<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the error to the default U_ZERO_ERROR</li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
