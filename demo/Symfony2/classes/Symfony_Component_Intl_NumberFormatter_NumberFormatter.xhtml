<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Intl\NumberFormatter\NumberFormatter - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#PATTERN_DECIMAL">PATTERN_DECIMAL</a>
          </li>
          <li>
            <a href="#DECIMAL">DECIMAL</a>
          </li>
          <li>
            <a href="#CURRENCY">CURRENCY</a>
          </li>
          <li>
            <a href="#PERCENT">PERCENT</a>
          </li>
          <li>
            <a href="#SCIENTIFIC">SCIENTIFIC</a>
          </li>
          <li>
            <a href="#SPELLOUT">SPELLOUT</a>
          </li>
          <li>
            <a href="#ORDINAL">ORDINAL</a>
          </li>
          <li>
            <a href="#DURATION">DURATION</a>
          </li>
          <li>
            <a href="#PATTERN_RULEBASED">PATTERN_RULEBASED</a>
          </li>
          <li>
            <a href="#IGNORE">IGNORE</a>
          </li>
          <li>
            <a href="#DEFAULT_STYLE">DEFAULT_STYLE</a>
          </li>
          <li>
            <a href="#TYPE_DEFAULT">TYPE_DEFAULT</a>
          </li>
          <li>
            <a href="#TYPE_INT32">TYPE_INT32</a>
          </li>
          <li>
            <a href="#TYPE_INT64">TYPE_INT64</a>
          </li>
          <li>
            <a href="#TYPE_DOUBLE">TYPE_DOUBLE</a>
          </li>
          <li>
            <a href="#TYPE_CURRENCY">TYPE_CURRENCY</a>
          </li>
          <li>
            <a href="#PARSE_INT_ONLY">PARSE_INT_ONLY</a>
          </li>
          <li>
            <a href="#GROUPING_USED">GROUPING_USED</a>
          </li>
          <li>
            <a href="#DECIMAL_ALWAYS_SHOWN">DECIMAL_ALWAYS_SHOWN</a>
          </li>
          <li>
            <a href="#MAX_INTEGER_DIGITS">MAX_INTEGER_DIGITS</a>
          </li>
          <li>
            <a href="#MIN_INTEGER_DIGITS">MIN_INTEGER_DIGITS</a>
          </li>
          <li>
            <a href="#INTEGER_DIGITS">INTEGER_DIGITS</a>
          </li>
          <li>
            <a href="#MAX_FRACTION_DIGITS">MAX_FRACTION_DIGITS</a>
          </li>
          <li>
            <a href="#MIN_FRACTION_DIGITS">MIN_FRACTION_DIGITS</a>
          </li>
          <li>
            <a href="#FRACTION_DIGITS">FRACTION_DIGITS</a>
          </li>
          <li>
            <a href="#MULTIPLIER">MULTIPLIER</a>
          </li>
          <li>
            <a href="#GROUPING_SIZE">GROUPING_SIZE</a>
          </li>
          <li>
            <a href="#ROUNDING_MODE">ROUNDING_MODE</a>
          </li>
          <li>
            <a href="#ROUNDING_INCREMENT">ROUNDING_INCREMENT</a>
          </li>
          <li>
            <a href="#FORMAT_WIDTH">FORMAT_WIDTH</a>
          </li>
          <li>
            <a href="#PADDING_POSITION">PADDING_POSITION</a>
          </li>
          <li>
            <a href="#SECONDARY_GROUPING_SIZE">SECONDARY_GROUPING_SIZE</a>
          </li>
          <li>
            <a href="#SIGNIFICANT_DIGITS_USED">SIGNIFICANT_DIGITS_USED</a>
          </li>
          <li>
            <a href="#MIN_SIGNIFICANT_DIGITS">MIN_SIGNIFICANT_DIGITS</a>
          </li>
          <li>
            <a href="#MAX_SIGNIFICANT_DIGITS">MAX_SIGNIFICANT_DIGITS</a>
          </li>
          <li>
            <a href="#LENIENT_PARSE">LENIENT_PARSE</a>
          </li>
          <li>
            <a href="#POSITIVE_PREFIX">POSITIVE_PREFIX</a>
          </li>
          <li>
            <a href="#POSITIVE_SUFFIX">POSITIVE_SUFFIX</a>
          </li>
          <li>
            <a href="#NEGATIVE_PREFIX">NEGATIVE_PREFIX</a>
          </li>
          <li>
            <a href="#NEGATIVE_SUFFIX">NEGATIVE_SUFFIX</a>
          </li>
          <li>
            <a href="#PADDING_CHARACTER">PADDING_CHARACTER</a>
          </li>
          <li>
            <a href="#CURRENCY_CODE">CURRENCY_CODE</a>
          </li>
          <li>
            <a href="#DEFAULT_RULESET">DEFAULT_RULESET</a>
          </li>
          <li>
            <a href="#PUBLIC_RULESETS">PUBLIC_RULESETS</a>
          </li>
          <li>
            <a href="#DECIMAL_SEPARATOR_SYMBOL">DECIMAL_SEPARATOR_SYMBOL</a>
          </li>
          <li>
            <a href="#GROUPING_SEPARATOR_SYMBOL">GROUPING_SEPARATOR_SYMBOL</a>
          </li>
          <li>
            <a href="#PATTERN_SEPARATOR_SYMBOL">PATTERN_SEPARATOR_SYMBOL</a>
          </li>
          <li>
            <a href="#PERCENT_SYMBOL">PERCENT_SYMBOL</a>
          </li>
          <li>
            <a href="#ZERO_DIGIT_SYMBOL">ZERO_DIGIT_SYMBOL</a>
          </li>
          <li>
            <a href="#DIGIT_SYMBOL">DIGIT_SYMBOL</a>
          </li>
          <li>
            <a href="#MINUS_SIGN_SYMBOL">MINUS_SIGN_SYMBOL</a>
          </li>
          <li>
            <a href="#PLUS_SIGN_SYMBOL">PLUS_SIGN_SYMBOL</a>
          </li>
          <li>
            <a href="#CURRENCY_SYMBOL">CURRENCY_SYMBOL</a>
          </li>
          <li>
            <a href="#INTL_CURRENCY_SYMBOL">INTL_CURRENCY_SYMBOL</a>
          </li>
          <li>
            <a href="#MONETARY_SEPARATOR_SYMBOL">MONETARY_SEPARATOR_SYMBOL</a>
          </li>
          <li>
            <a href="#EXPONENTIAL_SYMBOL">EXPONENTIAL_SYMBOL</a>
          </li>
          <li>
            <a href="#PERMILL_SYMBOL">PERMILL_SYMBOL</a>
          </li>
          <li>
            <a href="#PAD_ESCAPE_SYMBOL">PAD_ESCAPE_SYMBOL</a>
          </li>
          <li>
            <a href="#INFINITY_SYMBOL">INFINITY_SYMBOL</a>
          </li>
          <li>
            <a href="#NAN_SYMBOL">NAN_SYMBOL</a>
          </li>
          <li>
            <a href="#SIGNIFICANT_DIGIT_SYMBOL">SIGNIFICANT_DIGIT_SYMBOL</a>
          </li>
          <li>
            <a href="#MONETARY_GROUPING_SEPARATOR_SYMBOL">MONETARY_GROUPING_SEPARATOR_SYMBOL</a>
          </li>
          <li>
            <a href="#ROUND_CEILING">ROUND_CEILING</a>
          </li>
          <li>
            <a href="#ROUND_FLOOR">ROUND_FLOOR</a>
          </li>
          <li>
            <a href="#ROUND_DOWN">ROUND_DOWN</a>
          </li>
          <li>
            <a href="#ROUND_UP">ROUND_UP</a>
          </li>
          <li>
            <a href="#ROUND_HALFEVEN">ROUND_HALFEVEN</a>
          </li>
          <li>
            <a href="#ROUND_HALFDOWN">ROUND_HALFDOWN</a>
          </li>
          <li>
            <a href="#ROUND_HALFUP">ROUND_HALFUP</a>
          </li>
          <li>
            <a href="#PAD_BEFORE_PREFIX">PAD_BEFORE_PREFIX</a>
          </li>
          <li>
            <a href="#PAD_AFTER_PREFIX">PAD_AFTER_PREFIX</a>
          </li>
          <li>
            <a href="#PAD_BEFORE_SUFFIX">PAD_BEFORE_SUFFIX</a>
          </li>
          <li>
            <a href="#PAD_AFTER_SUFFIX">PAD_AFTER_SUFFIX</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#errorCode">$errorCode</a>
          </li>
          <li>
            <a href="#errorMessage">$errorMessage</a>
          </li>
          <li>
            <a href="#style">$style</a>
          </li>
          <li>
            <a href="#attributes">$attributes</a>
          </li>
          <li>
            <a href="#initializedAttributes">$initializedAttributes</a>
          </li>
          <li>
            <a href="#supportedStyles">$supportedStyles</a>
          </li>
          <li>
            <a href="#supportedAttributes">$supportedAttributes</a>
          </li>
          <li>
            <a href="#roundingModes">$roundingModes</a>
          </li>
          <li>
            <a href="#phpRoundingMap">$phpRoundingMap</a>
          </li>
          <li>
            <a href="#int32Range">$int32Range</a>
          </li>
          <li>
            <a href="#int64Range">$int64Range</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#convertValueDataType">convertValueDataType</a>
          </li>
          <li>
            <a href="#create">create</a>
          </li>
          <li>
            <a href="#format">format</a>
          </li>
          <li>
            <a href="#formatCurrency">formatCurrency</a>
          </li>
          <li>
            <a href="#formatNumber">formatNumber</a>
          </li>
          <li>
            <a href="#getAttribute">getAttribute</a>
          </li>
          <li>
            <a href="#getErrorCode">getErrorCode</a>
          </li>
          <li>
            <a href="#getErrorMessage">getErrorMessage</a>
          </li>
          <li>
            <a href="#getInt32Value">getInt32Value</a>
          </li>
          <li>
            <a href="#getInt64Value">getInt64Value</a>
          </li>
          <li>
            <a href="#getLocale">getLocale</a>
          </li>
          <li>
            <a href="#getPattern">getPattern</a>
          </li>
          <li>
            <a href="#getSymbol">getSymbol</a>
          </li>
          <li>
            <a href="#getTextAttribute">getTextAttribute</a>
          </li>
          <li>
            <a href="#getUnitializedPrecision">getUnitializedPrecision</a>
          </li>
          <li>
            <a href="#isInitializedAttribute">isInitializedAttribute</a>
          </li>
          <li>
            <a href="#isInvalidRoundingMode">isInvalidRoundingMode</a>
          </li>
          <li>
            <a href="#normalizeFractionDigitsValue">normalizeFractionDigitsValue</a>
          </li>
          <li>
            <a href="#normalizeGroupingUsedValue">normalizeGroupingUsedValue</a>
          </li>
          <li>
            <a href="#parse">parse</a>
          </li>
          <li>
            <a href="#parseCurrency">parseCurrency</a>
          </li>
          <li>
            <a href="#resetError">resetError</a>
          </li>
          <li>
            <a href="#round">round</a>
          </li>
          <li>
            <a href="#roundCurrency">roundCurrency</a>
          </li>
          <li>
            <a href="#setAttribute">setAttribute</a>
          </li>
          <li>
            <a href="#setPattern">setPattern</a>
          </li>
          <li>
            <a href="#setSymbol">setSymbol</a>
          </li>
          <li>
            <a href="#setTextAttribute">setTextAttribute</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Intl\NumberFormatter\</span>NumberFormatter</h2>
        <div class="file-notice">
          <p>Replacement for PHP's native {@link \NumberFormatter} class.</p>
          <p>
            <pre>The only methods currently supported in this class are:
 -  -  -  -  -  -  -  -  -  - </pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Eriksen Costa &lt;eriksen.costa@infranology.com.br&gt;</li>
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="PATTERN_DECIMAL"/>PATTERN_DECIMAL = 0<hr/></li>
          <li><a name="DECIMAL"/>DECIMAL = 1<hr/></li>
          <li><a name="CURRENCY"/>CURRENCY = 2<hr/></li>
          <li><a name="PERCENT"/>PERCENT = 3<hr/></li>
          <li><a name="SCIENTIFIC"/>SCIENTIFIC = 4<hr/></li>
          <li><a name="SPELLOUT"/>SPELLOUT = 5<hr/></li>
          <li><a name="ORDINAL"/>ORDINAL = 6<hr/></li>
          <li><a name="DURATION"/>DURATION = 7<hr/></li>
          <li><a name="PATTERN_RULEBASED"/>PATTERN_RULEBASED = 9<hr/></li>
          <li><a name="IGNORE"/>IGNORE = 0<hr/></li>
          <li><a name="DEFAULT_STYLE"/>DEFAULT_STYLE = 1<hr/></li>
          <li><a name="TYPE_DEFAULT"/>TYPE_DEFAULT = 0<hr/></li>
          <li><a name="TYPE_INT32"/>TYPE_INT32 = 1<hr/></li>
          <li><a name="TYPE_INT64"/>TYPE_INT64 = 2<hr/></li>
          <li><a name="TYPE_DOUBLE"/>TYPE_DOUBLE = 3<hr/></li>
          <li><a name="TYPE_CURRENCY"/>TYPE_CURRENCY = 4<hr/></li>
          <li><a name="PARSE_INT_ONLY"/>PARSE_INT_ONLY = 0<hr/></li>
          <li><a name="GROUPING_USED"/>GROUPING_USED = 1<hr/></li>
          <li><a name="DECIMAL_ALWAYS_SHOWN"/>DECIMAL_ALWAYS_SHOWN = 2<hr/></li>
          <li><a name="MAX_INTEGER_DIGITS"/>MAX_INTEGER_DIGITS = 3<hr/></li>
          <li><a name="MIN_INTEGER_DIGITS"/>MIN_INTEGER_DIGITS = 4<hr/></li>
          <li><a name="INTEGER_DIGITS"/>INTEGER_DIGITS = 5<hr/></li>
          <li><a name="MAX_FRACTION_DIGITS"/>MAX_FRACTION_DIGITS = 6<hr/></li>
          <li><a name="MIN_FRACTION_DIGITS"/>MIN_FRACTION_DIGITS = 7<hr/></li>
          <li><a name="FRACTION_DIGITS"/>FRACTION_DIGITS = 8<hr/></li>
          <li><a name="MULTIPLIER"/>MULTIPLIER = 9<hr/></li>
          <li><a name="GROUPING_SIZE"/>GROUPING_SIZE = 10<hr/></li>
          <li><a name="ROUNDING_MODE"/>ROUNDING_MODE = 11<hr/></li>
          <li><a name="ROUNDING_INCREMENT"/>ROUNDING_INCREMENT = 12<hr/></li>
          <li><a name="FORMAT_WIDTH"/>FORMAT_WIDTH = 13<hr/></li>
          <li><a name="PADDING_POSITION"/>PADDING_POSITION = 14<hr/></li>
          <li><a name="SECONDARY_GROUPING_SIZE"/>SECONDARY_GROUPING_SIZE = 15<hr/></li>
          <li><a name="SIGNIFICANT_DIGITS_USED"/>SIGNIFICANT_DIGITS_USED = 16<hr/></li>
          <li><a name="MIN_SIGNIFICANT_DIGITS"/>MIN_SIGNIFICANT_DIGITS = 17<hr/></li>
          <li><a name="MAX_SIGNIFICANT_DIGITS"/>MAX_SIGNIFICANT_DIGITS = 18<hr/></li>
          <li><a name="LENIENT_PARSE"/>LENIENT_PARSE = 19<hr/></li>
          <li><a name="POSITIVE_PREFIX"/>POSITIVE_PREFIX = 0<hr/></li>
          <li><a name="POSITIVE_SUFFIX"/>POSITIVE_SUFFIX = 1<hr/></li>
          <li><a name="NEGATIVE_PREFIX"/>NEGATIVE_PREFIX = 2<hr/></li>
          <li><a name="NEGATIVE_SUFFIX"/>NEGATIVE_SUFFIX = 3<hr/></li>
          <li><a name="PADDING_CHARACTER"/>PADDING_CHARACTER = 4<hr/></li>
          <li><a name="CURRENCY_CODE"/>CURRENCY_CODE = 5<hr/></li>
          <li><a name="DEFAULT_RULESET"/>DEFAULT_RULESET = 6<hr/></li>
          <li><a name="PUBLIC_RULESETS"/>PUBLIC_RULESETS = 7<hr/></li>
          <li><a name="DECIMAL_SEPARATOR_SYMBOL"/>DECIMAL_SEPARATOR_SYMBOL = 0<hr/></li>
          <li><a name="GROUPING_SEPARATOR_SYMBOL"/>GROUPING_SEPARATOR_SYMBOL = 1<hr/></li>
          <li><a name="PATTERN_SEPARATOR_SYMBOL"/>PATTERN_SEPARATOR_SYMBOL = 2<hr/></li>
          <li><a name="PERCENT_SYMBOL"/>PERCENT_SYMBOL = 3<hr/></li>
          <li><a name="ZERO_DIGIT_SYMBOL"/>ZERO_DIGIT_SYMBOL = 4<hr/></li>
          <li><a name="DIGIT_SYMBOL"/>DIGIT_SYMBOL = 5<hr/></li>
          <li><a name="MINUS_SIGN_SYMBOL"/>MINUS_SIGN_SYMBOL = 6<hr/></li>
          <li><a name="PLUS_SIGN_SYMBOL"/>PLUS_SIGN_SYMBOL = 7<hr/></li>
          <li><a name="CURRENCY_SYMBOL"/>CURRENCY_SYMBOL = 8<hr/></li>
          <li><a name="INTL_CURRENCY_SYMBOL"/>INTL_CURRENCY_SYMBOL = 9<hr/></li>
          <li><a name="MONETARY_SEPARATOR_SYMBOL"/>MONETARY_SEPARATOR_SYMBOL = 10<hr/></li>
          <li><a name="EXPONENTIAL_SYMBOL"/>EXPONENTIAL_SYMBOL = 11<hr/></li>
          <li><a name="PERMILL_SYMBOL"/>PERMILL_SYMBOL = 12<hr/></li>
          <li><a name="PAD_ESCAPE_SYMBOL"/>PAD_ESCAPE_SYMBOL = 13<hr/></li>
          <li><a name="INFINITY_SYMBOL"/>INFINITY_SYMBOL = 14<hr/></li>
          <li><a name="NAN_SYMBOL"/>NAN_SYMBOL = 15<hr/></li>
          <li><a name="SIGNIFICANT_DIGIT_SYMBOL"/>SIGNIFICANT_DIGIT_SYMBOL = 16<hr/></li>
          <li><a name="MONETARY_GROUPING_SEPARATOR_SYMBOL"/>MONETARY_GROUPING_SEPARATOR_SYMBOL = 17<hr/></li>
          <li><a name="ROUND_CEILING"/>ROUND_CEILING = 0<hr/></li>
          <li><a name="ROUND_FLOOR"/>ROUND_FLOOR = 1<hr/></li>
          <li><a name="ROUND_DOWN"/>ROUND_DOWN = 2<hr/></li>
          <li><a name="ROUND_UP"/>ROUND_UP = 3<hr/></li>
          <li><a name="ROUND_HALFEVEN"/>ROUND_HALFEVEN = 4<hr/></li>
          <li><a name="ROUND_HALFDOWN"/>ROUND_HALFDOWN = 5<hr/></li>
          <li><a name="ROUND_HALFUP"/>ROUND_HALFUP = 6<hr/></li>
          <li><a name="PAD_BEFORE_PREFIX"/>PAD_BEFORE_PREFIX = 0<hr/></li>
          <li><a name="PAD_AFTER_PREFIX"/>PAD_AFTER_PREFIX = 1<hr/></li>
          <li><a name="PAD_BEFORE_SUFFIX"/>PAD_BEFORE_SUFFIX = 2<hr/></li>
          <li><a name="PAD_AFTER_SUFFIX"/>PAD_AFTER_SUFFIX = 3<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="errorCode"/>
            <h4><span class="label protected">protected</span>integer 
                
                $errorCode</h4>
            <ul class="varlist">
              <li>The error code from the last operation</li>
            </ul>
          </li>
          <li>
            <a name="errorMessage"/>
            <h4><span class="label protected">protected</span>string 
                
                $errorMessage</h4>
            <ul class="varlist">
              <li>The error message from the last operation</li>
            </ul>
          </li>
          <li>
            <a name="style"/>
            <h4><span class="label private">private</span>int 
                
                $style</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="attributes"/>
            <h4><span class="label private">private</span>array 
                
                $attributes</h4>
            <ul class="varlist">
              <li>Default values for the en locale</li>
            </ul>
          </li>
          <li>
            <a name="initializedAttributes"/>
            <h4><span class="label private">private</span>array 
                
                $initializedAttributes</h4>
            <ul class="varlist">
              <li>Holds the initialized attributes code</li>
            </ul>
          </li>
          <li>
            <a name="supportedStyles"/>
            <h4><span class="label private">private</span>array 
                
                $supportedStyles</h4>
            <ul class="varlist">
              <li>The supported styles to the constructor $styles argument</li>
            </ul>
          </li>
          <li>
            <a name="supportedAttributes"/>
            <h4><span class="label private">private</span>array 
                
                $supportedAttributes</h4>
            <ul class="varlist">
              <li>Supported attributes to the setAttribute() $attr argument</li>
            </ul>
          </li>
          <li>
            <a name="roundingModes"/>
            <h4><span class="label private">private</span>array 
                
                $roundingModes</h4>
            <ul class="varlist">
              <li>The available rounding modes for setAttribute() usage with NumberFormatter::ROUNDING_MODE. NumberFormatter::ROUND_DOWN and NumberFormatter::ROUND_UP does not have a PHP only equivalent</li>
            </ul>
          </li>
          <li>
            <a name="phpRoundingMap"/>
            <h4><span class="label private">private</span>array 
                
                $phpRoundingMap</h4>
            <ul class="varlist">
              <li>The mapping between NumberFormatter rounding modes to the available modes in PHP's round() function.</li>
            </ul>
          </li>
          <li>
            <a name="int32Range"/>
            <h4><span class="label private">private</span>array 
                
                $int32Range</h4>
            <ul class="varlist">
              <li>The maximum values of the integer type in 32 bit platforms.</li>
            </ul>
          </li>
          <li>
            <a name="int64Range"/>
            <h4><span class="label private">private</span>array 
                
                $int64Range</h4>
            <ul class="varlist">
              <li>The maximum values of the integer type in 64 bit platforms.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $locale</strong>, <span class="param-type">int</span><strong> $style</strong>, <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$locale</code> - The locale code. The only currently supported locale is "en".</li>
                <li><code>$style</code> - Style of the formatting, one of the format style constants.</li>
                <li><code>$pattern</code> - Not supported. A pattern string in case $style is NumberFormat::PATTERN_DECIMAL or</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentValueNotImplementedException  When $locale different than "en" is passed</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $style is not supported</code>
                </li>
                <li>
                  <code>MethodArgumentNotImplementedException       When the pattern value is different than null</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="create"/>
            <h4><span class="label true">true</span><span class="label public">public</span>create<span style="font-size:90%;">( <span class="param-type">string</span><strong> $locale</strong>, <span class="param-type">int</span><strong> $style</strong>, <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Static constructor.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$locale</code> - The locale code. The only supported locale is "en".</li>
                <li><code>$style</code> - Style of the formatting, one of the format style constants.</li>
                <li><code>$pattern</code> - Not supported. A pattern string in case $style is NumberFormat::PATTERN_DECIMAL or</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentValueNotImplementedException  When $locale different than "en" is passed</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $style is not supported</code>
                </li>
                <li>
                  <code>MethodArgumentNotImplementedException       When the pattern value is different than null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="format"/>
            <h4><span class="label public">public</span>format<span style="font-size:90%;">( <span class="param-type"><span title="number">number</span></span><strong> $value</strong>, <span class="param-type">int</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Format a number</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to format</li>
                <li><code>$type</code> - Type of the formatting, one of the format type constants.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The formatted value or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>NotImplementedException                    If the method is called with the class $style 'CURRENCY'</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException If the $type is different than TYPE_DEFAULT</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="formatCurrency"/>
            <h4><span class="label public">public</span>formatCurrency<span style="font-size:90%;">( <span class="param-type">float</span><strong> $value</strong>, <span class="param-type">string</span><strong> $currency</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Format a currency value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The numeric currency value</li>
                <li><code>$currency</code> - The 3-letter ISO 4217 currency code indicating the currency to use</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The formatted currency value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttribute"/>
            <h4><span class="label public">public</span>getAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an attribute value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the numeric attribute constants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The attribute value on success or false on error</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getErrorCode"/>
            <h4><span class="label public">public</span>getErrorCode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns formatter's last error code. Always returns the U_ZERO_ERROR class constant value</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The error code from last formatter call</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getErrorMessage"/>
            <h4><span class="label public">public</span>getErrorMessage<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns formatter's last error message. Always returns the U_ZERO_ERROR_MESSAGE class constant value</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The error message from last formatter call</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLocale"/>
            <h4><span class="label public">public</span>getLocale<span style="font-size:90%;">( <span class="param-type">int</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the formatter's locale<pre>The parameter $type is currently ignored.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - Not supported. The locale name type to return (Locale::VALID_LOCALE or Locale::ACTUAL_LOCALE)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The locale used to create the formatter. Currently always</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPattern"/>
            <h4><span class="label public">public</span>getPattern<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Returns the formatter's pattern</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The pattern string used by the formatter or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSymbol"/>
            <h4><span class="label public">public</span>getSymbol<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Returns a formatter symbol value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - A symbol specifier, one of the format symbol constants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The symbol value or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTextAttribute"/>
            <h4><span class="label public">public</span>getTextAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Returns a formatter text attribute value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the text attribute constants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The attribute value or false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parse"/>
            <h4><span class="label public">public</span>parse<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong>, <span class="param-type">int</span><strong> $type</strong>, <span class="param-type">int</span><strong> &amp;$position</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse a number</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to parse</li>
                <li><code>$type</code> - Type of the formatting, one of the format type constants.</li>
                <li><code>$position</code> - Not supported. Offset to begin the parsing on return this value will hold the offset at which the parsing ended</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parsed value of false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentNotImplementedException        When $position different than null, behavior not implemented</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseCurrency"/>
            <h4><span class="label public">public</span>parseCurrency<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong>, <span class="param-type">string</span><strong> &amp;$currency</strong>, <span class="param-type">int</span><strong> &amp;$position</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Parse a currency number</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to parse</li>
                <li><code>$currency</code> - Parameter to receive the currency name (reference)</li>
                <li><code>$position</code> - Offset to begin the parsing on return this value will hold the offset at which the parsing ended</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parsed numeric value of false on error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttribute"/>
            <h4><span class="label public">public</span>setAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong>, <span class="param-type">int</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set an attribute</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the numeric attribute constants.</li>
                <li><code>$value</code> - The attribute value. The only currently supported rounding modes are</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $attr is not supported</code>
                </li>
                <li>
                  <code>MethodArgumentValueNotImplementedException  When the $value is not supported</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPattern"/>
            <h4><span class="label public">public</span>setPattern<span style="font-size:90%;">( <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Set the formatter's pattern</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pattern</code> - A pattern string in conformance with the ICU DecimalFormat documentation</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSymbol"/>
            <h4><span class="label public">public</span>setSymbol<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong>, <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Set the formatter's symbol</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - A symbol specifier, one of the format symbol constants</li>
                <li><code>$value</code> - The value for the symbol</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTextAttribute"/>
            <h4><span class="label public">public</span>setTextAttribute<span style="font-size:90%;">( <span class="param-type">int</span><strong> $attr</strong>, <span class="param-type">int</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Not supported. Set a text attribute</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - An attribute specifier, one of the text attribute constants</li>
                <li><code>$value</code> - The attribute value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true on success or false on failure</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>MethodNotImplementedException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resetError"/>
            <h4><span class="label protected">protected</span>resetError<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the error to the default U_ZERO_ERROR</li>
            </p>
          </li>
          <li>
            <a name="convertValueDataType"/>
            <h4><span class="label private">private</span>convertValueDataType<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type">int</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the numeric value using the $type to convert to the right data type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to be converted</li>
                <li><code>$type</code> - The type to convert. Can be TYPE_DOUBLE (float) or TYPE_INT32 (int)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The converted value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="formatNumber"/>
            <h4><span class="label private">private</span>formatNumber<span style="font-size:90%;">( <span class="param-type"><span title="integer|float">integer|float</span></span><strong> $value</strong>, <span class="param-type">int</span><strong> $precision</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Formats a number.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The numeric value to format</li>
                <li><code>$precision</code> - The number of decimal digits to use</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The formatted number</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInt32Value"/>
            <h4><span class="label private">private</span>getInt32Value<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Convert the value data type to int or returns false if the value is out of the integer value range.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to be converted</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The converted value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInt64Value"/>
            <h4><span class="label private">private</span>getInt64Value<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Convert the value data type to int or returns false if the value is out of the integer value range.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to be converted</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The converted value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUnitializedPrecision"/>
            <h4><span class="label private">private</span>getUnitializedPrecision<span style="font-size:90%;">( <span class="param-type"><span title="integer|float">integer|float</span></span><strong> $value</strong>, <span class="param-type">int</span><strong> $precision</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the precision value if the DECIMAL style is being used and the FRACTION_DIGITS attribute is unitialized.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to get the precision from if the FRACTION_DIGITS attribute is unitialized</li>
                <li><code>$precision</code> - The precision value to returns if the FRACTION_DIGITS attribute is initialized</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The precision value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isInitializedAttribute"/>
            <h4><span class="label private">private</span>isInitializedAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attr</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the attribute is initialized (value set by client code).</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attr</code> - The attribute name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the value was set by client, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isInvalidRoundingMode"/>
            <h4><span class="label private">private</span>isInvalidRoundingMode<span style="font-size:90%;">( <span class="param-type">int</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the rounding mode is invalid.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The rounding mode value to check</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the rounding mode is invalid, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeFractionDigitsValue"/>
            <h4><span class="label private">private</span>normalizeFractionDigitsValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the normalized value for the FRACTION_DIGITS attribute. The value is converted to int and if negative, the returned value will be 0.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to be normalized</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized value for the attribute</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeGroupingUsedValue"/>
            <h4><span class="label private">private</span>normalizeGroupingUsedValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the normalized value for the GROUPING_USED attribute. Any value that can be converted to int will be cast to Boolean and then to int again. This way, negative values are converted to 1 and string values to 0.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to be normalized</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The normalized value for the attribute (0 or 1)</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="round"/>
            <h4><span class="label private">private</span>round<span style="font-size:90%;">( <span class="param-type"><span title="integer|float">integer|float</span></span><strong> $value</strong>, <span class="param-type">int</span><strong> $precision</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Rounds a value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The value to round</li>
                <li><code>$precision</code> - The number of decimal digits to round to</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The rounded value</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="roundCurrency"/>
            <h4><span class="label private">private</span>roundCurrency<span style="font-size:90%;">( <span class="param-type">float</span><strong> $value</strong>, <span class="param-type">string</span><strong> $currency</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Rounds a currency value, applying increment rounding if applicable<pre>When a currency have a rounding increment, an extra round is made after the first one. The rounding factor is
determined in the ICU data and is explained as of:

"the rounding increment is given in units of 10^(-fraction_digits)"

The only actual rounding data as of this writing, is CHF.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - The numeric currency value</li>
                <li><code>$currency</code> - The 3-letter ISO 4217 currency code indicating the currency to use</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The rounded numeric currency value</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
