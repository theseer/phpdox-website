<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Routing\RouteCollection - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#routes">$routes</a>
          </li>
          <li>
            <a href="#resources">$resources</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__clone">__clone</a>
          </li>
          <li>
            <a href="#add">add</a>
          </li>
          <li>
            <a href="#addCollection">addCollection</a>
          </li>
          <li>
            <a href="#addDefaults">addDefaults</a>
          </li>
          <li>
            <a href="#addOptions">addOptions</a>
          </li>
          <li>
            <a href="#addPrefix">addPrefix</a>
          </li>
          <li>
            <a href="#addRequirements">addRequirements</a>
          </li>
          <li>
            <a href="#addResource">addResource</a>
          </li>
          <li>
            <a href="#all">all</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getIterator">getIterator</a>
          </li>
          <li>
            <a href="#getResources">getResources</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
          <li>
            <a href="#setHost">setHost</a>
          </li>
          <li>
            <a href="#setMethods">setMethods</a>
          </li>
          <li>
            <a href="#setSchemes">setSchemes</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Routing\</span>RouteCollection</h2>
        <div class="file-notice">
          <p>A RouteCollection represents a set of Route instances.</p>
          <p>
            <pre>When adding a route at the end of the collection, an existing route
with the same name is removed first. So there can only be one route
with a given name.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Tobias Schultze &lt;http://tobion.de&gt;</li>
        </ul>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <span title="IteratorAggregate">IteratorAggregate</span>
          </li>
          <li>
            <span title="Countable">Countable</span>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="routes"/>
            <h4><span class="label private">private</span>array 
                
                $routes</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="resources"/>
            <h4><span class="label private">private</span>array 
                
                $resources</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__clone"/>
            <h4><span class="label public">public</span>__clone<span style="font-size:90%;">(  )</span></h4>
          </li>
          <li>
            <a name="add"/>
            <h4><span class="label public">public</span>add<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><a href="../classes/Symfony_Component_Routing_Route.xhtml">Symfony\Component\Routing\Route</a></span><strong> $route</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a route.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The route name</li>
                <li><code>$route</code> - A Route instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addCollection"/>
            <h4><span class="label public">public</span>addCollection<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Routing_RouteCollection.xhtml">Symfony\Component\Routing\RouteCollection</a></span><strong> $collection</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a route collection at the end of the current set by appending all routes of the added collection.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$collection</code> - A RouteCollection instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addDefaults"/>
            <h4><span class="label public">public</span>addDefaults<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $defaults</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds defaults to all routes.<pre>An existing default value under the same name in a route will be overridden.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$defaults</code> - An array of default values</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addOptions"/>
            <h4><span class="label public">public</span>addOptions<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds options to all routes.<pre>An existing option value under the same name in a route will be overridden.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - An array of options</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addPrefix"/>
            <h4><span class="label public">public</span>addPrefix<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong>, <span class="param-type">Array</span><strong> $defaults</strong>, <span class="param-type">Array</span><strong> $requirements</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a prefix to the path of all child routes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - An optional prefix to add before each pattern of the route collection</li>
                <li><code>$defaults</code> - An array of default values</li>
                <li><code>$requirements</code> - An array of requirements</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addRequirements"/>
            <h4><span class="label public">public</span>addRequirements<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $requirements</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds requirements to all routes.<pre>An existing requirement under the same name in a route will be overridden.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$requirements</code> - An array of requirements</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addResource"/>
            <h4><span class="label public">public</span>addResource<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Resource_ResourceInterface.xhtml">Symfony\Component\Config\Resource\ResourceInterface</a></span><strong> $resource</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a resource for this collection.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - A resource instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="all"/>
            <h4><span class="label public">public</span>all<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all routes in this collection.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of routes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the number of Routes in this collection.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The number of routes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a route by name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The route name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Route instance or null when not found</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getIterator"/>
            <h4><span class="label public">public</span>getIterator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the current RouteCollection as an Iterator that includes all routes.<pre>It implements \IteratorAggregate.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An \ArrayIterator object for iterating over routes</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getResources"/>
            <h4><span class="label public">public</span>getResources<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array of resources loaded to build this collection.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of resources</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes a route or an array of routes by name from the collection</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The route name or an array of route names</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setHost"/>
            <h4><span class="label public">public</span>setHost<span style="font-size:90%;">( <span class="param-type">string</span><strong> $pattern</strong>, <span class="param-type">Array</span><strong> $defaults</strong>, <span class="param-type">Array</span><strong> $requirements</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the host pattern on all routes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pattern</code> - The pattern</li>
                <li><code>$defaults</code> - An array of default values</li>
                <li><code>$requirements</code> - An array of requirements</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMethods"/>
            <h4><span class="label public">public</span>setMethods<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $methods</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the HTTP methods (e.g. 'POST') all child routes are restricted to.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$methods</code> - The method or an array of methods</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSchemes"/>
            <h4><span class="label public">public</span>setSchemes<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $schemes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the schemes (e.g. 'https') all child routes are restricted to.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$schemes</code> - The scheme or an array of schemes</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
