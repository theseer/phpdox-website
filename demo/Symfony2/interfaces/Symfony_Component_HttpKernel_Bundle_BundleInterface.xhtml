<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpKernel\Bundle\BundleInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#boot">boot</a>
          </li>
          <li>
            <a href="#build">build</a>
          </li>
          <li>
            <a href="#getContainerExtension">getContainerExtension</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getNamespace">getNamespace</a>
          </li>
          <li>
            <a href="#getParent">getParent</a>
          </li>
          <li>
            <a href="#getPath">getPath</a>
          </li>
          <li>
            <a href="#setContainer">setContainer</a>
          </li>
          <li>
            <a href="#shutdown">shutdown</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpKernel\Bundle\</span>BundleInterface</h2>
        <div class="file-notice">
          <p>BundleInterface.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="boot"/>
            <h4><span class="label public">public</span>boot<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Boots the Bundle.</li>
            </p>
          </li>
          <li>
            <a name="build"/>
            <h4><span class="label public">public</span>build<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder.xhtml">Symfony\Component\DependencyInjection\ContainerBuilder</a></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Builds the bundle.<pre>It is only ever called once when the cache is empty.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - A ContainerBuilder instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainerExtension"/>
            <h4><span class="label public">public</span>getContainerExtension<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the container extension that should be implicitly loaded.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The default extension or null if there is none</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the bundle name (the class short name).</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Bundle name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNamespace"/>
            <h4><span class="label public">public</span>getNamespace<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Bundle namespace.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Bundle namespace</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getParent"/>
            <h4><span class="label public">public</span>getParent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the bundle name that this bundle overrides.<pre>Despite its name, this method does not imply any parent/child relationship
between the bundles, just a way to extend and override an existing
bundle.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Bundle name it overrides or null if no parent</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPath"/>
            <h4><span class="label public">public</span>getPath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the Bundle directory path.<pre>The path should always be returned as a Unix path (with /).</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Bundle absolute path</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setContainer"/>
            <h4><span class="label public">public</span>setContainer<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_DependencyInjection_ContainerInterface.xhtml">Symfony\Component\DependencyInjection\ContainerInterface</a></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the Container.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - A ContainerInterface instance or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="shutdown"/>
            <h4><span class="label public">public</span>shutdown<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Shutdowns the Bundle.</li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
