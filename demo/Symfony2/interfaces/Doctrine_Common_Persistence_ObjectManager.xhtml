<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Doctrine\Common\Persistence\ObjectManager - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#clear">clear</a>
          </li>
          <li>
            <a href="#contains">contains</a>
          </li>
          <li>
            <a href="#detach">detach</a>
          </li>
          <li>
            <a href="#find">find</a>
          </li>
          <li>
            <a href="#flush">flush</a>
          </li>
          <li>
            <a href="#getClassMetadata">getClassMetadata</a>
          </li>
          <li>
            <a href="#getMetadataFactory">getMetadataFactory</a>
          </li>
          <li>
            <a href="#getRepository">getRepository</a>
          </li>
          <li>
            <a href="#initializeObject">initializeObject</a>
          </li>
          <li>
            <a href="#merge">merge</a>
          </li>
          <li>
            <a href="#persist">persist</a>
          </li>
          <li>
            <a href="#refresh">refresh</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Doctrine\Common\Persistence\</span>ObjectManager</h2>
        <div class="file-notice">
          <p>Contract for a Doctrine persistence layer ObjectManager class to implement.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
          <li><b>Author: </b>Jonathan Wage &lt;jonwage@gmail.com&gt;</li>
          <li><b>License: </b>http://www.opensource.org/licenses/lgpl-license.php LGPL</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="clear"/>
            <h4><span class="label public">public</span>clear<span style="font-size:90%;">( <span class="param-type">string</span><strong> $objectName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the ObjectManager. All objects that are currently managed by this ObjectManager become detached.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$objectName</code> - if given, only objects of this type will get detached</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="contains"/>
            <h4><span class="label public">public</span>contains<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the object is part of the current UnitOfWork and therefore managed.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="detach"/>
            <h4><span class="label public">public</span>detach<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Detaches an object from the ObjectManager, causing a managed object to become detached. Unflushed changes made to the object if any (including removal of the object), will not be synchronized to the database.<pre>Objects which previously referenced the detached object will continue to
reference it.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - The object to detach.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="find"/>
            <h4><span class="label public">public</span>find<span style="font-size:90%;">( <span class="param-type"/><strong> $className</strong>, <span class="param-type"/><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds a object by its identifier.<pre>This is just a convenient shortcut for getRepository($className)-&gt;find($id).</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code/> - </li>
                <li><code/> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="flush"/>
            <h4><span class="label public">public</span>flush<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Flushes all changes to objects that have been queued up to now to the database.<pre>This effectively synchronizes the in-memory state of managed objects with the
database.</pre></li>
            </p>
          </li>
          <li>
            <a name="getClassMetadata"/>
            <h4><span class="label public">public</span>getClassMetadata<span style="font-size:90%;">( <span class="param-type">string</span><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the ClassMetadata descriptor for a class.<pre>The class name must be the fully-qualified class name without a leading backslash
(as it is returned by get_class($obj)).</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$className</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMetadataFactory"/>
            <h4><span class="label public">public</span>getMetadataFactory<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the metadata factory used to gather the metadata of classes.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRepository"/>
            <h4><span class="label public">public</span>getRepository<span style="font-size:90%;">( <span class="param-type">string</span><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the repository for a class.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$className</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initializeObject"/>
            <h4><span class="label public">public</span>initializeObject<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $obj</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Helper method to initialize a lazy loading proxy or persistent collection.<pre>This method is a no-op for other objects.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$obj</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="merge"/>
            <h4><span class="label public">public</span>merge<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Merges the state of a detached object into the persistence context of this ObjectManager and returns the managed copy of the object.<pre>The object passed to merge will not become associated/managed with this ObjectManager.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="persist"/>
            <h4><span class="label public">public</span>persist<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Tells the ObjectManager to make an instance managed and persistent.<pre>The object will be entered into the database as a result of the flush operation.

NOTE: The persist operation always considers objects that are not yet known to
this ObjectManager as NEW. Do not pass detached objects to the persist operation.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - The instance to make managed and persistent.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="refresh"/>
            <h4><span class="label public">public</span>refresh<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Refreshes the persistent state of an object from the database, overriding any local changes that have not yet been persisted.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - The object to refresh.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes an object instance.<pre>A removed object will be removed from the database as a result of the flush operation.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - The object instance to remove.</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
