<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpKernel\KernelInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#boot">boot</a>
          </li>
          <li>
            <a href="#getBundle">getBundle</a>
          </li>
          <li>
            <a href="#getBundles">getBundles</a>
          </li>
          <li>
            <a href="#getCacheDir">getCacheDir</a>
          </li>
          <li>
            <a href="#getCharset">getCharset</a>
          </li>
          <li>
            <a href="#getContainer">getContainer</a>
          </li>
          <li>
            <a href="#getEnvironment">getEnvironment</a>
          </li>
          <li>
            <a href="#getLogDir">getLogDir</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getRootDir">getRootDir</a>
          </li>
          <li>
            <a href="#getStartTime">getStartTime</a>
          </li>
          <li>
            <a href="#isClassInActiveBundle">isClassInActiveBundle</a>
          </li>
          <li>
            <a href="#isDebug">isDebug</a>
          </li>
          <li>
            <a href="#locateResource">locateResource</a>
          </li>
          <li>
            <a href="#registerBundles">registerBundles</a>
          </li>
          <li>
            <a href="#registerContainerConfiguration">registerContainerConfiguration</a>
          </li>
          <li>
            <a href="#shutdown">shutdown</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpKernel\</span>KernelInterface</h2>
        <div class="file-notice">
          <p>The Kernel is the heart of the Symfony system.</p>
          <p>
            <pre>It manages an environment made of bundles.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="boot"/>
            <h4><span class="label public">public</span>boot<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Boots the current kernel.</li>
            </p>
          </li>
          <li>
            <a name="getBundle"/>
            <h4><span class="label public">public</span>getBundle<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $first</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a bundle and optionally its descendants by its name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - Bundle name</li>
                <li><code>$first</code> - Whether to return the first bundle only or together with its descendants</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A BundleInterface instance or an array of BundleInterface instances if $first is false</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException when the bundle is not enabled</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getBundles"/>
            <h4><span class="label public">public</span>getBundles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the registered bundle instances.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of registered bundle instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCacheDir"/>
            <h4><span class="label public">public</span>getCacheDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the cache directory.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The cache directory</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCharset"/>
            <h4><span class="label public">public</span>getCharset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the charset of the application.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The charset</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainer"/>
            <h4><span class="label public">public</span>getContainer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the current container.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A ContainerInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getEnvironment"/>
            <h4><span class="label public">public</span>getEnvironment<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the environment.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current environment</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLogDir"/>
            <h4><span class="label public">public</span>getLogDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the log directory.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The log directory</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the name of the kernel</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The kernel name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRootDir"/>
            <h4><span class="label public">public</span>getRootDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the application root dir.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The application root dir</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getStartTime"/>
            <h4><span class="label public">public</span>getStartTime<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the request start time (not available if debug is disabled).</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The request start timestamp</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isClassInActiveBundle"/>
            <h4><span class="label public">public</span>isClassInActiveBundle<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if a given class name belongs to an active bundle.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - A class name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the class belongs to an active bundle, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isDebug"/>
            <h4><span class="label public">public</span>isDebug<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if debug mode is enabled.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if debug mode is enabled, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="locateResource"/>
            <h4><span class="label public">public</span>locateResource<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">string</span><strong> $dir</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $first</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the file path for a given resource.<pre>A Resource can be a file or a directory.

The resource name must follow the following pattern:

    @BundleName/path/to/a/file.something

where BundleName is the name of the bundle
and the remaining part is the relative path in the bundle.

If $dir is passed, and the first segment of the path is Resources,
this method will look for a file named:

    $dir/BundleName/path/without/Resources</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - A resource name to locate</li>
                <li><code>$dir</code> - A directory where to look for the resource first</li>
                <li><code>$first</code> - Whether to return the first path or paths for all matching bundles</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The absolute path of the resource or an array if $first is false</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException if the file cannot be found or the name is not valid</code>
                </li>
                <li>
                  <code>\RuntimeException         if the name contains invalid/unsafe characters</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerBundles"/>
            <h4><span class="label public">public</span>registerBundles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array of bundles to registers.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of bundle instances.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerContainerConfiguration"/>
            <h4><span class="label public">public</span>registerContainerConfiguration<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Config_Loader_LoaderInterface.xhtml">Symfony\Component\Config\Loader\LoaderInterface</a></span><strong> $loader</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads the container configuration</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$loader</code> - A LoaderInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="shutdown"/>
            <h4><span class="label public">public</span>shutdown<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Shutdowns the kernel.<pre>This method is mainly useful when doing functional testing.</pre></li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
