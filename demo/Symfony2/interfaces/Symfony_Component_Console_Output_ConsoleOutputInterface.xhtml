<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Console\Output\ConsoleOutputInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#getErrorOutput">getErrorOutput</a>
          </li>
          <li>
            <a href="#getFormatter">getFormatter</a>
          </li>
          <li>
            <a href="#getVerbosity">getVerbosity</a>
          </li>
          <li>
            <a href="#isDecorated">isDecorated</a>
          </li>
          <li>
            <a href="#setDecorated">setDecorated</a>
          </li>
          <li>
            <a href="#setErrorOutput">setErrorOutput</a>
          </li>
          <li>
            <a href="#setFormatter">setFormatter</a>
          </li>
          <li>
            <a href="#setVerbosity">setVerbosity</a>
          </li>
          <li>
            <a href="#write">write</a>
          </li>
          <li>
            <a href="#writeln">writeln</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Console\Output\</span>ConsoleOutputInterface</h2>
        <div class="file-notice">
          <p>ConsoleOutputInterface is the interface implemented by ConsoleOutput class.</p>
          <p>
            <pre>This adds information about stderr output stream.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Dariusz Górecki &lt;darek.krk@gmail.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist"/>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getErrorOutput"/>
            <h4><span class="label public">public</span>getErrorOutput<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the OutputInterface for errors.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFormatter"/>
            <h4><span class="label public">public</span>getFormatter<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns current output formatter instance.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getVerbosity"/>
            <h4><span class="label public">public</span>getVerbosity<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the current verbosity of the output.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The current level of verbosity (one of the VERBOSITY constants)</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isDecorated"/>
            <h4><span class="label public">public</span>isDecorated<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the decorated flag.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the output will decorate messages, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDecorated"/>
            <h4><span class="label public">public</span>setDecorated<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $decorated</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the decorated flag.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$decorated</code> - Whether to decorate the messages</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setErrorOutput"/>
            <h4><span class="label public">public</span>setErrorOutput<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Console_Output_OutputInterface.xhtml">Symfony\Component\Console\Output\OutputInterface</a></span><strong> $error</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the OutputInterface used for errors.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$error</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFormatter"/>
            <h4><span class="label public">public</span>setFormatter<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Console_Formatter_OutputFormatterInterface.xhtml">Symfony\Component\Console\Formatter\OutputFormatterInterface</a></span><strong> $formatter</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets output formatter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$formatter</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setVerbosity"/>
            <h4><span class="label public">public</span>setVerbosity<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $level</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the verbosity of the output.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$level</code> - The level of verbosity (one of the VERBOSITY constants)</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="write"/>
            <h4><span class="label public">public</span>write<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $messages</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $newline</strong>, <span class="param-type">integer</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Writes a message to the output.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$messages</code> - The message as an array of lines or a single string</li>
                <li><code>$newline</code> - Whether to add a newline</li>
                <li><code>$type</code> - The type of output (one of the OUTPUT constants)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When unknown output type is given</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="writeln"/>
            <h4><span class="label public">public</span>writeln<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $messages</strong>, <span class="param-type">integer</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Writes a message to the output and adds a newline at the end.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$messages</code> - The message as an array of lines of a single string</li>
                <li><code>$type</code> - The type of output (one of the OUTPUT constants)</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException When unknown output type is given</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
