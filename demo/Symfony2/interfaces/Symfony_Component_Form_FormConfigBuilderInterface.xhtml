<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Form\FormConfigBuilderInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#addEventListener">addEventListener</a>
          </li>
          <li>
            <a href="#addEventSubscriber">addEventSubscriber</a>
          </li>
          <li>
            <a href="#addModelTransformer">addModelTransformer</a>
          </li>
          <li>
            <a href="#addViewTransformer">addViewTransformer</a>
          </li>
          <li>
            <a href="#getAction">getAction</a>
          </li>
          <li>
            <a href="#getAttribute">getAttribute</a>
          </li>
          <li>
            <a href="#getAttributes">getAttributes</a>
          </li>
          <li>
            <a href="#getAutoInitialize">getAutoInitialize</a>
          </li>
          <li>
            <a href="#getByReference">getByReference</a>
          </li>
          <li>
            <a href="#getCompound">getCompound</a>
          </li>
          <li>
            <a href="#getData">getData</a>
          </li>
          <li>
            <a href="#getDataClass">getDataClass</a>
          </li>
          <li>
            <a href="#getDataLocked">getDataLocked</a>
          </li>
          <li>
            <a href="#getDataMapper">getDataMapper</a>
          </li>
          <li>
            <a href="#getDisabled">getDisabled</a>
          </li>
          <li>
            <a href="#getEmptyData">getEmptyData</a>
          </li>
          <li>
            <a href="#getErrorBubbling">getErrorBubbling</a>
          </li>
          <li>
            <a href="#getEventDispatcher">getEventDispatcher</a>
          </li>
          <li>
            <a href="#getFormConfig">getFormConfig</a>
          </li>
          <li>
            <a href="#getFormFactory">getFormFactory</a>
          </li>
          <li>
            <a href="#getInheritData">getInheritData</a>
          </li>
          <li>
            <a href="#getMapped">getMapped</a>
          </li>
          <li>
            <a href="#getMethod">getMethod</a>
          </li>
          <li>
            <a href="#getModelTransformers">getModelTransformers</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getOption">getOption</a>
          </li>
          <li>
            <a href="#getOptions">getOptions</a>
          </li>
          <li>
            <a href="#getPropertyPath">getPropertyPath</a>
          </li>
          <li>
            <a href="#getRequestHandler">getRequestHandler</a>
          </li>
          <li>
            <a href="#getRequired">getRequired</a>
          </li>
          <li>
            <a href="#getType">getType</a>
          </li>
          <li>
            <a href="#getViewTransformers">getViewTransformers</a>
          </li>
          <li>
            <a href="#hasAttribute">hasAttribute</a>
          </li>
          <li>
            <a href="#hasOption">hasOption</a>
          </li>
          <li>
            <a href="#resetModelTransformers">resetModelTransformers</a>
          </li>
          <li>
            <a href="#resetViewTransformers">resetViewTransformers</a>
          </li>
          <li>
            <a href="#setAction">setAction</a>
          </li>
          <li>
            <a href="#setAttribute">setAttribute</a>
          </li>
          <li>
            <a href="#setAttributes">setAttributes</a>
          </li>
          <li>
            <a href="#setAutoInitialize">setAutoInitialize</a>
          </li>
          <li>
            <a href="#setByReference">setByReference</a>
          </li>
          <li>
            <a href="#setCompound">setCompound</a>
          </li>
          <li>
            <a href="#setData">setData</a>
          </li>
          <li>
            <a href="#setDataLocked">setDataLocked</a>
          </li>
          <li>
            <a href="#setDataMapper">setDataMapper</a>
          </li>
          <li>
            <a href="#setDisabled">setDisabled</a>
          </li>
          <li>
            <a href="#setEmptyData">setEmptyData</a>
          </li>
          <li>
            <a href="#setErrorBubbling">setErrorBubbling</a>
          </li>
          <li>
            <a href="#setFormFactory">setFormFactory</a>
          </li>
          <li>
            <a href="#setInheritData">setInheritData</a>
          </li>
          <li>
            <a href="#setMapped">setMapped</a>
          </li>
          <li>
            <a href="#setMethod">setMethod</a>
          </li>
          <li>
            <a href="#setPropertyPath">setPropertyPath</a>
          </li>
          <li>
            <a href="#setRequestHandler">setRequestHandler</a>
          </li>
          <li>
            <a href="#setRequired">setRequired</a>
          </li>
          <li>
            <a href="#setType">setType</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Form\</span>FormConfigBuilderInterface</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addEventListener"/>
            <h4><span class="label public">public</span>addEventListener<span style="font-size:90%;">( <span class="param-type">string</span><strong> $eventName</strong>, <span class="param-type"><span title="callable">callable</span></span><strong> $listener</strong>, <span class="param-type">integer</span><strong> $priority</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an event listener to an event on this form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$eventName</code> - The name of the event to listen to.</li>
                <li><code>$listener</code> - The listener to execute.</li>
                <li><code>$priority</code> - The priority of the listener. Listeners</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addEventSubscriber"/>
            <h4><span class="label public">public</span>addEventSubscriber<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_EventDispatcher_EventSubscriberInterface.xhtml">Symfony\Component\EventDispatcher\EventSubscriberInterface</a></span><strong> $subscriber</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an event subscriber for events on this form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subscriber</code> - The subscriber to attach.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addModelTransformer"/>
            <h4><span class="label public">public</span>addModelTransformer<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_DataTransformerInterface.xhtml">Symfony\Component\Form\DataTransformerInterface</a></span><strong> $modelTransformer</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $forceAppend</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepends / appends a transformer to the normalization transformer chain.<pre>The transform method of the transformer is used to convert data from the
model to the normalized format.
The reverseTransform method of the transformer is used to convert from the
normalized to the model format.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$modelTransformer</code> - </li>
                <li><code>$forceAppend</code> - if set to true, append instead of prepending</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addViewTransformer"/>
            <h4><span class="label public">public</span>addViewTransformer<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_DataTransformerInterface.xhtml">Symfony\Component\Form\DataTransformerInterface</a></span><strong> $viewTransformer</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $forcePrepend</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Appends / prepends a transformer to the view transformer chain.<pre>The transform method of the transformer is used to convert data from the
normalized to the view format.
The reverseTransform method of the transformer is used to convert from the
view to the normalized format.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$viewTransformer</code> - </li>
                <li><code>$forcePrepend</code> - if set to true, prepend instead of appending</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAction"/>
            <h4><span class="label public">public</span>getAction<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the target URL of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The target URL of the form.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttribute"/>
            <h4><span class="label public">public</span>getAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">mixed</span><strong> $default</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of the given attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The attribute name.</li>
                <li><code>$default</code> - The value returned if the attribute does not exist.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The attribute value.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttributes"/>
            <h4><span class="label public">public</span>getAttributes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns additional attributes of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of key-value combinations.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAutoInitialize"/>
            <h4><span class="label public">public</span>getAutoInitialize<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form should be initialized upon creation.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Returns true if the form should be initialized</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getByReference"/>
            <h4><span class="label public">public</span>getByReference<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form's data should be modified by reference.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether to modify the form's data by reference.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCompound"/>
            <h4><span class="label public">public</span>getCompound<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form is compound.<pre>This property is independent of whether the form actually has
children. A form can be compound and have no children at all, like
for example an empty collection form.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the form is compound.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getData"/>
            <h4><span class="label public">public</span>getData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the initial data of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The initial form data.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDataClass"/>
            <h4><span class="label public">public</span>getDataClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the class of the form data or null if the data is scalar or an array.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The data class or null.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDataLocked"/>
            <h4><span class="label public">public</span>getDataLocked<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form's data is locked.<pre>A form with locked data is restricted to the data passed in
this configuration. The data can only be modified then by
submitting the form.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the data is locked.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDataMapper"/>
            <h4><span class="label public">public</span>getDataMapper<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the data mapper of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The data mapper.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDisabled"/>
            <h4><span class="label public">public</span>getDisabled<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form is disabled.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the form is disabled.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getEmptyData"/>
            <h4><span class="label public">public</span>getEmptyData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the data that should be returned when the form is empty.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The data returned if the form is empty.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getErrorBubbling"/>
            <h4><span class="label public">public</span>getErrorBubbling<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether errors attached to the form will bubble to its parent.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether errors will bubble up.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getEventDispatcher"/>
            <h4><span class="label public">public</span>getEventDispatcher<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the event dispatcher used to dispatch form events.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The dispatcher.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFormConfig"/>
            <h4><span class="label public">public</span>getFormConfig<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Builds and returns the form configuration.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFormFactory"/>
            <h4><span class="label public">public</span>getFormFactory<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the form factory used for creating new forms.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form factory.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInheritData"/>
            <h4><span class="label public">public</span>getInheritData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form should read and write the data of its parent.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the form should inherit its parent's data.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMapped"/>
            <h4><span class="label public">public</span>getMapped<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form should be mapped to an element of its parent's data.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the form is mapped.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMethod"/>
            <h4><span class="label public">public</span>getMethod<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the HTTP method used by the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The HTTP method of the form.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getModelTransformers"/>
            <h4><span class="label public">public</span>getModelTransformers<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the model transformers of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of {@link DataTransformerInterface} instances.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the name of the form used as HTTP parameter.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOption"/>
            <h4><span class="label public">public</span>getOption<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">mixed</span><strong> $default</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of a specific option.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The option name.</li>
                <li><code>$default</code> - The value returned if the option does not exist.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The option value.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOptions"/>
            <h4><span class="label public">public</span>getOptions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all options passed during the construction of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The passed options.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPropertyPath"/>
            <h4><span class="label public">public</span>getPropertyPath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the property path that the form should be mapped to.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The property path.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRequestHandler"/>
            <h4><span class="label public">public</span>getRequestHandler<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the request handler used by the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The request handler.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRequired"/>
            <h4><span class="label public">public</span>getRequired<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form is required.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the form is required.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getType"/>
            <h4><span class="label public">public</span>getType<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the form types used to construct the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form's type.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getViewTransformers"/>
            <h4><span class="label public">public</span>getViewTransformers<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the view transformers of the form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of {@link DataTransformerInterface} instances.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasAttribute"/>
            <h4><span class="label public">public</span>hasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the attribute with the given name exists.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The attribute name.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the attribute exists.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasOption"/>
            <h4><span class="label public">public</span>hasOption<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether a specific option exists.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The option name,</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Whether the option exists.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resetModelTransformers"/>
            <h4><span class="label public">public</span>resetModelTransformers<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the normalization transformers.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resetViewTransformers"/>
            <h4><span class="label public">public</span>resetViewTransformers<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the view transformers.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAction"/>
            <h4><span class="label public">public</span>setAction<span style="font-size:90%;">( <span class="param-type">string</span><strong> $action</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the target URL of the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$action</code> - The target URL of the form.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttribute"/>
            <h4><span class="label public">public</span>setAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the value for an attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the attribute</li>
                <li><code>$value</code> - The value of the attribute</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttributes"/>
            <h4><span class="label public">public</span>setAttributes<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $attributes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the attributes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributes</code> - The attributes.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAutoInitialize"/>
            <h4><span class="label public">public</span>setAutoInitialize<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $initialize</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the form should be initialized automatically.<pre>Should be set to true only for root forms.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$initialize</code> - True to initialize the form automatically,</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setByReference"/>
            <h4><span class="label public">public</span>setByReference<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $byReference</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the form's data should be modified by reference.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$byReference</code> - Whether the data should be</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCompound"/>
            <h4><span class="label public">public</span>setCompound<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $compound</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the form should be compound.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$compound</code> - Whether the form should be compound.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setData"/>
            <h4><span class="label public">public</span>setData<span style="font-size:90%;">( <span class="param-type">array</span><strong> $data</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the initial data of the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$data</code> - The data of the form in application format.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDataLocked"/>
            <h4><span class="label public">public</span>setDataLocked<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $locked</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Locks the form's data to the data passed in the configuration.<pre>A form with locked data is restricted to the data passed in
this configuration. The data can only be modified then by
submitting the form.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$locked</code> - Whether to lock the default data.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDataMapper"/>
            <h4><span class="label public">public</span>setDataMapper<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_DataMapperInterface.xhtml">Symfony\Component\Form\DataMapperInterface</a></span><strong> $dataMapper</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the data mapper used by the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dataMapper</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDisabled"/>
            <h4><span class="label public">public</span>setDisabled<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $disabled</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set whether the form is disabled.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$disabled</code> - Whether the form is disabled</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setEmptyData"/>
            <h4><span class="label public">public</span>setEmptyData<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $emptyData</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the data used for the client data when no value is submitted.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$emptyData</code> - The empty data.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setErrorBubbling"/>
            <h4><span class="label public">public</span>setErrorBubbling<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $errorBubbling</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether errors bubble up to the parent.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$errorBubbling</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFormFactory"/>
            <h4><span class="label public">public</span>setFormFactory<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_FormFactoryInterface.xhtml">Symfony\Component\Form\FormFactoryInterface</a></span><strong> $formFactory</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the form factory used for creating new forms.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$formFactory</code> - The form factory.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setInheritData"/>
            <h4><span class="label public">public</span>setInheritData<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $inheritData</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the form should read and write the data of its parent.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$inheritData</code> - Whether the form should inherit its parent's data.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMapped"/>
            <h4><span class="label public">public</span>setMapped<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $mapped</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the form should be mapped to an element of its parent's data.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$mapped</code> - Whether the form should be mapped.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMethod"/>
            <h4><span class="label public">public</span>setMethod<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the HTTP method used by the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - The HTTP method of the form.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPropertyPath"/>
            <h4><span class="label public">public</span>setPropertyPath<span style="font-size:90%;">( <span class="param-type"><span title="null|string|\Symfony\Component\PropertyAccess\PropertyPathInterface">PropertyPathInterface</span></span><strong> $propertyPath</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the property path that the form should be mapped to.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$propertyPath</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRequestHandler"/>
            <h4><span class="label public">public</span>setRequestHandler<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_RequestHandlerInterface.xhtml">Symfony\Component\Form\RequestHandlerInterface</a></span><strong> $requestHandler</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the request handler used by the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$requestHandler</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRequired"/>
            <h4><span class="label public">public</span>setRequired<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $required</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether this field is required to be filled out when submitted.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$required</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setType"/>
            <h4><span class="label public">public</span>setType<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_ResolvedFormTypeInterface.xhtml">Symfony\Component\Form\ResolvedFormTypeInterface</a></span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the types.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - The type of the form.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration object.</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
