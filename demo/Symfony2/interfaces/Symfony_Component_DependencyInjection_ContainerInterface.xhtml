<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\DependencyInjection\ContainerInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#EXCEPTION_ON_INVALID_REFERENCE">EXCEPTION_ON_INVALID_REFERENCE</a>
          </li>
          <li>
            <a href="#NULL_ON_INVALID_REFERENCE">NULL_ON_INVALID_REFERENCE</a>
          </li>
          <li>
            <a href="#IGNORE_ON_INVALID_REFERENCE">IGNORE_ON_INVALID_REFERENCE</a>
          </li>
          <li>
            <a href="#SCOPE_CONTAINER">SCOPE_CONTAINER</a>
          </li>
          <li>
            <a href="#SCOPE_PROTOTYPE">SCOPE_PROTOTYPE</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#addScope">addScope</a>
          </li>
          <li>
            <a href="#enterScope">enterScope</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getParameter">getParameter</a>
          </li>
          <li>
            <a href="#has">has</a>
          </li>
          <li>
            <a href="#hasParameter">hasParameter</a>
          </li>
          <li>
            <a href="#hasScope">hasScope</a>
          </li>
          <li>
            <a href="#isScopeActive">isScopeActive</a>
          </li>
          <li>
            <a href="#leaveScope">leaveScope</a>
          </li>
          <li>
            <a href="#set">set</a>
          </li>
          <li>
            <a href="#setParameter">setParameter</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\DependencyInjection\</span>ContainerInterface</h2>
        <div class="file-notice">
          <p>ContainerInterface is the interface implemented by service container classes.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="EXCEPTION_ON_INVALID_REFERENCE"/>EXCEPTION_ON_INVALID_REFERENCE = 1<hr/></li>
          <li><a name="NULL_ON_INVALID_REFERENCE"/>NULL_ON_INVALID_REFERENCE = 2<hr/></li>
          <li><a name="IGNORE_ON_INVALID_REFERENCE"/>IGNORE_ON_INVALID_REFERENCE = 3<hr/></li>
          <li><a name="SCOPE_CONTAINER"/>SCOPE_CONTAINER = 'container'<hr/></li>
          <li><a name="SCOPE_PROTOTYPE"/>SCOPE_PROTOTYPE = 'prototype'<hr/></li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addScope"/>
            <h4><span class="label public">public</span>addScope<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_DependencyInjection_ScopeInterface.xhtml">Symfony\Component\DependencyInjection\ScopeInterface</a></span><strong> $scope</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a scope to the container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$scope</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="enterScope"/>
            <h4><span class="label public">public</span>enterScope<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Enters the given scope</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $id</strong>, <span class="param-type">int</span><strong> $invalidBehavior</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a service.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$id</code> - The service identifier</li>
                <li><code>$invalidBehavior</code> - The behavior when the service does not exist</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The associated service</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidArgumentException if the service is not defined</code>
                </li>
                <li>
                  <code>ServiceCircularReferenceException When a circular reference is detected</code>
                </li>
                <li>
                  <code>ServiceNotFoundException When the service is not defined</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getParameter"/>
            <h4><span class="label public">public</span>getParameter<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a parameter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The parameter name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parameter value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>InvalidArgumentException if the parameter is not defined</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="has"/>
            <h4><span class="label public">public</span>has<span style="font-size:90%;">( <span class="param-type">string</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if the given service is defined.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$id</code> - The service identifier</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the service is defined, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasParameter"/>
            <h4><span class="label public">public</span>hasParameter<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if a parameter exists.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The parameter name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The presence of parameter in container</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasScope"/>
            <h4><span class="label public">public</span>hasScope<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this container has the given scope</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isScopeActive"/>
            <h4><span class="label public">public</span>isScopeActive<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines whether the given scope is currently active.<pre>It does however not check if the scope actually exists.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="leaveScope"/>
            <h4><span class="label public">public</span>leaveScope<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Leaves the current scope, and re-enters the parent scope</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="set"/>
            <h4><span class="label public">public</span>set<span style="font-size:90%;">( <span class="param-type">string</span><strong> $id</strong>, <span class="param-type">invalid method call</span><strong> $service</strong>, <span class="param-type">string</span><strong> $scope</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a service.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$id</code> - The service identifier</li>
                <li><code>$service</code> - The service instance</li>
                <li><code>$scope</code> - The scope of the service</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParameter"/>
            <h4><span class="label public">public</span>setParameter<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a parameter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The parameter name</li>
                <li><code>$value</code> - The parameter value</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
