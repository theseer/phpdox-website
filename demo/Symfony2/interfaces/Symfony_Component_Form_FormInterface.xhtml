<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Form\FormInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#add">add</a>
          </li>
          <li>
            <a href="#addError">addError</a>
          </li>
          <li>
            <a href="#all">all</a>
          </li>
          <li>
            <a href="#createView">createView</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getConfig">getConfig</a>
          </li>
          <li>
            <a href="#getData">getData</a>
          </li>
          <li>
            <a href="#getErrors">getErrors</a>
          </li>
          <li>
            <a href="#getExtraData">getExtraData</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getNormData">getNormData</a>
          </li>
          <li>
            <a href="#getParent">getParent</a>
          </li>
          <li>
            <a href="#getPropertyPath">getPropertyPath</a>
          </li>
          <li>
            <a href="#getRoot">getRoot</a>
          </li>
          <li>
            <a href="#getViewData">getViewData</a>
          </li>
          <li>
            <a href="#handleRequest">handleRequest</a>
          </li>
          <li>
            <a href="#has">has</a>
          </li>
          <li>
            <a href="#initialize">initialize</a>
          </li>
          <li>
            <a href="#isDisabled">isDisabled</a>
          </li>
          <li>
            <a href="#isEmpty">isEmpty</a>
          </li>
          <li>
            <a href="#isRequired">isRequired</a>
          </li>
          <li>
            <a href="#isRoot">isRoot</a>
          </li>
          <li>
            <a href="#isSubmitted">isSubmitted</a>
          </li>
          <li>
            <a href="#isSynchronized">isSynchronized</a>
          </li>
          <li>
            <a href="#isValid">isValid</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
          <li>
            <a href="#setData">setData</a>
          </li>
          <li>
            <a href="#setParent">setParent</a>
          </li>
          <li>
            <a href="#submit">submit</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Form\</span>FormInterface</h2>
        <div class="file-notice">
          <p>A form group bundling multiple forms in a hierarchical structure.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="add"/>
            <h4><span class="label public">public</span>add<span style="font-size:90%;">( <span class="param-type"><span title="FormInterface|string|integer">FormInterface|string|integer</span></span><strong> $child</strong>, <span class="param-type"><span title="string|null">string|null</span></span><strong> $type</strong>, <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a child to the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$child</code> - The FormInterface instance or the name of the child.</li>
                <li><code>$type</code> - The child's type, if a name was passed.</li>
                <li><code>$options</code> - The child's options, if a name was passed.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\AlreadySubmittedException   If the form has already been submitted.</code>
                </li>
                <li>
                  <code>Exception\LogicException          When trying to add a child to a non-compound form.</code>
                </li>
                <li>
                  <code>Exception\UnexpectedTypeException If $child or $type has an unexpected type.</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addError"/>
            <h4><span class="label public">public</span>addError<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Form_FormError.xhtml">Symfony\Component\Form\FormError</a></span><strong> $error</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an error to this form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$error</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="all"/>
            <h4><span class="label public">public</span>all<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all children in this group.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of FormInterface instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createView"/>
            <h4><span class="label public">public</span>createView<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Symfony_Component_Form_FormView.xhtml">Symfony\Component\Form\FormView</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a view.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parent</code> - The parent view</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The view</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the child with the given name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the child</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The child form</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\OutOfBoundsException If the named child does not exist.</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getConfig"/>
            <h4><span class="label public">public</span>getConfig<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the form's configuration.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The configuration.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getData"/>
            <h4><span class="label public">public</span>getData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the data in the format needed for the underlying object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getErrors"/>
            <h4><span class="label public">public</span>getErrors<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all errors.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>An array of FormError instances that occurred during validation</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExtraData"/>
            <h4><span class="label public">public</span>getExtraData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the extra data.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The submitted data which do not belong to a child</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the name by which the form is identified in forms.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The name of the form.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNormData"/>
            <h4><span class="label public">public</span>getNormData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the normalized data of the field.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>When the field is not submitted, the default data is returned.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getParent"/>
            <h4><span class="label public">public</span>getParent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the parent form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The parent form or null if there is none.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPropertyPath"/>
            <h4><span class="label public">public</span>getPropertyPath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the property path that the form is mapped to.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The property path.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRoot"/>
            <h4><span class="label public">public</span>getRoot<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the root of the form tree.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The root of the tree</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getViewData"/>
            <h4><span class="label public">public</span>getViewData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the data transformed by the value transformer.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="handleRequest"/>
            <h4><span class="label public">public</span>handleRequest<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $request</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Inspects the given request and calls {@link submit()} if the form was submitted.<pre>Internally, the request is forwarded to the configured
{@link RequestHandlerInterface} instance, which determines whether to
submit the form or not.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$request</code> - The request to handle.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="has"/>
            <h4><span class="label public">public</span>has<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether a child with the given name exists.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the child</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="initialize"/>
            <h4><span class="label public">public</span>initialize<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes the form tree.<pre>Should be called on the root form after constructing the tree.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isDisabled"/>
            <h4><span class="label public">public</span>isDisabled<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether this form is disabled.<pre>The content of a disabled form is displayed, but not allowed to be
modified. The validation of modified disabled forms should fail.

Forms whose parents are disabled are considered disabled regardless of
their own state.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isEmpty"/>
            <h4><span class="label public">public</span>isEmpty<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form is empty.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRequired"/>
            <h4><span class="label public">public</span>isRequired<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form is required to be filled out.<pre>If the form has a parent and the parent is not required, this method
will always return false. Otherwise the value set with setRequired()
is returned.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isRoot"/>
            <h4><span class="label public">public</span>isRoot<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the field is the root of the form tree.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSubmitted"/>
            <h4><span class="label public">public</span>isSubmitted<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form is submitted.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>true if the form is submitted, false otherwise</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSynchronized"/>
            <h4><span class="label public">public</span>isSynchronized<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the data in the different formats is synchronized.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isValid"/>
            <h4><span class="label public">public</span>isValid<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the form and all children are valid.<pre>If the form is not submitted, this method always returns false.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes a child from the form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - The name of the child to remove</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\AlreadySubmittedException If the form has already been submitted.</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setData"/>
            <h4><span class="label public">public</span>setData<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $modelData</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Updates the form with default data.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$modelData</code> - The data formatted as expected for the underlying object</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\AlreadySubmittedException If the form has already been submitted.</code>
                </li>
                <li>
                  <code>Exception\LogicException        If listeners try to call setData in a cycle. Or if</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParent"/>
            <h4><span class="label public">public</span>setParent<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Form_FormInterface.xhtml">Symfony\Component\Form\FormInterface</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the parent form.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parent</code> - The parent form or null if it's the root.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\AlreadySubmittedException If the form has already been submitted.</code>
                </li>
                <li>
                  <code>Exception\LogicException        When trying to set a parent for a form with</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="submit"/>
            <h4><span class="label public">public</span>submit<span style="font-size:90%;">( <span class="param-type"><span title="null|string|array">null|string|array</span></span><strong> $submittedData</strong>, <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $clearMissing</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Submits data to the form, transforms and validates it.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$submittedData</code> - The submitted data.</li>
                <li><code>$clearMissing</code> - Whether to set fields to NULL</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The form instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\AlreadySubmittedException If the form has already been submitted.</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
