<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Swift_Mime_Message - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#generateId">generateId</a>
          </li>
          <li>
            <a href="#getBcc">getBcc</a>
          </li>
          <li>
            <a href="#getBody">getBody</a>
          </li>
          <li>
            <a href="#getCc">getCc</a>
          </li>
          <li>
            <a href="#getChildren">getChildren</a>
          </li>
          <li>
            <a href="#getContentType">getContentType</a>
          </li>
          <li>
            <a href="#getDate">getDate</a>
          </li>
          <li>
            <a href="#getFrom">getFrom</a>
          </li>
          <li>
            <a href="#getHeaders">getHeaders</a>
          </li>
          <li>
            <a href="#getId">getId</a>
          </li>
          <li>
            <a href="#getNestingLevel">getNestingLevel</a>
          </li>
          <li>
            <a href="#getReplyTo">getReplyTo</a>
          </li>
          <li>
            <a href="#getReturnPath">getReturnPath</a>
          </li>
          <li>
            <a href="#getSender">getSender</a>
          </li>
          <li>
            <a href="#getSubject">getSubject</a>
          </li>
          <li>
            <a href="#getTo">getTo</a>
          </li>
          <li>
            <a href="#setBcc">setBcc</a>
          </li>
          <li>
            <a href="#setBody">setBody</a>
          </li>
          <li>
            <a href="#setCc">setCc</a>
          </li>
          <li>
            <a href="#setChildren">setChildren</a>
          </li>
          <li>
            <a href="#setDate">setDate</a>
          </li>
          <li>
            <a href="#setFrom">setFrom</a>
          </li>
          <li>
            <a href="#setReplyTo">setReplyTo</a>
          </li>
          <li>
            <a href="#setReturnPath">setReturnPath</a>
          </li>
          <li>
            <a href="#setSender">setSender</a>
          </li>
          <li>
            <a href="#setSubject">setSubject</a>
          </li>
          <li>
            <a href="#setTo">setTo</a>
          </li>
          <li>
            <a href="#toByteStream">toByteStream</a>
          </li>
          <li>
            <a href="#toString">toString</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>Swift_Mime_Message</h2>
        <div class="file-notice">
          <p>A Message (RFC 2822) object.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Chris Corbyn</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist"/>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="generateId"/>
            <h4><span class="label public">public</span>generateId<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Generates a valid Message-ID and switches to it.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getBcc"/>
            <h4><span class="label public">public</span>getBcc<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the Bcc addresses for this message.<pre>This method always returns an associative array, whereby the keys provide
the actual email addresses.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getBody"/>
            <h4><span class="label public">public</span>getBody<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the body content of this entity as a string.<pre>Returns NULL if no body has been set.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCc"/>
            <h4><span class="label public">public</span>getCc<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the Cc addresses for this message.<pre>This method always returns an associative array, whereby the keys provide
the actual email addresses.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getChildren"/>
            <h4><span class="label public">public</span>getChildren<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get all children nested inside this entity.<pre>These are not just the immediate children, but all children.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContentType"/>
            <h4><span class="label public">public</span>getContentType<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the qualified content-type of this mime entity.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDate"/>
            <h4><span class="label public">public</span>getDate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the origination date of the message as a UNIX timestamp.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFrom"/>
            <h4><span class="label public">public</span>getFrom<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the From address(es) of this message.<pre>This method always returns an associative array where the keys are the
addresses.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHeaders"/>
            <h4><span class="label public">public</span>getHeaders<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the collection of Headers in this Mime entity.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getId"/>
            <h4><span class="label public">public</span>getId<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a unique ID for this entity.<pre>For most entities this will likely be the Content-ID, though it has
no explicit semantic meaning and can be considered an identifier for
programming logic purposes.

If a Content-ID header is present, this value SHOULD match the value of
the header.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNestingLevel"/>
            <h4><span class="label public">public</span>getNestingLevel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the level at which this entity shall be nested in final document.<pre>The lower the value, the more outermost the entity will be nested.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getReplyTo"/>
            <h4><span class="label public">public</span>getReplyTo<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the Reply-To addresses for this message.<pre>This method always returns an associative array where the keys provide the
email addresses.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getReturnPath"/>
            <h4><span class="label public">public</span>getReturnPath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the return-path (bounce-detect) address.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSender"/>
            <h4><span class="label public">public</span>getSender<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the sender address for this message.<pre>This has a higher significance than the From address.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSubject"/>
            <h4><span class="label public">public</span>getSubject<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the subject of the message.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTo"/>
            <h4><span class="label public">public</span>getTo<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the To addresses for this message.<pre>This method always returns an associative array, whereby the keys provide
the actual email addresses.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setBcc"/>
            <h4><span class="label public">public</span>setBcc<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $addresses</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the Bcc address(es).<pre>Recipients set in this field will receive a 'blind-carbon-copy' of this
message.
In other words, they will get the message, but any other recipients of the
message will have no such knowledge of their receipt of it.
This method has the same synopsis as  and .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$addresses</code> - </li>
                <li><code>$name</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setBody"/>
            <h4><span class="label public">public</span>setBody<span style="font-size:90%;">( <span class="param-type">string</span><strong> $body</strong>, <span class="param-type">string</span><strong> $contentType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the body content of this entity as a string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$body</code> - </li>
                <li><code>$contentType</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCc"/>
            <h4><span class="label public">public</span>setCc<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $addresses</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the Cc address(es).<pre>Recipients set in this field will receive a 'carbon-copy' of this message.
This method has the same synopsis as  and .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$addresses</code> - </li>
                <li><code>$name</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setChildren"/>
            <h4><span class="label public">public</span>setChildren<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $children</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set all children nested inside this entity.<pre>This includes grandchildren.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$children</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDate"/>
            <h4><span class="label public">public</span>setDate<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $date</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the origination date of the message as a UNIX timestamp.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$date</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFrom"/>
            <h4><span class="label public">public</span>setFrom<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $addresses</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the From address of this message.<pre>It is permissible for multiple From addresses to be set using an array.

If multiple From addresses are used, you SHOULD set the Sender address and
according to RFC 2822, MUST set the sender address.

An array can be used if display names are to be provided: i.e.
array('email@address.com' =&gt; 'Real Name').

If the second parameter is provided and the first is a string, then $name
is associated with the address.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$addresses</code> - </li>
                <li><code>$name</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setReplyTo"/>
            <h4><span class="label public">public</span>setReplyTo<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $addresses</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the Reply-To address(es).<pre>Any replies from the receiver will be sent to this address.
It is permissible for multiple reply-to addresses to be set using an array.
This method has the same synopsis as  and .
If the second parameter is provided and the first is a string, then $name
is associated with the address.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$addresses</code> - </li>
                <li><code>$name</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setReturnPath"/>
            <h4><span class="label public">public</span>setReturnPath<span style="font-size:90%;">( <span class="param-type">string</span><strong> $address</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the return-path (bounce-detect) address.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$address</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSender"/>
            <h4><span class="label public">public</span>setSender<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $address</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the sender of this message.<pre>If multiple addresses are present in the From field, this SHOULD be set.

According to RFC 2822 it is a requirement when there are multiple From
addresses, but Swift itself does not require it directly.

An associative array (with one element!) can be used to provide a display-
name: i.e. array('email@address' =&gt; 'Real Name').

If the second parameter is provided and the first is a string, then $name
is associated with the address.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$address</code> - </li>
                <li><code>$name</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSubject"/>
            <h4><span class="label public">public</span>setSubject<span style="font-size:90%;">( <span class="param-type">string</span><strong> $subject</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the subject of the message.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$subject</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTo"/>
            <h4><span class="label public">public</span>setTo<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $addresses</strong>, <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the To address(es).<pre>Recipients set in this field will receive a copy of this message.
This method has the same synopsis as  and .
If the second parameter is provided and the first is a string, then $name
is associated with the address.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$addresses</code> - </li>
                <li><code>$name</code> - optional</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toByteStream"/>
            <h4><span class="label public">public</span>toByteStream<span style="font-size:90%;">( <span class="param-type"><span title="\\Swift_InputByteStream">Swift_InputByteStream</span></span><strong> $is</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get this entire entity as a ByteStream.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$is</code> - to write to</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toString"/>
            <h4><span class="label public">public</span>toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get this entire entity in its string form.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
