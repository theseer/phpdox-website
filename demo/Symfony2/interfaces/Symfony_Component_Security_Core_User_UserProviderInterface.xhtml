<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\Security\Core\User\UserProviderInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#loadUserByUsername">loadUserByUsername</a>
          </li>
          <li>
            <a href="#refreshUser">refreshUser</a>
          </li>
          <li>
            <a href="#supportsClass">supportsClass</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\Security\Core\User\</span>UserProviderInterface</h2>
        <div class="file-notice">
          <p>Represents a class that loads UserInterface objects from some source for the authentication system.</p>
          <p>
            <pre>In a typical authentication configuration, a username (i.e. some unique
user identifier) credential enters the system (via form login, or any
method). The user provider that is configured with that authentication
method is asked to load the UserInterface object for the given username
(via loadUserByUsername) so that the rest of the process can continue.

Internally, a user provider can load users from any source (databases,
configuration, web service). This is totally independent of how the authentication
information is submitted or what the UserInterface object looks like.</pre>
          </p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="loadUserByUsername"/>
            <h4><span class="label public">public</span>loadUserByUsername<span style="font-size:90%;">( <span class="param-type">string</span><strong> $username</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads the user for the given username.<pre>This method must throw UsernameNotFoundException if the user is not
found.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$username</code> - The username</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>UsernameNotFoundException if the user is not found</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="refreshUser"/>
            <h4><span class="label public">public</span>refreshUser<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_Security_Core_User_UserInterface.xhtml">Symfony\Component\Security\Core\User\UserInterface</a></span><strong> $user</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Refreshes the user for the account interface.<pre>It is up to the implementation to decide if the user data should be
totally reloaded (e.g. from the database), or if the UserInterface
object can just be merged into some internal array of users / identity
map.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$user</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>UnsupportedUserException if the account is not supported</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="supportsClass"/>
            <h4><span class="label public">public</span>supportsClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether this provider supports the given user class</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
