<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Symfony2 - Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">Symfony2 - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#clear">clear</a>
          </li>
          <li>
            <a href="#getBag">getBag</a>
          </li>
          <li>
            <a href="#getId">getId</a>
          </li>
          <li>
            <a href="#getMetadataBag">getMetadataBag</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#isStarted">isStarted</a>
          </li>
          <li>
            <a href="#regenerate">regenerate</a>
          </li>
          <li>
            <a href="#registerBag">registerBag</a>
          </li>
          <li>
            <a href="#save">save</a>
          </li>
          <li>
            <a href="#setId">setId</a>
          </li>
          <li>
            <a href="#setName">setName</a>
          </li>
          <li>
            <a href="#start">start</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Component\HttpFoundation\Session\Storage\</span>SessionStorageInterface</h2>
        <div class="file-notice">
          <p>StorageInterface.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
          <li><b>Author: </b>Drak &lt;drak@zikula.org&gt;</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="clear"/>
            <h4><span class="label public">public</span>clear<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clear all session data in memory.</li>
            </p>
          </li>
          <li>
            <a name="getBag"/>
            <h4><span class="label public">public</span>getBag<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets a SessionBagInterface by name.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\InvalidArgumentException If the bag does not exist</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getId"/>
            <h4><span class="label public">public</span>getId<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the session ID</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The session ID or empty.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMetadataBag"/>
            <h4><span class="label public">public</span>getMetadataBag<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the session name</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The session name.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isStarted"/>
            <h4><span class="label public">public</span>isStarted<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the session is started.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>True if started, false otherwise.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="regenerate"/>
            <h4><span class="label public">public</span>regenerate<span style="font-size:90%;">( <span class="param-type"><span title="Boolean">Boolean</span></span><strong> $destroy</strong>, <span class="param-type">integer</span><strong> $lifetime</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Regenerates id that represents this storage.<pre>This method must invoke session_regenerate_id($destroy) unless
this interface is used for a storage object designed for unit
or functional testing where a real PHP session would interfere
with testing.

Note regenerate+destroy should not clear the session data in memory
only delete the session data from persistent storage.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$destroy</code> - Destroy session when regenerating?</li>
                <li><code>$lifetime</code> - Sets the cookie lifetime for the session cookie. A null value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>True if session regenerated, false if error</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException If an error occurs while regenerating this storage</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerBag"/>
            <h4><span class="label public">public</span>registerBag<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Symfony_Component_HttpFoundation_Session_SessionBagInterface.xhtml">Symfony\Component\HttpFoundation\Session\SessionBagInterface</a></span><strong> $bag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Registers a SessionBagInterface for use.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$bag</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="save"/>
            <h4><span class="label public">public</span>save<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Force the session to be saved and closed.<pre>This method must invoke session_write_close() unless this interface is
used for a storage object design for unit or functional testing where
a real PHP session would interfere with testing, in which case it
it should actually persist the session data if required.</pre></li>
            </p>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException If the session is saved without being started, or if the session</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setId"/>
            <h4><span class="label public">public</span>setId<span style="font-size:90%;">( <span class="param-type">string</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the session ID</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$id</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setName"/>
            <h4><span class="label public">public</span>setName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the session name</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="start"/>
            <h4><span class="label public">public</span>start<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Starts the session.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>True if started.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException If something goes wrong starting the session.</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-40-g758636e - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
